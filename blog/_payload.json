[{"data":1,"prerenderedAt":4321},["ShallowReactive",2],{"blog":3},[4],{"id":5,"title":6,"body":7,"date":4312,"description":53,"extension":4313,"image":4314,"meta":4315,"navigation":193,"path":4316,"qk":4317,"seo":4318,"stem":4319,"tags":4314,"__hash__":4320},"blog/blog/202504/01.understand-proxy-and-reflcet.md","带你了解Proxy和Reflcet",{"type":8,"value":9,"toc":4288},"minimal",[10,15,20,47,97,120,124,127,426,430,435,441,790,816,820,825,1062,1079,1083,1088,1099,1108,1114,1122,1126,1129,1138,1219,1227,1312,1316,1319,1323,1328,1423,1428,1525,1531,1671,1675,1678,1840,1850,1858,2078,2090,2239,2243,2247,2252,2360,2363,2427,2433,2436,2441,2651,2659,2664,2882,2893,2905,2909,2913,3616,3620,4037,4041,4044,4284],[11,12,14],"h1",{"id":13},"一proxy代理","一、Proxy（代理）",[16,17,19],"h2",{"id":18},"_1基本概念","1.基本概念",[21,22,23,24,28,29,32,33,36,37,36,40,36,43,46],"p",{},"Proxy 对象用于创建一个对象的",[25,26,27],"code",{},"代理",",从而实现基本操作的",[25,30,31],{},"拦截","和自定义 （比如:",[25,34,35],{},"属性查找","、",[25,38,39],{},"赋值",[25,41,42],{},"枚举",[25,44,45],{},"函数调用","等",[48,49,54],"pre",{"className":50,"code":51,"language":52,"meta":53,"style":53},"language-js shiki shiki-themes github-dark vitesse-dark","const proxyObject = new Proxy(target, handler)\n","js","",[25,55,56],{"__ignoreMap":53},[57,58,61,65,69,73,76,80,84,88,91,94],"span",{"class":59,"line":60},"line",1,[57,62,64],{"class":63},"s8I54","const",[57,66,68],{"class":67},"sXTEK"," proxyObject",[57,70,72],{"class":71},"soRP2"," =",[57,74,75],{"class":63}," new",[57,77,79],{"class":78},"scd8n"," Proxy",[57,81,83],{"class":82},"sybYZ","(",[57,85,87],{"class":86},"sVbU4","target",[57,89,90],{"class":82},",",[57,92,93],{"class":86}," handler",[57,95,96],{"class":82},")\n",[98,99,100,106],"ul",{},[101,102,103,105],"li",{},[25,104,87],{},": 代理的目标对象",[101,107,108,111,112,115,116,119],{},[25,109,110],{},"handler",": 是一个对象,是定义代理对象行为的函数 。比如",[25,113,114],{},"get","捕捉器用于读取 target 的属性,",[25,117,118],{},"set","捕捉器用于写入 target 的属性,等等",[16,121,123],{"id":122},"_2proxy-对对象的拦截","2.Proxy 对对象的拦截",[21,125,126],{},"对一个对象的的属性进行读取或写入时,打印相关信息",[48,128,130],{"className":50,"code":129,"language":52,"meta":53,"style":53},"const target = {\n  name: 'John',\n  age: 18,\n}\n\nconst proxy = new Proxy(target, {\n  get(target, prop) {\n    console.log(`Getting ${prop}`)\n    return target[prop]\n  },\n  set(target, prop, value) {\n    console.log(`Setting ${prop} = ${value}`)\n    target[prop] = value\n  }\n})\n\nproxy.name = 'Jane' // Setting name = Jane\nproxy.name // Getting name, Jane\n",[25,131,132,144,168,182,188,195,217,238,273,290,296,319,355,373,379,385,390,414],{"__ignoreMap":53},[57,133,134,136,139,141],{"class":59,"line":60},[57,135,64],{"class":63},[57,137,138],{"class":67}," target",[57,140,72],{"class":71},[57,142,143],{"class":82}," {\n",[57,145,147,151,154,158,162,165],{"class":59,"line":146},2,[57,148,150],{"class":149},"sqmIX","  name",[57,152,153],{"class":82},":",[57,155,157],{"class":156},"sajHj"," '",[57,159,161],{"class":160},"sx1Rn","John",[57,163,164],{"class":156},"'",[57,166,167],{"class":82},",\n",[57,169,171,174,176,180],{"class":59,"line":170},3,[57,172,173],{"class":149},"  age",[57,175,153],{"class":82},[57,177,179],{"class":178},"svno3"," 18",[57,181,167],{"class":82},[57,183,185],{"class":59,"line":184},4,[57,186,187],{"class":82},"}\n",[57,189,191],{"class":59,"line":190},5,[57,192,194],{"emptyLinePlaceholder":193},true,"\n",[57,196,198,200,203,205,207,209,211,213,215],{"class":59,"line":197},6,[57,199,64],{"class":63},[57,201,202],{"class":67}," proxy",[57,204,72],{"class":71},[57,206,75],{"class":63},[57,208,79],{"class":78},[57,210,83],{"class":82},[57,212,87],{"class":86},[57,214,90],{"class":82},[57,216,143],{"class":82},[57,218,220,223,225,228,230,233,236],{"class":59,"line":219},7,[57,221,222],{"class":78},"  get",[57,224,83],{"class":82},[57,226,87],{"class":227},"sSfpy",[57,229,90],{"class":82},[57,231,232],{"class":227}," prop",[57,234,235],{"class":82},")",[57,237,143],{"class":82},[57,239,241,244,247,250,252,255,258,262,266,269,271],{"class":59,"line":240},8,[57,242,243],{"class":86},"    console",[57,245,246],{"class":82},".",[57,248,249],{"class":78},"log",[57,251,83],{"class":82},[57,253,254],{"class":156},"`",[57,256,257],{"class":160},"Getting ",[57,259,261],{"class":260},"sOPOU","${",[57,263,265],{"class":264},"sGUJ0","prop",[57,267,268],{"class":260},"}",[57,270,254],{"class":156},[57,272,96],{"class":82},[57,274,276,280,282,285,287],{"class":59,"line":275},9,[57,277,279],{"class":278},"scBr_","    return",[57,281,138],{"class":86},[57,283,284],{"class":82},"[",[57,286,265],{"class":86},[57,288,289],{"class":82},"]\n",[57,291,293],{"class":59,"line":292},10,[57,294,295],{"class":82},"  },\n",[57,297,299,302,304,306,308,310,312,315,317],{"class":59,"line":298},11,[57,300,301],{"class":78},"  set",[57,303,83],{"class":82},[57,305,87],{"class":227},[57,307,90],{"class":82},[57,309,232],{"class":227},[57,311,90],{"class":82},[57,313,314],{"class":227}," value",[57,316,235],{"class":82},[57,318,143],{"class":82},[57,320,322,324,326,328,330,332,335,337,339,341,344,346,349,351,353],{"class":59,"line":321},12,[57,323,243],{"class":86},[57,325,246],{"class":82},[57,327,249],{"class":78},[57,329,83],{"class":82},[57,331,254],{"class":156},[57,333,334],{"class":160},"Setting ",[57,336,261],{"class":260},[57,338,265],{"class":264},[57,340,268],{"class":260},[57,342,343],{"class":160}," = ",[57,345,261],{"class":260},[57,347,348],{"class":264},"value",[57,350,268],{"class":260},[57,352,254],{"class":156},[57,354,96],{"class":82},[57,356,358,361,363,365,368,370],{"class":59,"line":357},13,[57,359,360],{"class":86},"    target",[57,362,284],{"class":82},[57,364,265],{"class":86},[57,366,367],{"class":82},"]",[57,369,72],{"class":71},[57,371,372],{"class":86}," value\n",[57,374,376],{"class":59,"line":375},14,[57,377,378],{"class":82},"  }\n",[57,380,382],{"class":59,"line":381},15,[57,383,384],{"class":82},"})\n",[57,386,388],{"class":59,"line":387},16,[57,389,194],{"emptyLinePlaceholder":193},[57,391,393,396,398,401,403,405,408,410],{"class":59,"line":392},17,[57,394,395],{"class":86},"proxy",[57,397,246],{"class":82},[57,399,400],{"class":86},"name",[57,402,72],{"class":71},[57,404,157],{"class":156},[57,406,407],{"class":160},"Jane",[57,409,164],{"class":156},[57,411,413],{"class":412},"sKXKF"," // Setting name = Jane\n",[57,415,417,419,421,423],{"class":59,"line":416},18,[57,418,395],{"class":86},[57,420,246],{"class":82},[57,422,400],{"class":86},[57,424,425],{"class":412}," // Getting name, Jane\n",[16,427,429],{"id":428},"_3proxy-对对函数的拦截","3.Proxy 对对函数的拦截",[431,432,434],"h3",{"id":433},"_31-拦截函数调用-apply-陷阱","3.1 拦截函数调用 (apply 陷阱)",[436,437,438],"blockquote",{},[21,439,440],{},"apply 是 Proxy handler 对象中的一个特殊方法（陷阱）,它用于拦截函数调用操作。当代理的目标对象是一个函数,并且这个函数被调用时（如 proxy() 或 proxy.call()）,apply 陷阱就会被触发。",[48,442,444],{"className":50,"code":443,"language":52,"meta":53,"style":53},"const sum = (a, b) => a + b\n\nconst proxySum = new Proxy(sum, {\n  apply(target, thisArg, argArray) {\n    // target: 被代理的原始函数\n    // thisArg: 调用时的this值\n    // argArray: 调用时传递的参数数组\n    console.log(`function name: ${target.name}`) // 通过 target.name 获取函数名\n    console.log(`Calculating sum of ${argArray}`)\n    return target.apply(target, argArray)\n  },\n})\n\nconsole.log(proxySum(1, 2)) // Calculating sum of 1,2\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.apply(null, [3, 4])) // Calculating sum of 3,4\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.call(null, 5, 6)) // Calculating sum of 5,6\nconsole.log(proxySum.bind(null, 7, 8)()) // Calculating sum of 7,8\n",[25,445,446,480,484,506,529,534,539,544,577,603,624,628,632,636,666,671,712,716,752],{"__ignoreMap":53},[57,447,448,450,453,455,458,461,463,466,468,471,474,477],{"class":59,"line":60},[57,449,64],{"class":63},[57,451,452],{"class":78}," sum",[57,454,72],{"class":71},[57,456,457],{"class":82}," (",[57,459,460],{"class":227},"a",[57,462,90],{"class":82},[57,464,465],{"class":227}," b",[57,467,235],{"class":82},[57,469,470],{"class":71}," =>",[57,472,473],{"class":86}," a",[57,475,476],{"class":63}," +",[57,478,479],{"class":86}," b\n",[57,481,482],{"class":59,"line":146},[57,483,194],{"emptyLinePlaceholder":193},[57,485,486,488,491,493,495,497,499,502,504],{"class":59,"line":170},[57,487,64],{"class":63},[57,489,490],{"class":67}," proxySum",[57,492,72],{"class":71},[57,494,75],{"class":63},[57,496,79],{"class":78},[57,498,83],{"class":82},[57,500,501],{"class":86},"sum",[57,503,90],{"class":82},[57,505,143],{"class":82},[57,507,508,511,513,515,517,520,522,525,527],{"class":59,"line":184},[57,509,510],{"class":78},"  apply",[57,512,83],{"class":82},[57,514,87],{"class":227},[57,516,90],{"class":82},[57,518,519],{"class":227}," thisArg",[57,521,90],{"class":82},[57,523,524],{"class":227}," argArray",[57,526,235],{"class":82},[57,528,143],{"class":82},[57,530,531],{"class":59,"line":190},[57,532,533],{"class":412},"    // target: 被代理的原始函数\n",[57,535,536],{"class":59,"line":197},[57,537,538],{"class":412},"    // thisArg: 调用时的this值\n",[57,540,541],{"class":59,"line":219},[57,542,543],{"class":412},"    // argArray: 调用时传递的参数数组\n",[57,545,546,548,550,552,554,556,559,561,563,566,568,570,572,574],{"class":59,"line":240},[57,547,243],{"class":86},[57,549,246],{"class":82},[57,551,249],{"class":78},[57,553,83],{"class":82},[57,555,254],{"class":156},[57,557,558],{"class":160},"function name: ",[57,560,261],{"class":260},[57,562,87],{"class":264},[57,564,246],{"class":565},"snnN9",[57,567,400],{"class":264},[57,569,268],{"class":260},[57,571,254],{"class":156},[57,573,235],{"class":82},[57,575,576],{"class":412}," // 通过 target.name 获取函数名\n",[57,578,579,581,583,585,587,589,592,594,597,599,601],{"class":59,"line":275},[57,580,243],{"class":86},[57,582,246],{"class":82},[57,584,249],{"class":78},[57,586,83],{"class":82},[57,588,254],{"class":156},[57,590,591],{"class":160},"Calculating sum of ",[57,593,261],{"class":260},[57,595,596],{"class":264},"argArray",[57,598,268],{"class":260},[57,600,254],{"class":156},[57,602,96],{"class":82},[57,604,605,607,609,611,614,616,618,620,622],{"class":59,"line":292},[57,606,279],{"class":278},[57,608,138],{"class":86},[57,610,246],{"class":82},[57,612,613],{"class":78},"apply",[57,615,83],{"class":82},[57,617,87],{"class":86},[57,619,90],{"class":82},[57,621,524],{"class":86},[57,623,96],{"class":82},[57,625,626],{"class":59,"line":298},[57,627,295],{"class":82},[57,629,630],{"class":59,"line":321},[57,631,384],{"class":82},[57,633,634],{"class":59,"line":357},[57,635,194],{"emptyLinePlaceholder":193},[57,637,638,641,643,645,647,650,652,655,657,660,663],{"class":59,"line":375},[57,639,640],{"class":86},"console",[57,642,246],{"class":82},[57,644,249],{"class":78},[57,646,83],{"class":82},[57,648,649],{"class":78},"proxySum",[57,651,83],{"class":82},[57,653,654],{"class":178},"1",[57,656,90],{"class":82},[57,658,659],{"class":178}," 2",[57,661,662],{"class":82},"))",[57,664,665],{"class":412}," // Calculating sum of 1,2\n",[57,667,668],{"class":59,"line":381},[57,669,670],{"class":412},"// eslint-disable-next-line no-useless-call\n",[57,672,673,675,677,679,681,683,685,687,689,693,695,698,701,703,706,709],{"class":59,"line":387},[57,674,640],{"class":86},[57,676,246],{"class":82},[57,678,249],{"class":78},[57,680,83],{"class":82},[57,682,649],{"class":86},[57,684,246],{"class":82},[57,686,613],{"class":78},[57,688,83],{"class":82},[57,690,692],{"class":691},"smuiB","null",[57,694,90],{"class":82},[57,696,697],{"class":82}," [",[57,699,700],{"class":178},"3",[57,702,90],{"class":82},[57,704,705],{"class":178}," 4",[57,707,708],{"class":82},"]))",[57,710,711],{"class":412}," // Calculating sum of 3,4\n",[57,713,714],{"class":59,"line":392},[57,715,670],{"class":412},[57,717,718,720,722,724,726,728,730,733,735,737,739,742,744,747,749],{"class":59,"line":416},[57,719,640],{"class":86},[57,721,246],{"class":82},[57,723,249],{"class":78},[57,725,83],{"class":82},[57,727,649],{"class":86},[57,729,246],{"class":82},[57,731,732],{"class":78},"call",[57,734,83],{"class":82},[57,736,692],{"class":691},[57,738,90],{"class":82},[57,740,741],{"class":178}," 5",[57,743,90],{"class":82},[57,745,746],{"class":178}," 6",[57,748,662],{"class":82},[57,750,751],{"class":412}," // Calculating sum of 5,6\n",[57,753,755,757,759,761,763,765,767,770,772,774,776,779,781,784,787],{"class":59,"line":754},19,[57,756,640],{"class":86},[57,758,246],{"class":82},[57,760,249],{"class":78},[57,762,83],{"class":82},[57,764,649],{"class":86},[57,766,246],{"class":82},[57,768,769],{"class":78},"bind",[57,771,83],{"class":82},[57,773,692],{"class":691},[57,775,90],{"class":82},[57,777,778],{"class":178}," 7",[57,780,90],{"class":82},[57,782,783],{"class":178}," 8",[57,785,786],{"class":82},")())",[57,788,789],{"class":412}," // Calculating sum of 7,8\n",[98,791,792,801,811],{},[101,793,794,796,797,800],{},[25,795,87],{},": 被代理的原始函数对象,可以通过",[25,798,799],{},"target.name","获取被代理的函数的函数名",[101,802,803,806,807,810],{},[25,804,805],{},"thisArg",": 函数调用时的 ",[25,808,809],{},"this"," 值",[101,812,813,815],{},[25,814,596],{},": 调用时传递的参数组成的数组",[431,817,819],{"id":818},"_32-拦截构造函数调用-construct-陷阱","3.2 拦截构造函数调用 (construct 陷阱)",[436,821,822],{},[21,823,824],{},"construct 陷阱是 Proxy handler 中用于拦截 new 操作符调用的特殊方法。当使用 new 调用被代理的构造函数时,这个陷阱会被触发。",[48,826,828],{"className":50,"code":827,"language":52,"meta":53,"style":53},"class Person {\n  constructor(name, age) {\n    this.name = name\n    this.age = age\n  }\n}\n\nconst ProxyPerson = new Proxy(Person, {\n  construct(target, argArray, newTarget) {\n    // target:被代理的原始构造函数\n    // argumentsList:构造函数调用时传递的参数数组\n    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n    console.log(`Creating ${target.name} with args ${argArray}`)\n    // eslint-disable-next-line new-cap\n    return new target(...argArray)\n  }\n})\n\nconst person = new ProxyPerson('John', 30) // Creating Person with args John,30\n",[25,829,830,841,859,874,888,892,896,900,922,944,949,954,959,997,1002,1019,1023,1027,1031],{"__ignoreMap":53},[57,831,832,835,839],{"class":59,"line":60},[57,833,834],{"class":63},"class",[57,836,838],{"class":837},"s3iJD"," Person",[57,840,143],{"class":82},[57,842,843,846,848,850,852,855,857],{"class":59,"line":146},[57,844,845],{"class":63},"  constructor",[57,847,83],{"class":82},[57,849,400],{"class":227},[57,851,90],{"class":82},[57,853,854],{"class":227}," age",[57,856,235],{"class":82},[57,858,143],{"class":82},[57,860,861,865,867,869,871],{"class":59,"line":170},[57,862,864],{"class":863},"s_3qV","    this",[57,866,246],{"class":82},[57,868,400],{"class":86},[57,870,72],{"class":71},[57,872,873],{"class":86}," name\n",[57,875,876,878,880,883,885],{"class":59,"line":184},[57,877,864],{"class":863},[57,879,246],{"class":82},[57,881,882],{"class":86},"age",[57,884,72],{"class":71},[57,886,887],{"class":86}," age\n",[57,889,890],{"class":59,"line":190},[57,891,378],{"class":82},[57,893,894],{"class":59,"line":197},[57,895,187],{"class":82},[57,897,898],{"class":59,"line":219},[57,899,194],{"emptyLinePlaceholder":193},[57,901,902,904,907,909,911,913,915,918,920],{"class":59,"line":240},[57,903,64],{"class":63},[57,905,906],{"class":67}," ProxyPerson",[57,908,72],{"class":71},[57,910,75],{"class":63},[57,912,79],{"class":78},[57,914,83],{"class":82},[57,916,917],{"class":86},"Person",[57,919,90],{"class":82},[57,921,143],{"class":82},[57,923,924,927,929,931,933,935,937,940,942],{"class":59,"line":275},[57,925,926],{"class":78},"  construct",[57,928,83],{"class":82},[57,930,87],{"class":227},[57,932,90],{"class":82},[57,934,524],{"class":227},[57,936,90],{"class":82},[57,938,939],{"class":227}," newTarget",[57,941,235],{"class":82},[57,943,143],{"class":82},[57,945,946],{"class":59,"line":292},[57,947,948],{"class":412},"    // target:被代理的原始构造函数\n",[57,950,951],{"class":59,"line":298},[57,952,953],{"class":412},"    // argumentsList:构造函数调用时传递的参数数组\n",[57,955,956],{"class":59,"line":321},[57,957,958],{"class":412},"    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n",[57,960,961,963,965,967,969,971,974,976,978,980,982,984,987,989,991,993,995],{"class":59,"line":357},[57,962,243],{"class":86},[57,964,246],{"class":82},[57,966,249],{"class":78},[57,968,83],{"class":82},[57,970,254],{"class":156},[57,972,973],{"class":160},"Creating ",[57,975,261],{"class":260},[57,977,87],{"class":264},[57,979,246],{"class":565},[57,981,400],{"class":264},[57,983,268],{"class":260},[57,985,986],{"class":160}," with args ",[57,988,261],{"class":260},[57,990,596],{"class":264},[57,992,268],{"class":260},[57,994,254],{"class":156},[57,996,96],{"class":82},[57,998,999],{"class":59,"line":375},[57,1000,1001],{"class":412},"    // eslint-disable-next-line new-cap\n",[57,1003,1004,1006,1008,1010,1012,1015,1017],{"class":59,"line":381},[57,1005,279],{"class":278},[57,1007,75],{"class":63},[57,1009,138],{"class":78},[57,1011,83],{"class":82},[57,1013,1014],{"class":71},"...",[57,1016,596],{"class":86},[57,1018,96],{"class":82},[57,1020,1021],{"class":59,"line":387},[57,1022,378],{"class":82},[57,1024,1025],{"class":59,"line":392},[57,1026,384],{"class":82},[57,1028,1029],{"class":59,"line":416},[57,1030,194],{"emptyLinePlaceholder":193},[57,1032,1033,1035,1038,1040,1042,1044,1046,1048,1050,1052,1054,1057,1059],{"class":59,"line":754},[57,1034,64],{"class":63},[57,1036,1037],{"class":67}," person",[57,1039,72],{"class":71},[57,1041,75],{"class":63},[57,1043,906],{"class":78},[57,1045,83],{"class":82},[57,1047,164],{"class":156},[57,1049,161],{"class":160},[57,1051,164],{"class":156},[57,1053,90],{"class":82},[57,1055,1056],{"class":178}," 30",[57,1058,235],{"class":82},[57,1060,1061],{"class":412}," // Creating Person with args John,30\n",[98,1063,1064,1069,1073],{},[101,1065,1066,1068],{},[25,1067,87],{},": 被代理的原始函数对象,可以通过 target.name 获取被代理的函数的函数名",[101,1070,1071,815],{},[25,1072,596],{},[101,1074,1075,1078],{},[25,1076,1077],{},"newTarget",": 最初被调用的构造函数（通常是代理对象本身）",[11,1080,1082],{"id":1081},"二reflect反射","二、Reflect（反射）",[436,1084,1085],{},[21,1086,1087],{},"Reflect 是用于调用对象的基本操作（内部方法）",[436,1089,1090],{},[21,1091,1092,1093,1098],{},"对象的所有内部方法,参考链接:",[460,1094,1095],{"href":1095,"rel":1096},"https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf",[1097],"nofollow"," 第 44~46 页内容",[436,1100,1101],{},[21,1102,1103,1104],{},"内部方法与 Reflcet 方法对应表格,参考链接:",[460,1105,1106],{"href":1106,"rel":1107},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",[1097],[21,1109,1110,1113],{},[25,1111,1112],{},"Reflect","不是一个函数对象,因此它是不可构造的。并且 reflect 的所有属性和方法都是静态的。",[16,1115,1117,1118,1121],{"id":1116},"_1-使用reflcet和直接使用语法操作对象的区别","1. 使用",[25,1119,1120],{},"Reflcet","和直接使用语法操作对象的区别",[431,1123,1125],{"id":1124},"_11-返回值不同","1.1 返回值不同",[21,1127,1128],{},"例如: 给对象添加属性并设置值",[98,1130,1131],{},[101,1132,1133,1137],{},[1134,1135,1136],"strong",{},"直接设置",":返回设置的值（表达式的结果）",[48,1139,1141],{"className":50,"code":1140,"language":52,"meta":53,"style":53},"const obj = {}\nconst result = (obj.name = 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // jack\n",[25,1142,1143,1155,1184,1201],{"__ignoreMap":53},[57,1144,1145,1147,1150,1152],{"class":59,"line":60},[57,1146,64],{"class":63},[57,1148,1149],{"class":67}," obj",[57,1151,72],{"class":71},[57,1153,1154],{"class":82}," {}\n",[57,1156,1157,1159,1162,1164,1166,1169,1171,1173,1175,1177,1180,1182],{"class":59,"line":146},[57,1158,64],{"class":63},[57,1160,1161],{"class":67}," result",[57,1163,72],{"class":71},[57,1165,457],{"class":82},[57,1167,1168],{"class":86},"obj",[57,1170,246],{"class":82},[57,1172,400],{"class":86},[57,1174,72],{"class":71},[57,1176,157],{"class":156},[57,1178,1179],{"class":160},"jack",[57,1181,164],{"class":156},[57,1183,96],{"class":82},[57,1185,1186,1188,1190,1192,1194,1196,1198],{"class":59,"line":170},[57,1187,640],{"class":86},[57,1189,246],{"class":82},[57,1191,249],{"class":78},[57,1193,83],{"class":82},[57,1195,1168],{"class":86},[57,1197,235],{"class":82},[57,1199,1200],{"class":412}," // { name: 'jack' }\n",[57,1202,1203,1205,1207,1209,1211,1214,1216],{"class":59,"line":184},[57,1204,640],{"class":86},[57,1206,246],{"class":82},[57,1208,249],{"class":78},[57,1210,83],{"class":82},[57,1212,1213],{"class":86},"result",[57,1215,235],{"class":82},[57,1217,1218],{"class":412}," // jack\n",[98,1220,1221],{},[101,1222,1223,1226],{},[1134,1224,1225],{},"使用 Reflect",":返回一个布尔值,表示是否成功",[48,1228,1230],{"className":50,"code":1229,"language":52,"meta":53,"style":53},"const obj = {}\nconst result = Reflect.set(obj, 'name', 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // true\n",[25,1231,1232,1242,1279,1295],{"__ignoreMap":53},[57,1233,1234,1236,1238,1240],{"class":59,"line":60},[57,1235,64],{"class":63},[57,1237,1149],{"class":67},[57,1239,72],{"class":71},[57,1241,1154],{"class":82},[57,1243,1244,1246,1248,1250,1253,1255,1257,1259,1261,1263,1265,1267,1269,1271,1273,1275,1277],{"class":59,"line":146},[57,1245,64],{"class":63},[57,1247,1161],{"class":67},[57,1249,72],{"class":71},[57,1251,1252],{"class":86}," Reflect",[57,1254,246],{"class":82},[57,1256,118],{"class":78},[57,1258,83],{"class":82},[57,1260,1168],{"class":86},[57,1262,90],{"class":82},[57,1264,157],{"class":156},[57,1266,400],{"class":160},[57,1268,164],{"class":156},[57,1270,90],{"class":82},[57,1272,157],{"class":156},[57,1274,1179],{"class":160},[57,1276,164],{"class":156},[57,1278,96],{"class":82},[57,1280,1281,1283,1285,1287,1289,1291,1293],{"class":59,"line":170},[57,1282,640],{"class":86},[57,1284,246],{"class":82},[57,1286,249],{"class":78},[57,1288,83],{"class":82},[57,1290,1168],{"class":86},[57,1292,235],{"class":82},[57,1294,1200],{"class":412},[57,1296,1297,1299,1301,1303,1305,1307,1309],{"class":59,"line":184},[57,1298,640],{"class":86},[57,1300,246],{"class":82},[57,1302,249],{"class":78},[57,1304,83],{"class":82},[57,1306,1213],{"class":86},[57,1308,235],{"class":82},[57,1310,1311],{"class":412}," // true\n",[431,1313,1315],{"id":1314},"_12-处理不可写属性时的行为","1.2 处理不可写属性时的行为",[21,1317,1318],{},"例如:给对象的不可写属性赋值时",[21,1320,1321,153],{},[1134,1322,1136],{},[98,1324,1325],{},[101,1326,1327],{},"在严格模式下会抛出 TypeError",[48,1329,1331],{"className":50,"code":1330,"language":52,"meta":53,"style":53},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20 // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[25,1332,1333,1343,1353,1379,1390,1403,1407],{"__ignoreMap":53},[57,1334,1335,1337,1340],{"class":59,"line":60},[57,1336,164],{"class":156},[57,1338,1339],{"class":160},"use strict",[57,1341,1342],{"class":156},"'\n",[57,1344,1345,1347,1349,1351],{"class":59,"line":146},[57,1346,64],{"class":63},[57,1348,1149],{"class":67},[57,1350,72],{"class":71},[57,1352,1154],{"class":82},[57,1354,1355,1358,1360,1363,1365,1367,1369,1371,1373,1375,1377],{"class":59,"line":170},[57,1356,1357],{"class":86},"Object",[57,1359,246],{"class":82},[57,1361,1362],{"class":78},"defineProperty",[57,1364,83],{"class":82},[57,1366,1168],{"class":86},[57,1368,90],{"class":82},[57,1370,157],{"class":156},[57,1372,882],{"class":160},[57,1374,164],{"class":156},[57,1376,90],{"class":82},[57,1378,143],{"class":82},[57,1380,1381,1384,1386,1388],{"class":59,"line":184},[57,1382,1383],{"class":149},"  value",[57,1385,153],{"class":82},[57,1387,179],{"class":178},[57,1389,167],{"class":82},[57,1391,1392,1395,1397,1401],{"class":59,"line":190},[57,1393,1394],{"class":149},"  writeable",[57,1396,153],{"class":82},[57,1398,1400],{"class":1399},"sSBLT"," false",[57,1402,167],{"class":82},[57,1404,1405],{"class":59,"line":197},[57,1406,384],{"class":82},[57,1408,1409,1411,1413,1415,1417,1420],{"class":59,"line":219},[57,1410,1168],{"class":86},[57,1412,246],{"class":82},[57,1414,882],{"class":86},[57,1416,72],{"class":71},[57,1418,1419],{"class":178}," 20",[57,1421,1422],{"class":412}," // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[98,1424,1425],{},[101,1426,1427],{},"在非严格模式下静默失败",[48,1429,1431],{"className":50,"code":1430,"language":52,"meta":53,"style":53},"const obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20\nconsole.log(obj.age) // 18\n",[25,1432,1433,1443,1467,1477,1487,1491,1504],{"__ignoreMap":53},[57,1434,1435,1437,1439,1441],{"class":59,"line":60},[57,1436,64],{"class":63},[57,1438,1149],{"class":67},[57,1440,72],{"class":71},[57,1442,1154],{"class":82},[57,1444,1445,1447,1449,1451,1453,1455,1457,1459,1461,1463,1465],{"class":59,"line":146},[57,1446,1357],{"class":86},[57,1448,246],{"class":82},[57,1450,1362],{"class":78},[57,1452,83],{"class":82},[57,1454,1168],{"class":86},[57,1456,90],{"class":82},[57,1458,157],{"class":156},[57,1460,882],{"class":160},[57,1462,164],{"class":156},[57,1464,90],{"class":82},[57,1466,143],{"class":82},[57,1468,1469,1471,1473,1475],{"class":59,"line":170},[57,1470,1383],{"class":149},[57,1472,153],{"class":82},[57,1474,179],{"class":178},[57,1476,167],{"class":82},[57,1478,1479,1481,1483,1485],{"class":59,"line":184},[57,1480,1394],{"class":149},[57,1482,153],{"class":82},[57,1484,1400],{"class":1399},[57,1486,167],{"class":82},[57,1488,1489],{"class":59,"line":190},[57,1490,384],{"class":82},[57,1492,1493,1495,1497,1499,1501],{"class":59,"line":197},[57,1494,1168],{"class":86},[57,1496,246],{"class":82},[57,1498,882],{"class":86},[57,1500,72],{"class":71},[57,1502,1503],{"class":178}," 20\n",[57,1505,1506,1508,1510,1512,1514,1516,1518,1520,1522],{"class":59,"line":219},[57,1507,640],{"class":86},[57,1509,246],{"class":82},[57,1511,249],{"class":78},[57,1513,83],{"class":82},[57,1515,1168],{"class":86},[57,1517,246],{"class":82},[57,1519,882],{"class":86},[57,1521,235],{"class":82},[57,1523,1524],{"class":412}," // 18\n",[21,1526,1527,1530],{},[1134,1528,1529],{},"Reflect.set()",": 总是返回 false 而不抛出错误",[48,1532,1534],{"className":50,"code":1533,"language":52,"meta":53,"style":53},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nconst result = Reflect.set(obj, 'age', 20)\nconsole.log(result) // false\nconsole.log(obj.age) // 18\n",[25,1535,1536,1544,1554,1578,1588,1598,1602,1634,1651],{"__ignoreMap":53},[57,1537,1538,1540,1542],{"class":59,"line":60},[57,1539,164],{"class":156},[57,1541,1339],{"class":160},[57,1543,1342],{"class":156},[57,1545,1546,1548,1550,1552],{"class":59,"line":146},[57,1547,64],{"class":63},[57,1549,1149],{"class":67},[57,1551,72],{"class":71},[57,1553,1154],{"class":82},[57,1555,1556,1558,1560,1562,1564,1566,1568,1570,1572,1574,1576],{"class":59,"line":170},[57,1557,1357],{"class":86},[57,1559,246],{"class":82},[57,1561,1362],{"class":78},[57,1563,83],{"class":82},[57,1565,1168],{"class":86},[57,1567,90],{"class":82},[57,1569,157],{"class":156},[57,1571,882],{"class":160},[57,1573,164],{"class":156},[57,1575,90],{"class":82},[57,1577,143],{"class":82},[57,1579,1580,1582,1584,1586],{"class":59,"line":184},[57,1581,1383],{"class":149},[57,1583,153],{"class":82},[57,1585,179],{"class":178},[57,1587,167],{"class":82},[57,1589,1590,1592,1594,1596],{"class":59,"line":190},[57,1591,1394],{"class":149},[57,1593,153],{"class":82},[57,1595,1400],{"class":1399},[57,1597,167],{"class":82},[57,1599,1600],{"class":59,"line":197},[57,1601,384],{"class":82},[57,1603,1604,1606,1608,1610,1612,1614,1616,1618,1620,1622,1624,1626,1628,1630,1632],{"class":59,"line":219},[57,1605,64],{"class":63},[57,1607,1161],{"class":67},[57,1609,72],{"class":71},[57,1611,1252],{"class":86},[57,1613,246],{"class":82},[57,1615,118],{"class":78},[57,1617,83],{"class":82},[57,1619,1168],{"class":86},[57,1621,90],{"class":82},[57,1623,157],{"class":156},[57,1625,882],{"class":160},[57,1627,164],{"class":156},[57,1629,90],{"class":82},[57,1631,1419],{"class":178},[57,1633,96],{"class":82},[57,1635,1636,1638,1640,1642,1644,1646,1648],{"class":59,"line":240},[57,1637,640],{"class":86},[57,1639,246],{"class":82},[57,1641,249],{"class":78},[57,1643,83],{"class":82},[57,1645,1213],{"class":86},[57,1647,235],{"class":82},[57,1649,1650],{"class":412}," // false\n",[57,1652,1653,1655,1657,1659,1661,1663,1665,1667,1669],{"class":59,"line":275},[57,1654,640],{"class":86},[57,1656,246],{"class":82},[57,1658,249],{"class":78},[57,1660,83],{"class":82},[57,1662,1168],{"class":86},[57,1664,246],{"class":82},[57,1666,882],{"class":86},[57,1668,235],{"class":82},[57,1670,1524],{"class":412},[431,1672,1674],{"id":1673},"_13-指定-receiverthis","1.3 指定 receiver(this)",[21,1676,1677],{},"例如:对象中的 getter 的借用",[48,1679,1681],{"className":50,"code":1680,"language":52,"meta":53,"style":53},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nobj2.c = obj.c\nconsole.log(obj2.c) // 3 (不是7)\n",[25,1682,1683,1693,1705,1716,1728,1748,1752,1756,1760,1771,1782,1792,1796,1800,1819],{"__ignoreMap":53},[57,1684,1685,1687,1689,1691],{"class":59,"line":60},[57,1686,64],{"class":63},[57,1688,1149],{"class":67},[57,1690,72],{"class":71},[57,1692,143],{"class":82},[57,1694,1695,1698,1700,1703],{"class":59,"line":146},[57,1696,1697],{"class":149},"  a",[57,1699,153],{"class":82},[57,1701,1702],{"class":178}," 1",[57,1704,167],{"class":82},[57,1706,1707,1710,1712,1714],{"class":59,"line":170},[57,1708,1709],{"class":149},"  b",[57,1711,153],{"class":82},[57,1713,659],{"class":178},[57,1715,167],{"class":82},[57,1717,1718,1720,1723,1726],{"class":59,"line":184},[57,1719,222],{"class":63},[57,1721,1722],{"class":78}," c",[57,1724,1725],{"class":82},"()",[57,1727,143],{"class":82},[57,1729,1730,1732,1735,1737,1739,1741,1743,1745],{"class":59,"line":190},[57,1731,279],{"class":278},[57,1733,1734],{"class":863}," this",[57,1736,246],{"class":82},[57,1738,460],{"class":86},[57,1740,476],{"class":63},[57,1742,1734],{"class":863},[57,1744,246],{"class":82},[57,1746,1747],{"class":86},"b\n",[57,1749,1750],{"class":59,"line":197},[57,1751,378],{"class":82},[57,1753,1754],{"class":59,"line":219},[57,1755,187],{"class":82},[57,1757,1758],{"class":59,"line":240},[57,1759,194],{"emptyLinePlaceholder":193},[57,1761,1762,1764,1767,1769],{"class":59,"line":275},[57,1763,64],{"class":63},[57,1765,1766],{"class":67}," obj2",[57,1768,72],{"class":71},[57,1770,143],{"class":82},[57,1772,1773,1775,1777,1780],{"class":59,"line":292},[57,1774,1697],{"class":149},[57,1776,153],{"class":82},[57,1778,1779],{"class":178}," 3",[57,1781,167],{"class":82},[57,1783,1784,1786,1788,1790],{"class":59,"line":298},[57,1785,1709],{"class":149},[57,1787,153],{"class":82},[57,1789,705],{"class":178},[57,1791,167],{"class":82},[57,1793,1794],{"class":59,"line":321},[57,1795,187],{"class":82},[57,1797,1798],{"class":59,"line":357},[57,1799,194],{"emptyLinePlaceholder":193},[57,1801,1802,1805,1807,1810,1812,1814,1816],{"class":59,"line":375},[57,1803,1804],{"class":86},"obj2",[57,1806,246],{"class":82},[57,1808,1809],{"class":86},"c",[57,1811,72],{"class":71},[57,1813,1149],{"class":86},[57,1815,246],{"class":82},[57,1817,1818],{"class":86},"c\n",[57,1820,1821,1823,1825,1827,1829,1831,1833,1835,1837],{"class":59,"line":381},[57,1822,640],{"class":86},[57,1824,246],{"class":82},[57,1826,249],{"class":78},[57,1828,83],{"class":82},[57,1830,1804],{"class":86},[57,1832,246],{"class":82},[57,1834,1809],{"class":86},[57,1836,235],{"class":82},[57,1838,1839],{"class":412}," // 3 (不是7)\n",[21,1841,1842,1843,1846,1847,1849],{},"直接赋值只是复制了值,不会保持 ",[25,1844,1845],{},"getter"," 的动态计算特性, 无法直接实现对",[25,1848,1845],{},"的借用",[98,1851,1852],{},[101,1853,1854,1855,1857],{},"使用",[25,1856,769],{},"可以实现,但是需要手动获取属性描述符",[48,1859,1861],{"className":50,"code":1860,"language":52,"meta":53,"style":53},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\n// 获取 getter 函数\nconst descriptor = Object.getOwnPropertyDescriptor(obj, 'c') // 获取属性描述符\nconst getter = descriptor.get // 获取getter 函数\n\n// 绑定 this\nconst boundGetter = getter.bind(obj2)\nconsole.log(boundGetter()) // 7\n",[25,1862,1863,1873,1883,1893,1903,1921,1925,1929,1933,1943,1953,1963,1967,1971,1976,2010,2028,2032,2037,2058],{"__ignoreMap":53},[57,1864,1865,1867,1869,1871],{"class":59,"line":60},[57,1866,64],{"class":63},[57,1868,1149],{"class":67},[57,1870,72],{"class":71},[57,1872,143],{"class":82},[57,1874,1875,1877,1879,1881],{"class":59,"line":146},[57,1876,1697],{"class":149},[57,1878,153],{"class":82},[57,1880,1702],{"class":178},[57,1882,167],{"class":82},[57,1884,1885,1887,1889,1891],{"class":59,"line":170},[57,1886,1709],{"class":149},[57,1888,153],{"class":82},[57,1890,659],{"class":178},[57,1892,167],{"class":82},[57,1894,1895,1897,1899,1901],{"class":59,"line":184},[57,1896,222],{"class":63},[57,1898,1722],{"class":78},[57,1900,1725],{"class":82},[57,1902,143],{"class":82},[57,1904,1905,1907,1909,1911,1913,1915,1917,1919],{"class":59,"line":190},[57,1906,279],{"class":278},[57,1908,1734],{"class":863},[57,1910,246],{"class":82},[57,1912,460],{"class":86},[57,1914,476],{"class":63},[57,1916,1734],{"class":863},[57,1918,246],{"class":82},[57,1920,1747],{"class":86},[57,1922,1923],{"class":59,"line":197},[57,1924,378],{"class":82},[57,1926,1927],{"class":59,"line":219},[57,1928,187],{"class":82},[57,1930,1931],{"class":59,"line":240},[57,1932,194],{"emptyLinePlaceholder":193},[57,1934,1935,1937,1939,1941],{"class":59,"line":275},[57,1936,64],{"class":63},[57,1938,1766],{"class":67},[57,1940,72],{"class":71},[57,1942,143],{"class":82},[57,1944,1945,1947,1949,1951],{"class":59,"line":292},[57,1946,1697],{"class":149},[57,1948,153],{"class":82},[57,1950,1779],{"class":178},[57,1952,167],{"class":82},[57,1954,1955,1957,1959,1961],{"class":59,"line":298},[57,1956,1709],{"class":149},[57,1958,153],{"class":82},[57,1960,705],{"class":178},[57,1962,167],{"class":82},[57,1964,1965],{"class":59,"line":321},[57,1966,187],{"class":82},[57,1968,1969],{"class":59,"line":357},[57,1970,194],{"emptyLinePlaceholder":193},[57,1972,1973],{"class":59,"line":375},[57,1974,1975],{"class":412},"// 获取 getter 函数\n",[57,1977,1978,1980,1983,1985,1988,1990,1993,1995,1997,1999,2001,2003,2005,2007],{"class":59,"line":381},[57,1979,64],{"class":63},[57,1981,1982],{"class":67}," descriptor",[57,1984,72],{"class":71},[57,1986,1987],{"class":86}," Object",[57,1989,246],{"class":82},[57,1991,1992],{"class":78},"getOwnPropertyDescriptor",[57,1994,83],{"class":82},[57,1996,1168],{"class":86},[57,1998,90],{"class":82},[57,2000,157],{"class":156},[57,2002,1809],{"class":160},[57,2004,164],{"class":156},[57,2006,235],{"class":82},[57,2008,2009],{"class":412}," // 获取属性描述符\n",[57,2011,2012,2014,2017,2019,2021,2023,2025],{"class":59,"line":387},[57,2013,64],{"class":63},[57,2015,2016],{"class":67}," getter",[57,2018,72],{"class":71},[57,2020,1982],{"class":86},[57,2022,246],{"class":82},[57,2024,114],{"class":86},[57,2026,2027],{"class":412}," // 获取getter 函数\n",[57,2029,2030],{"class":59,"line":392},[57,2031,194],{"emptyLinePlaceholder":193},[57,2033,2034],{"class":59,"line":416},[57,2035,2036],{"class":412},"// 绑定 this\n",[57,2038,2039,2041,2044,2046,2048,2050,2052,2054,2056],{"class":59,"line":754},[57,2040,64],{"class":63},[57,2042,2043],{"class":67}," boundGetter",[57,2045,72],{"class":71},[57,2047,2016],{"class":86},[57,2049,246],{"class":82},[57,2051,769],{"class":78},[57,2053,83],{"class":82},[57,2055,1804],{"class":86},[57,2057,96],{"class":82},[57,2059,2061,2063,2065,2067,2069,2072,2075],{"class":59,"line":2060},20,[57,2062,640],{"class":86},[57,2064,246],{"class":82},[57,2066,249],{"class":78},[57,2068,83],{"class":82},[57,2070,2071],{"class":78},"boundGetter",[57,2073,2074],{"class":82},"())",[57,2076,2077],{"class":412}," // 7\n",[98,2079,2080],{},[101,2081,1854,2082,2084,2085,2087,2088,1849],{},[25,2083,1112],{},"改变",[25,2086,809],{},"可以直接实现",[25,2089,1845],{},[48,2091,2093],{"className":50,"code":2092,"language":52,"meta":53,"style":53},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nconsole.log(Reflect.get(obj, 'c', obj2)) // 7\n",[25,2094,2095,2105,2115,2125,2135,2153,2157,2161,2165,2175,2185,2195,2199,2203],{"__ignoreMap":53},[57,2096,2097,2099,2101,2103],{"class":59,"line":60},[57,2098,64],{"class":63},[57,2100,1149],{"class":67},[57,2102,72],{"class":71},[57,2104,143],{"class":82},[57,2106,2107,2109,2111,2113],{"class":59,"line":146},[57,2108,1697],{"class":149},[57,2110,153],{"class":82},[57,2112,1702],{"class":178},[57,2114,167],{"class":82},[57,2116,2117,2119,2121,2123],{"class":59,"line":170},[57,2118,1709],{"class":149},[57,2120,153],{"class":82},[57,2122,659],{"class":178},[57,2124,167],{"class":82},[57,2126,2127,2129,2131,2133],{"class":59,"line":184},[57,2128,222],{"class":63},[57,2130,1722],{"class":78},[57,2132,1725],{"class":82},[57,2134,143],{"class":82},[57,2136,2137,2139,2141,2143,2145,2147,2149,2151],{"class":59,"line":190},[57,2138,279],{"class":278},[57,2140,1734],{"class":863},[57,2142,246],{"class":82},[57,2144,460],{"class":86},[57,2146,476],{"class":63},[57,2148,1734],{"class":863},[57,2150,246],{"class":82},[57,2152,1747],{"class":86},[57,2154,2155],{"class":59,"line":197},[57,2156,378],{"class":82},[57,2158,2159],{"class":59,"line":219},[57,2160,187],{"class":82},[57,2162,2163],{"class":59,"line":240},[57,2164,194],{"emptyLinePlaceholder":193},[57,2166,2167,2169,2171,2173],{"class":59,"line":275},[57,2168,64],{"class":63},[57,2170,1766],{"class":67},[57,2172,72],{"class":71},[57,2174,143],{"class":82},[57,2176,2177,2179,2181,2183],{"class":59,"line":292},[57,2178,1697],{"class":149},[57,2180,153],{"class":82},[57,2182,1779],{"class":178},[57,2184,167],{"class":82},[57,2186,2187,2189,2191,2193],{"class":59,"line":298},[57,2188,1709],{"class":149},[57,2190,153],{"class":82},[57,2192,705],{"class":178},[57,2194,167],{"class":82},[57,2196,2197],{"class":59,"line":321},[57,2198,187],{"class":82},[57,2200,2201],{"class":59,"line":357},[57,2202,194],{"emptyLinePlaceholder":193},[57,2204,2205,2207,2209,2211,2213,2215,2217,2219,2221,2223,2225,2227,2229,2231,2233,2235,2237],{"class":59,"line":375},[57,2206,640],{"class":86},[57,2208,246],{"class":82},[57,2210,249],{"class":78},[57,2212,83],{"class":82},[57,2214,1112],{"class":86},[57,2216,246],{"class":82},[57,2218,114],{"class":78},[57,2220,83],{"class":82},[57,2222,1168],{"class":86},[57,2224,90],{"class":82},[57,2226,157],{"class":156},[57,2228,1809],{"class":160},[57,2230,164],{"class":156},[57,2232,90],{"class":82},[57,2234,1766],{"class":86},[57,2236,662],{"class":82},[57,2238,2077],{"class":412},[16,2240,2242],{"id":2241},"_2-在-proxy-中使用-reflect-的作用","2. 在 Proxy 中使用 Reflect 的作用",[431,2244,2246],{"id":2245},"_21-保持默认行为","2.1 保持默认行为",[21,2248,2249,2251],{},[25,2250,1112],{},"方法提供了与 Proxy 陷阱一一对应的操作,可以方便地在自定义行为后保持默认行为",[48,2253,2255],{"className":50,"code":2254,"language":52,"meta":53,"style":53},"const proxy = new Proxy(target, {\n  get(target, prop, receiver) {\n    console.log(`Getting property ${prop}`)\n    // 使用 Reflect 保持默认的获取行为\n    return Reflect.get(target, prop, receiver)\n  }\n})\n",[25,2256,2257,2277,2298,2323,2328,2352,2356],{"__ignoreMap":53},[57,2258,2259,2261,2263,2265,2267,2269,2271,2273,2275],{"class":59,"line":60},[57,2260,64],{"class":63},[57,2262,202],{"class":67},[57,2264,72],{"class":71},[57,2266,75],{"class":63},[57,2268,79],{"class":78},[57,2270,83],{"class":82},[57,2272,87],{"class":86},[57,2274,90],{"class":82},[57,2276,143],{"class":82},[57,2278,2279,2281,2283,2285,2287,2289,2291,2294,2296],{"class":59,"line":146},[57,2280,222],{"class":78},[57,2282,83],{"class":82},[57,2284,87],{"class":227},[57,2286,90],{"class":82},[57,2288,232],{"class":227},[57,2290,90],{"class":82},[57,2292,2293],{"class":227}," receiver",[57,2295,235],{"class":82},[57,2297,143],{"class":82},[57,2299,2300,2302,2304,2306,2308,2310,2313,2315,2317,2319,2321],{"class":59,"line":170},[57,2301,243],{"class":86},[57,2303,246],{"class":82},[57,2305,249],{"class":78},[57,2307,83],{"class":82},[57,2309,254],{"class":156},[57,2311,2312],{"class":160},"Getting property ",[57,2314,261],{"class":260},[57,2316,265],{"class":264},[57,2318,268],{"class":260},[57,2320,254],{"class":156},[57,2322,96],{"class":82},[57,2324,2325],{"class":59,"line":184},[57,2326,2327],{"class":412},"    // 使用 Reflect 保持默认的获取行为\n",[57,2329,2330,2332,2334,2336,2338,2340,2342,2344,2346,2348,2350],{"class":59,"line":190},[57,2331,279],{"class":278},[57,2333,1252],{"class":86},[57,2335,246],{"class":82},[57,2337,114],{"class":78},[57,2339,83],{"class":82},[57,2341,87],{"class":86},[57,2343,90],{"class":82},[57,2345,232],{"class":86},[57,2347,90],{"class":82},[57,2349,2293],{"class":86},[57,2351,96],{"class":82},[57,2353,2354],{"class":59,"line":197},[57,2355,378],{"class":82},[57,2357,2358],{"class":59,"line":219},[57,2359,384],{"class":82},[21,2361,2362],{},"Reflect 方法提供了与 Proxy 陷阱完美对应,使代码更一致",[2364,2365,2366,2379],"table",{},[2367,2368,2369],"thead",{},[2370,2371,2372,2376],"tr",{},[2373,2374,2375],"th",{},"Proxy 陷阱",[2373,2377,2378],{},"Reflect 方法",[2380,2381,2382,2390,2396,2404,2412,2419],"tbody",{},[2370,2383,2384,2387],{},[2385,2386,114],"td",{},[2385,2388,2389],{},"Reflect.get()",[2370,2391,2392,2394],{},[2385,2393,118],{},[2385,2395,1529],{},[2370,2397,2398,2401],{},[2385,2399,2400],{},"has",[2385,2402,2403],{},"Reflect.has()",[2370,2405,2406,2409],{},[2385,2407,2408],{},"deleteProperty",[2385,2410,2411],{},"Reflect.deleteProperty()",[2370,2413,2414,2416],{},[2385,2415,613],{},[2385,2417,2418],{},"Reflect.apply()",[2370,2420,2421,2424],{},[2385,2422,2423],{},"construct",[2385,2425,2426],{},"Reflect.construct()",[431,2428,2430,2431],{"id":2429},"_22-确保正确的this","2.2 确保正确的",[25,2432,809],{},[21,2434,2435],{},"例如: 在存在继承的对象中",[98,2437,2438],{},[101,2439,2440],{},"直接通过 target 访问",[48,2442,2444],{"className":50,"code":2443,"language":52,"meta":53,"style":53},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop) {\n    return target[prop] // 直接使用 target 会导致 this 绑定问题\n  }\n})\n\nconst obj2 = Object.create(proxy) // 继承proxy\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 3\n",[25,2445,2446,2456,2466,2476,2486,2504,2508,2512,2516,2536,2552,2567,2571,2575,2579,2603,2616,2630],{"__ignoreMap":53},[57,2447,2448,2450,2452,2454],{"class":59,"line":60},[57,2449,64],{"class":63},[57,2451,1149],{"class":67},[57,2453,72],{"class":71},[57,2455,143],{"class":82},[57,2457,2458,2460,2462,2464],{"class":59,"line":146},[57,2459,1697],{"class":149},[57,2461,153],{"class":82},[57,2463,1702],{"class":178},[57,2465,167],{"class":82},[57,2467,2468,2470,2472,2474],{"class":59,"line":170},[57,2469,1709],{"class":149},[57,2471,153],{"class":82},[57,2473,659],{"class":178},[57,2475,167],{"class":82},[57,2477,2478,2480,2482,2484],{"class":59,"line":184},[57,2479,222],{"class":63},[57,2481,1722],{"class":78},[57,2483,1725],{"class":82},[57,2485,143],{"class":82},[57,2487,2488,2490,2492,2494,2496,2498,2500,2502],{"class":59,"line":190},[57,2489,279],{"class":278},[57,2491,1734],{"class":863},[57,2493,246],{"class":82},[57,2495,460],{"class":86},[57,2497,476],{"class":63},[57,2499,1734],{"class":863},[57,2501,246],{"class":82},[57,2503,1747],{"class":86},[57,2505,2506],{"class":59,"line":197},[57,2507,378],{"class":82},[57,2509,2510],{"class":59,"line":219},[57,2511,187],{"class":82},[57,2513,2514],{"class":59,"line":240},[57,2515,194],{"emptyLinePlaceholder":193},[57,2517,2518,2520,2522,2524,2526,2528,2530,2532,2534],{"class":59,"line":275},[57,2519,64],{"class":63},[57,2521,202],{"class":67},[57,2523,72],{"class":71},[57,2525,75],{"class":63},[57,2527,79],{"class":78},[57,2529,83],{"class":82},[57,2531,1168],{"class":86},[57,2533,90],{"class":82},[57,2535,143],{"class":82},[57,2537,2538,2540,2542,2544,2546,2548,2550],{"class":59,"line":292},[57,2539,222],{"class":78},[57,2541,83],{"class":82},[57,2543,87],{"class":227},[57,2545,90],{"class":82},[57,2547,232],{"class":227},[57,2549,235],{"class":82},[57,2551,143],{"class":82},[57,2553,2554,2556,2558,2560,2562,2564],{"class":59,"line":298},[57,2555,279],{"class":278},[57,2557,138],{"class":86},[57,2559,284],{"class":82},[57,2561,265],{"class":86},[57,2563,367],{"class":82},[57,2565,2566],{"class":412}," // 直接使用 target 会导致 this 绑定问题\n",[57,2568,2569],{"class":59,"line":321},[57,2570,378],{"class":82},[57,2572,2573],{"class":59,"line":357},[57,2574,384],{"class":82},[57,2576,2577],{"class":59,"line":375},[57,2578,194],{"emptyLinePlaceholder":193},[57,2580,2581,2583,2585,2587,2589,2591,2594,2596,2598,2600],{"class":59,"line":381},[57,2582,64],{"class":63},[57,2584,1766],{"class":67},[57,2586,72],{"class":71},[57,2588,1987],{"class":86},[57,2590,246],{"class":82},[57,2592,2593],{"class":78},"create",[57,2595,83],{"class":82},[57,2597,395],{"class":86},[57,2599,235],{"class":82},[57,2601,2602],{"class":412}," // 继承proxy\n",[57,2604,2605,2607,2609,2611,2613],{"class":59,"line":387},[57,2606,1804],{"class":86},[57,2608,246],{"class":82},[57,2610,460],{"class":86},[57,2612,72],{"class":71},[57,2614,2615],{"class":178}," 3\n",[57,2617,2618,2620,2622,2625,2627],{"class":59,"line":392},[57,2619,1804],{"class":86},[57,2621,246],{"class":82},[57,2623,2624],{"class":86},"b",[57,2626,72],{"class":71},[57,2628,2629],{"class":178}," 4\n",[57,2631,2632,2634,2636,2638,2640,2642,2644,2646,2648],{"class":59,"line":416},[57,2633,640],{"class":86},[57,2635,246],{"class":82},[57,2637,249],{"class":78},[57,2639,83],{"class":82},[57,2641,1804],{"class":86},[57,2643,246],{"class":82},[57,2645,1809],{"class":86},[57,2647,235],{"class":82},[57,2649,2650],{"class":412}," // 3\n",[436,2652,2653],{},[21,2654,2655,2656,2658],{},"我们期望 obj2.c 应该计算 obj2.a + obj2.b,即 3 + 4 = 7\n实际输出却是 3,这是因为:\na. obj2.c 触发 proxy 的 get 陷阱\nb. 陷阱中直接返回 target ",[57,2657,265],{}," （即 obj.c）\nc. 当 obj.c 的 getter 执行时,this 指向的是 obj 而非 obj2\nd. 所以计算的是 obj.a + obj.b（1 + 2 = 3）",[98,2660,2661],{},[101,2662,2663],{},"使用 Reflect,传递 receiver",[48,2665,2667],{"className":50,"code":2666,"language":52,"meta":53,"style":53},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop, receiver) {\n    return Reflect.get(target, prop, receiver) // receiver 参数会自动指向最初发起调用的对象\n  }\n})\n\nconst obj2 = Object.create(proxy)\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 7\n",[25,2668,2669,2679,2689,2699,2709,2727,2731,2735,2739,2759,2779,2806,2810,2814,2818,2838,2850,2862],{"__ignoreMap":53},[57,2670,2671,2673,2675,2677],{"class":59,"line":60},[57,2672,64],{"class":63},[57,2674,1149],{"class":67},[57,2676,72],{"class":71},[57,2678,143],{"class":82},[57,2680,2681,2683,2685,2687],{"class":59,"line":146},[57,2682,1697],{"class":149},[57,2684,153],{"class":82},[57,2686,1702],{"class":178},[57,2688,167],{"class":82},[57,2690,2691,2693,2695,2697],{"class":59,"line":170},[57,2692,1709],{"class":149},[57,2694,153],{"class":82},[57,2696,659],{"class":178},[57,2698,167],{"class":82},[57,2700,2701,2703,2705,2707],{"class":59,"line":184},[57,2702,222],{"class":63},[57,2704,1722],{"class":78},[57,2706,1725],{"class":82},[57,2708,143],{"class":82},[57,2710,2711,2713,2715,2717,2719,2721,2723,2725],{"class":59,"line":190},[57,2712,279],{"class":278},[57,2714,1734],{"class":863},[57,2716,246],{"class":82},[57,2718,460],{"class":86},[57,2720,476],{"class":63},[57,2722,1734],{"class":863},[57,2724,246],{"class":82},[57,2726,1747],{"class":86},[57,2728,2729],{"class":59,"line":197},[57,2730,378],{"class":82},[57,2732,2733],{"class":59,"line":219},[57,2734,187],{"class":82},[57,2736,2737],{"class":59,"line":240},[57,2738,194],{"emptyLinePlaceholder":193},[57,2740,2741,2743,2745,2747,2749,2751,2753,2755,2757],{"class":59,"line":275},[57,2742,64],{"class":63},[57,2744,202],{"class":67},[57,2746,72],{"class":71},[57,2748,75],{"class":63},[57,2750,79],{"class":78},[57,2752,83],{"class":82},[57,2754,1168],{"class":86},[57,2756,90],{"class":82},[57,2758,143],{"class":82},[57,2760,2761,2763,2765,2767,2769,2771,2773,2775,2777],{"class":59,"line":292},[57,2762,222],{"class":78},[57,2764,83],{"class":82},[57,2766,87],{"class":227},[57,2768,90],{"class":82},[57,2770,232],{"class":227},[57,2772,90],{"class":82},[57,2774,2293],{"class":227},[57,2776,235],{"class":82},[57,2778,143],{"class":82},[57,2780,2781,2783,2785,2787,2789,2791,2793,2795,2797,2799,2801,2803],{"class":59,"line":298},[57,2782,279],{"class":278},[57,2784,1252],{"class":86},[57,2786,246],{"class":82},[57,2788,114],{"class":78},[57,2790,83],{"class":82},[57,2792,87],{"class":86},[57,2794,90],{"class":82},[57,2796,232],{"class":86},[57,2798,90],{"class":82},[57,2800,2293],{"class":86},[57,2802,235],{"class":82},[57,2804,2805],{"class":412}," // receiver 参数会自动指向最初发起调用的对象\n",[57,2807,2808],{"class":59,"line":321},[57,2809,378],{"class":82},[57,2811,2812],{"class":59,"line":357},[57,2813,384],{"class":82},[57,2815,2816],{"class":59,"line":375},[57,2817,194],{"emptyLinePlaceholder":193},[57,2819,2820,2822,2824,2826,2828,2830,2832,2834,2836],{"class":59,"line":381},[57,2821,64],{"class":63},[57,2823,1766],{"class":67},[57,2825,72],{"class":71},[57,2827,1987],{"class":86},[57,2829,246],{"class":82},[57,2831,2593],{"class":78},[57,2833,83],{"class":82},[57,2835,395],{"class":86},[57,2837,96],{"class":82},[57,2839,2840,2842,2844,2846,2848],{"class":59,"line":387},[57,2841,1804],{"class":86},[57,2843,246],{"class":82},[57,2845,460],{"class":86},[57,2847,72],{"class":71},[57,2849,2615],{"class":178},[57,2851,2852,2854,2856,2858,2860],{"class":59,"line":392},[57,2853,1804],{"class":86},[57,2855,246],{"class":82},[57,2857,2624],{"class":86},[57,2859,72],{"class":71},[57,2861,2629],{"class":178},[57,2863,2864,2866,2868,2870,2872,2874,2876,2878,2880],{"class":59,"line":416},[57,2865,640],{"class":86},[57,2867,246],{"class":82},[57,2869,249],{"class":78},[57,2871,83],{"class":82},[57,2873,1804],{"class":86},[57,2875,246],{"class":82},[57,2877,1809],{"class":86},[57,2879,235],{"class":82},[57,2881,2077],{"class":412},[431,2883,2885,2886,2889,2890,2892],{"id":2884},"_23-总结在proxy中使用reflect的原因","2.3 总结:在",[25,2887,2888],{},"Proxy","中使用",[25,2891,1112],{},"的原因",[2894,2895,2896,2899,2902],"ol",{},[101,2897,2898],{},"保持代理透明性:直接操作可能绕过代理陷阱",[101,2900,2901],{},"维护不变式:确保代理行为与原始对象一致",[101,2903,2904],{},"处理特殊属性:正确处理 getter/setter 和原型链属性",[11,2906,2908],{"id":2907},"三proxy-与-reflect-的应用","三、Proxy 与 Reflect 的应用",[16,2910,2912],{"id":2911},"_1-实现观察者模式","1. 实现观察者模式",[48,2914,2916],{"className":50,"code":2915,"language":52,"meta":53,"style":53},"function createObservable(object) {\n  const observers = new Map() // 存储属性与观察者回调的映射\n  return new Proxy(object, {\n    set(target, p, newValue, receiver) {\n      const isSuccess = Reflect.set(target, p, newValue, receiver)\n      if (isSuccess && observers.has(p)) {\n        // 通知该属性的所有观察者\n        observers.get(p).forEach((cb) => {\n          cb(newValue)\n        })\n      }\n    },\n    get(target, p, receiver) {\n      if (p === 'observe') { // 通过 handler 的 get 陷阱暴露方法\n        return (p, callback) => {\n          if (observers.has(p)) {\n            observers.get(p).add(callback)\n          }\n          else {\n            observers.set(p, [callback])\n          }\n          return () => {\n            const callbacks = observers.get(p)\n            const index = callbacks.indexOf(callback)\n            if (index > -1) {\n              callbacks.splice(index, 1)\n            }\n          }\n        }\n      }\n      return Reflect.get(target, p, receiver)\n    },\n  })\n}\nconst person = createObservable({\n  name: 'John',\n  age: 30,\n})\n\nconst unsubscribe = person.observe('name', (newName) => {\n  console.log(`Name changed to ${newName}`)\n})\n\nperson.name = 'Jane' // 输出: Name changed to Jane\nunsubscribe()\nperson.name = 'John' // 不会输出任何内容\n",[25,2917,2918,2935,2955,2972,2999,3033,3060,3065,3096,3108,3113,3118,3123,3144,3170,3190,3212,3237,3242,3249,3270,3275,3288,3311,3334,3357,3378,3384,3389,3395,3400,3426,3431,3437,3442,3456,3471,3482,3487,3492,3529,3556,3561,3566,3587,3596],{"__ignoreMap":53},[57,2919,2920,2923,2926,2928,2931,2933],{"class":59,"line":60},[57,2921,2922],{"class":63},"function",[57,2924,2925],{"class":78}," createObservable",[57,2927,83],{"class":82},[57,2929,2930],{"class":227},"object",[57,2932,235],{"class":82},[57,2934,143],{"class":82},[57,2936,2937,2940,2943,2945,2947,2950,2952],{"class":59,"line":146},[57,2938,2939],{"class":63},"  const",[57,2941,2942],{"class":67}," observers",[57,2944,72],{"class":71},[57,2946,75],{"class":63},[57,2948,2949],{"class":78}," Map",[57,2951,1725],{"class":82},[57,2953,2954],{"class":412}," // 存储属性与观察者回调的映射\n",[57,2956,2957,2960,2962,2964,2966,2968,2970],{"class":59,"line":170},[57,2958,2959],{"class":278},"  return",[57,2961,75],{"class":63},[57,2963,79],{"class":78},[57,2965,83],{"class":82},[57,2967,2930],{"class":86},[57,2969,90],{"class":82},[57,2971,143],{"class":82},[57,2973,2974,2977,2979,2981,2983,2986,2988,2991,2993,2995,2997],{"class":59,"line":184},[57,2975,2976],{"class":78},"    set",[57,2978,83],{"class":82},[57,2980,87],{"class":227},[57,2982,90],{"class":82},[57,2984,2985],{"class":227}," p",[57,2987,90],{"class":82},[57,2989,2990],{"class":227}," newValue",[57,2992,90],{"class":82},[57,2994,2293],{"class":227},[57,2996,235],{"class":82},[57,2998,143],{"class":82},[57,3000,3001,3004,3007,3009,3011,3013,3015,3017,3019,3021,3023,3025,3027,3029,3031],{"class":59,"line":190},[57,3002,3003],{"class":63},"      const",[57,3005,3006],{"class":67}," isSuccess",[57,3008,72],{"class":71},[57,3010,1252],{"class":86},[57,3012,246],{"class":82},[57,3014,118],{"class":78},[57,3016,83],{"class":82},[57,3018,87],{"class":86},[57,3020,90],{"class":82},[57,3022,2985],{"class":86},[57,3024,90],{"class":82},[57,3026,2990],{"class":86},[57,3028,90],{"class":82},[57,3030,2293],{"class":86},[57,3032,96],{"class":82},[57,3034,3035,3038,3040,3043,3046,3048,3050,3052,3054,3056,3058],{"class":59,"line":197},[57,3036,3037],{"class":278},"      if",[57,3039,457],{"class":82},[57,3041,3042],{"class":86},"isSuccess",[57,3044,3045],{"class":63}," &&",[57,3047,2942],{"class":86},[57,3049,246],{"class":82},[57,3051,2400],{"class":78},[57,3053,83],{"class":82},[57,3055,21],{"class":86},[57,3057,662],{"class":82},[57,3059,143],{"class":82},[57,3061,3062],{"class":59,"line":219},[57,3063,3064],{"class":412},"        // 通知该属性的所有观察者\n",[57,3066,3067,3070,3072,3074,3076,3078,3081,3084,3087,3090,3092,3094],{"class":59,"line":240},[57,3068,3069],{"class":86},"        observers",[57,3071,246],{"class":82},[57,3073,114],{"class":78},[57,3075,83],{"class":82},[57,3077,21],{"class":86},[57,3079,3080],{"class":82},").",[57,3082,3083],{"class":78},"forEach",[57,3085,3086],{"class":82},"((",[57,3088,3089],{"class":227},"cb",[57,3091,235],{"class":82},[57,3093,470],{"class":71},[57,3095,143],{"class":82},[57,3097,3098,3101,3103,3106],{"class":59,"line":275},[57,3099,3100],{"class":78},"          cb",[57,3102,83],{"class":82},[57,3104,3105],{"class":86},"newValue",[57,3107,96],{"class":82},[57,3109,3110],{"class":59,"line":292},[57,3111,3112],{"class":82},"        })\n",[57,3114,3115],{"class":59,"line":298},[57,3116,3117],{"class":82},"      }\n",[57,3119,3120],{"class":59,"line":321},[57,3121,3122],{"class":82},"    },\n",[57,3124,3125,3128,3130,3132,3134,3136,3138,3140,3142],{"class":59,"line":357},[57,3126,3127],{"class":78},"    get",[57,3129,83],{"class":82},[57,3131,87],{"class":227},[57,3133,90],{"class":82},[57,3135,2985],{"class":227},[57,3137,90],{"class":82},[57,3139,2293],{"class":227},[57,3141,235],{"class":82},[57,3143,143],{"class":82},[57,3145,3146,3148,3150,3152,3155,3157,3160,3162,3164,3167],{"class":59,"line":375},[57,3147,3037],{"class":278},[57,3149,457],{"class":82},[57,3151,21],{"class":86},[57,3153,3154],{"class":63}," ===",[57,3156,157],{"class":156},[57,3158,3159],{"class":160},"observe",[57,3161,164],{"class":156},[57,3163,235],{"class":82},[57,3165,3166],{"class":82}," {",[57,3168,3169],{"class":412}," // 通过 handler 的 get 陷阱暴露方法\n",[57,3171,3172,3175,3177,3179,3181,3184,3186,3188],{"class":59,"line":381},[57,3173,3174],{"class":278},"        return",[57,3176,457],{"class":82},[57,3178,21],{"class":227},[57,3180,90],{"class":82},[57,3182,3183],{"class":227}," callback",[57,3185,235],{"class":82},[57,3187,470],{"class":71},[57,3189,143],{"class":82},[57,3191,3192,3195,3197,3200,3202,3204,3206,3208,3210],{"class":59,"line":387},[57,3193,3194],{"class":278},"          if",[57,3196,457],{"class":82},[57,3198,3199],{"class":86},"observers",[57,3201,246],{"class":82},[57,3203,2400],{"class":78},[57,3205,83],{"class":82},[57,3207,21],{"class":86},[57,3209,662],{"class":82},[57,3211,143],{"class":82},[57,3213,3214,3217,3219,3221,3223,3225,3227,3230,3232,3235],{"class":59,"line":392},[57,3215,3216],{"class":86},"            observers",[57,3218,246],{"class":82},[57,3220,114],{"class":78},[57,3222,83],{"class":82},[57,3224,21],{"class":86},[57,3226,3080],{"class":82},[57,3228,3229],{"class":78},"add",[57,3231,83],{"class":82},[57,3233,3234],{"class":86},"callback",[57,3236,96],{"class":82},[57,3238,3239],{"class":59,"line":416},[57,3240,3241],{"class":82},"          }\n",[57,3243,3244,3247],{"class":59,"line":754},[57,3245,3246],{"class":278},"          else",[57,3248,143],{"class":82},[57,3250,3251,3253,3255,3257,3259,3261,3263,3265,3267],{"class":59,"line":2060},[57,3252,3216],{"class":86},[57,3254,246],{"class":82},[57,3256,118],{"class":78},[57,3258,83],{"class":82},[57,3260,21],{"class":86},[57,3262,90],{"class":82},[57,3264,697],{"class":82},[57,3266,3234],{"class":86},[57,3268,3269],{"class":82},"])\n",[57,3271,3273],{"class":59,"line":3272},21,[57,3274,3241],{"class":82},[57,3276,3278,3281,3284,3286],{"class":59,"line":3277},22,[57,3279,3280],{"class":278},"          return",[57,3282,3283],{"class":82}," ()",[57,3285,470],{"class":71},[57,3287,143],{"class":82},[57,3289,3291,3294,3297,3299,3301,3303,3305,3307,3309],{"class":59,"line":3290},23,[57,3292,3293],{"class":63},"            const",[57,3295,3296],{"class":67}," callbacks",[57,3298,72],{"class":71},[57,3300,2942],{"class":86},[57,3302,246],{"class":82},[57,3304,114],{"class":78},[57,3306,83],{"class":82},[57,3308,21],{"class":86},[57,3310,96],{"class":82},[57,3312,3314,3316,3319,3321,3323,3325,3328,3330,3332],{"class":59,"line":3313},24,[57,3315,3293],{"class":63},[57,3317,3318],{"class":67}," index",[57,3320,72],{"class":71},[57,3322,3296],{"class":86},[57,3324,246],{"class":82},[57,3326,3327],{"class":78},"indexOf",[57,3329,83],{"class":82},[57,3331,3234],{"class":86},[57,3333,96],{"class":82},[57,3335,3337,3340,3342,3345,3348,3351,3353,3355],{"class":59,"line":3336},25,[57,3338,3339],{"class":278},"            if",[57,3341,457],{"class":82},[57,3343,3344],{"class":86},"index",[57,3346,3347],{"class":71}," >",[57,3349,3350],{"class":63}," -",[57,3352,654],{"class":178},[57,3354,235],{"class":82},[57,3356,143],{"class":82},[57,3358,3360,3363,3365,3368,3370,3372,3374,3376],{"class":59,"line":3359},26,[57,3361,3362],{"class":86},"              callbacks",[57,3364,246],{"class":82},[57,3366,3367],{"class":78},"splice",[57,3369,83],{"class":82},[57,3371,3344],{"class":86},[57,3373,90],{"class":82},[57,3375,1702],{"class":178},[57,3377,96],{"class":82},[57,3379,3381],{"class":59,"line":3380},27,[57,3382,3383],{"class":82},"            }\n",[57,3385,3387],{"class":59,"line":3386},28,[57,3388,3241],{"class":82},[57,3390,3392],{"class":59,"line":3391},29,[57,3393,3394],{"class":82},"        }\n",[57,3396,3398],{"class":59,"line":3397},30,[57,3399,3117],{"class":82},[57,3401,3403,3406,3408,3410,3412,3414,3416,3418,3420,3422,3424],{"class":59,"line":3402},31,[57,3404,3405],{"class":278},"      return",[57,3407,1252],{"class":86},[57,3409,246],{"class":82},[57,3411,114],{"class":78},[57,3413,83],{"class":82},[57,3415,87],{"class":86},[57,3417,90],{"class":82},[57,3419,2985],{"class":86},[57,3421,90],{"class":82},[57,3423,2293],{"class":86},[57,3425,96],{"class":82},[57,3427,3429],{"class":59,"line":3428},32,[57,3430,3122],{"class":82},[57,3432,3434],{"class":59,"line":3433},33,[57,3435,3436],{"class":82},"  })\n",[57,3438,3440],{"class":59,"line":3439},34,[57,3441,187],{"class":82},[57,3443,3445,3447,3449,3451,3453],{"class":59,"line":3444},35,[57,3446,64],{"class":63},[57,3448,1037],{"class":67},[57,3450,72],{"class":71},[57,3452,2925],{"class":78},[57,3454,3455],{"class":82},"({\n",[57,3457,3459,3461,3463,3465,3467,3469],{"class":59,"line":3458},36,[57,3460,150],{"class":149},[57,3462,153],{"class":82},[57,3464,157],{"class":156},[57,3466,161],{"class":160},[57,3468,164],{"class":156},[57,3470,167],{"class":82},[57,3472,3474,3476,3478,3480],{"class":59,"line":3473},37,[57,3475,173],{"class":149},[57,3477,153],{"class":82},[57,3479,1056],{"class":178},[57,3481,167],{"class":82},[57,3483,3485],{"class":59,"line":3484},38,[57,3486,384],{"class":82},[57,3488,3490],{"class":59,"line":3489},39,[57,3491,194],{"emptyLinePlaceholder":193},[57,3493,3495,3497,3500,3502,3504,3506,3508,3510,3512,3514,3516,3518,3520,3523,3525,3527],{"class":59,"line":3494},40,[57,3496,64],{"class":63},[57,3498,3499],{"class":67}," unsubscribe",[57,3501,72],{"class":71},[57,3503,1037],{"class":86},[57,3505,246],{"class":82},[57,3507,3159],{"class":78},[57,3509,83],{"class":82},[57,3511,164],{"class":156},[57,3513,400],{"class":160},[57,3515,164],{"class":156},[57,3517,90],{"class":82},[57,3519,457],{"class":82},[57,3521,3522],{"class":227},"newName",[57,3524,235],{"class":82},[57,3526,470],{"class":71},[57,3528,143],{"class":82},[57,3530,3532,3535,3537,3539,3541,3543,3546,3548,3550,3552,3554],{"class":59,"line":3531},41,[57,3533,3534],{"class":86},"  console",[57,3536,246],{"class":82},[57,3538,249],{"class":78},[57,3540,83],{"class":82},[57,3542,254],{"class":156},[57,3544,3545],{"class":160},"Name changed to ",[57,3547,261],{"class":260},[57,3549,3522],{"class":264},[57,3551,268],{"class":260},[57,3553,254],{"class":156},[57,3555,96],{"class":82},[57,3557,3559],{"class":59,"line":3558},42,[57,3560,384],{"class":82},[57,3562,3564],{"class":59,"line":3563},43,[57,3565,194],{"emptyLinePlaceholder":193},[57,3567,3569,3572,3574,3576,3578,3580,3582,3584],{"class":59,"line":3568},44,[57,3570,3571],{"class":86},"person",[57,3573,246],{"class":82},[57,3575,400],{"class":86},[57,3577,72],{"class":71},[57,3579,157],{"class":156},[57,3581,407],{"class":160},[57,3583,164],{"class":156},[57,3585,3586],{"class":412}," // 输出: Name changed to Jane\n",[57,3588,3590,3593],{"class":59,"line":3589},45,[57,3591,3592],{"class":78},"unsubscribe",[57,3594,3595],{"class":82},"()\n",[57,3597,3599,3601,3603,3605,3607,3609,3611,3613],{"class":59,"line":3598},46,[57,3600,3571],{"class":86},[57,3602,246],{"class":82},[57,3604,400],{"class":86},[57,3606,72],{"class":71},[57,3608,157],{"class":156},[57,3610,161],{"class":160},[57,3612,164],{"class":156},[57,3614,3615],{"class":412}," // 不会输出任何内容\n",[16,3617,3619],{"id":3618},"_2-权限控制","2. 权限控制",[48,3621,3623],{"className":50,"code":3622,"language":52,"meta":53,"style":53},"function createSecureObject(role) {\n  const data = {\n    sensitiveInfo: 'secret'\n  }\n  return new Proxy(data, {\n    get: (target, p, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.get(target, p, receiver)\n      }\n    },\n    set: (target, p, newValue, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.set(target, p, newValue, receiver)\n      }\n    }\n  })\n}\n\nconst admin = createSecureObject('admin')\nconsole.log(admin.sensitiveInfo) // secret\n\nconst user = createSecureObject('user')\nconsole.log(user.sensitiveInfo) // Error: Access Denied\n",[25,3624,3625,3641,3652,3666,3670,3687,3711,3747,3768,3772,3779,3803,3807,3811,3839,3871,3889,3893,3899,3927,3931,3936,3940,3944,3948,3969,3990,3994,4016],{"__ignoreMap":53},[57,3626,3627,3629,3632,3634,3637,3639],{"class":59,"line":60},[57,3628,2922],{"class":63},[57,3630,3631],{"class":78}," createSecureObject",[57,3633,83],{"class":82},[57,3635,3636],{"class":227},"role",[57,3638,235],{"class":82},[57,3640,143],{"class":82},[57,3642,3643,3645,3648,3650],{"class":59,"line":146},[57,3644,2939],{"class":63},[57,3646,3647],{"class":67}," data",[57,3649,72],{"class":71},[57,3651,143],{"class":82},[57,3653,3654,3657,3659,3661,3664],{"class":59,"line":170},[57,3655,3656],{"class":149},"    sensitiveInfo",[57,3658,153],{"class":82},[57,3660,157],{"class":156},[57,3662,3663],{"class":160},"secret",[57,3665,1342],{"class":156},[57,3667,3668],{"class":59,"line":184},[57,3669,378],{"class":82},[57,3671,3672,3674,3676,3678,3680,3683,3685],{"class":59,"line":190},[57,3673,2959],{"class":278},[57,3675,75],{"class":63},[57,3677,79],{"class":78},[57,3679,83],{"class":82},[57,3681,3682],{"class":86},"data",[57,3684,90],{"class":82},[57,3686,143],{"class":82},[57,3688,3689,3691,3693,3695,3697,3699,3701,3703,3705,3707,3709],{"class":59,"line":197},[57,3690,3127],{"class":78},[57,3692,153],{"class":82},[57,3694,457],{"class":82},[57,3696,87],{"class":227},[57,3698,90],{"class":82},[57,3700,2985],{"class":227},[57,3702,90],{"class":82},[57,3704,2293],{"class":227},[57,3706,235],{"class":82},[57,3708,470],{"class":71},[57,3710,143],{"class":82},[57,3712,3713,3715,3717,3719,3721,3723,3726,3728,3730,3733,3736,3738,3741,3743,3745],{"class":59,"line":219},[57,3714,3037],{"class":278},[57,3716,457],{"class":82},[57,3718,21],{"class":86},[57,3720,3154],{"class":63},[57,3722,157],{"class":156},[57,3724,3725],{"class":160},"sensitiveInfo",[57,3727,164],{"class":156},[57,3729,3045],{"class":63},[57,3731,3732],{"class":86}," role",[57,3734,3735],{"class":63}," !==",[57,3737,157],{"class":156},[57,3739,3740],{"class":160},"admin",[57,3742,164],{"class":156},[57,3744,235],{"class":82},[57,3746,143],{"class":82},[57,3748,3749,3752,3754,3757,3759,3761,3764,3766],{"class":59,"line":240},[57,3750,3751],{"class":278},"        throw",[57,3753,75],{"class":63},[57,3755,3756],{"class":78}," Error",[57,3758,83],{"class":82},[57,3760,164],{"class":156},[57,3762,3763],{"class":160},"Access Denied",[57,3765,164],{"class":156},[57,3767,96],{"class":82},[57,3769,3770],{"class":59,"line":275},[57,3771,3117],{"class":82},[57,3773,3774,3777],{"class":59,"line":292},[57,3775,3776],{"class":278},"      else",[57,3778,143],{"class":82},[57,3780,3781,3783,3785,3787,3789,3791,3793,3795,3797,3799,3801],{"class":59,"line":298},[57,3782,3174],{"class":278},[57,3784,1252],{"class":86},[57,3786,246],{"class":82},[57,3788,114],{"class":78},[57,3790,83],{"class":82},[57,3792,87],{"class":86},[57,3794,90],{"class":82},[57,3796,2985],{"class":86},[57,3798,90],{"class":82},[57,3800,2293],{"class":86},[57,3802,96],{"class":82},[57,3804,3805],{"class":59,"line":321},[57,3806,3117],{"class":82},[57,3808,3809],{"class":59,"line":357},[57,3810,3122],{"class":82},[57,3812,3813,3815,3817,3819,3821,3823,3825,3827,3829,3831,3833,3835,3837],{"class":59,"line":375},[57,3814,2976],{"class":78},[57,3816,153],{"class":82},[57,3818,457],{"class":82},[57,3820,87],{"class":227},[57,3822,90],{"class":82},[57,3824,2985],{"class":227},[57,3826,90],{"class":82},[57,3828,2990],{"class":227},[57,3830,90],{"class":82},[57,3832,2293],{"class":227},[57,3834,235],{"class":82},[57,3836,470],{"class":71},[57,3838,143],{"class":82},[57,3840,3841,3843,3845,3847,3849,3851,3853,3855,3857,3859,3861,3863,3865,3867,3869],{"class":59,"line":381},[57,3842,3037],{"class":278},[57,3844,457],{"class":82},[57,3846,21],{"class":86},[57,3848,3154],{"class":63},[57,3850,157],{"class":156},[57,3852,3725],{"class":160},[57,3854,164],{"class":156},[57,3856,3045],{"class":63},[57,3858,3732],{"class":86},[57,3860,3735],{"class":63},[57,3862,157],{"class":156},[57,3864,3740],{"class":160},[57,3866,164],{"class":156},[57,3868,235],{"class":82},[57,3870,143],{"class":82},[57,3872,3873,3875,3877,3879,3881,3883,3885,3887],{"class":59,"line":387},[57,3874,3751],{"class":278},[57,3876,75],{"class":63},[57,3878,3756],{"class":78},[57,3880,83],{"class":82},[57,3882,164],{"class":156},[57,3884,3763],{"class":160},[57,3886,164],{"class":156},[57,3888,96],{"class":82},[57,3890,3891],{"class":59,"line":392},[57,3892,3117],{"class":82},[57,3894,3895,3897],{"class":59,"line":416},[57,3896,3776],{"class":278},[57,3898,143],{"class":82},[57,3900,3901,3903,3905,3907,3909,3911,3913,3915,3917,3919,3921,3923,3925],{"class":59,"line":754},[57,3902,3174],{"class":278},[57,3904,1252],{"class":86},[57,3906,246],{"class":82},[57,3908,118],{"class":78},[57,3910,83],{"class":82},[57,3912,87],{"class":86},[57,3914,90],{"class":82},[57,3916,2985],{"class":86},[57,3918,90],{"class":82},[57,3920,2990],{"class":86},[57,3922,90],{"class":82},[57,3924,2293],{"class":86},[57,3926,96],{"class":82},[57,3928,3929],{"class":59,"line":2060},[57,3930,3117],{"class":82},[57,3932,3933],{"class":59,"line":3272},[57,3934,3935],{"class":82},"    }\n",[57,3937,3938],{"class":59,"line":3277},[57,3939,3436],{"class":82},[57,3941,3942],{"class":59,"line":3290},[57,3943,187],{"class":82},[57,3945,3946],{"class":59,"line":3313},[57,3947,194],{"emptyLinePlaceholder":193},[57,3949,3950,3952,3955,3957,3959,3961,3963,3965,3967],{"class":59,"line":3336},[57,3951,64],{"class":63},[57,3953,3954],{"class":67}," admin",[57,3956,72],{"class":71},[57,3958,3631],{"class":78},[57,3960,83],{"class":82},[57,3962,164],{"class":156},[57,3964,3740],{"class":160},[57,3966,164],{"class":156},[57,3968,96],{"class":82},[57,3970,3971,3973,3975,3977,3979,3981,3983,3985,3987],{"class":59,"line":3359},[57,3972,640],{"class":86},[57,3974,246],{"class":82},[57,3976,249],{"class":78},[57,3978,83],{"class":82},[57,3980,3740],{"class":86},[57,3982,246],{"class":82},[57,3984,3725],{"class":86},[57,3986,235],{"class":82},[57,3988,3989],{"class":412}," // secret\n",[57,3991,3992],{"class":59,"line":3380},[57,3993,194],{"emptyLinePlaceholder":193},[57,3995,3996,3998,4001,4003,4005,4007,4009,4012,4014],{"class":59,"line":3386},[57,3997,64],{"class":63},[57,3999,4000],{"class":67}," user",[57,4002,72],{"class":71},[57,4004,3631],{"class":78},[57,4006,83],{"class":82},[57,4008,164],{"class":156},[57,4010,4011],{"class":160},"user",[57,4013,164],{"class":156},[57,4015,96],{"class":82},[57,4017,4018,4020,4022,4024,4026,4028,4030,4032,4034],{"class":59,"line":3391},[57,4019,640],{"class":86},[57,4021,246],{"class":82},[57,4023,249],{"class":78},[57,4025,83],{"class":82},[57,4027,4011],{"class":86},[57,4029,246],{"class":82},[57,4031,3725],{"class":86},[57,4033,235],{"class":82},[57,4035,4036],{"class":412}," // Error: Access Denied\n",[16,4038,4040],{"id":4039},"_3-面向切面编程","3. 面向切面编程",[21,4042,4043],{},"通过 Proxy 拦截函数,可以对函数的执行添加行为,例如计算函数执行消耗的时间",[48,4045,4047],{"className":50,"code":4046,"language":52,"meta":53,"style":53},"function calcFuncExecTime(func) {\n  return new Proxy(func, {\n    apply(target, thisArg, args) {\n      const start = performance.now()\n      const result = Reflect.apply(target, thisArg, args)\n      const end = performance.now()\n      console.log(`function execution time ${(end - start).toFixed(3)}ms`)\n      return result\n    }\n  })\n}\n\nconst sum = calcFuncExecTime((a, b) => a + b)\nsum(1, 2) // function execution time 0.043ms\n",[25,4048,4049,4065,4081,4103,4122,4150,4167,4214,4221,4225,4229,4233,4237,4267],{"__ignoreMap":53},[57,4050,4051,4053,4056,4058,4061,4063],{"class":59,"line":60},[57,4052,2922],{"class":63},[57,4054,4055],{"class":78}," calcFuncExecTime",[57,4057,83],{"class":82},[57,4059,4060],{"class":227},"func",[57,4062,235],{"class":82},[57,4064,143],{"class":82},[57,4066,4067,4069,4071,4073,4075,4077,4079],{"class":59,"line":146},[57,4068,2959],{"class":278},[57,4070,75],{"class":63},[57,4072,79],{"class":78},[57,4074,83],{"class":82},[57,4076,4060],{"class":86},[57,4078,90],{"class":82},[57,4080,143],{"class":82},[57,4082,4083,4086,4088,4090,4092,4094,4096,4099,4101],{"class":59,"line":170},[57,4084,4085],{"class":78},"    apply",[57,4087,83],{"class":82},[57,4089,87],{"class":227},[57,4091,90],{"class":82},[57,4093,519],{"class":227},[57,4095,90],{"class":82},[57,4097,4098],{"class":227}," args",[57,4100,235],{"class":82},[57,4102,143],{"class":82},[57,4104,4105,4107,4110,4112,4115,4117,4120],{"class":59,"line":184},[57,4106,3003],{"class":63},[57,4108,4109],{"class":67}," start",[57,4111,72],{"class":71},[57,4113,4114],{"class":86}," performance",[57,4116,246],{"class":82},[57,4118,4119],{"class":78},"now",[57,4121,3595],{"class":82},[57,4123,4124,4126,4128,4130,4132,4134,4136,4138,4140,4142,4144,4146,4148],{"class":59,"line":190},[57,4125,3003],{"class":63},[57,4127,1161],{"class":67},[57,4129,72],{"class":71},[57,4131,1252],{"class":86},[57,4133,246],{"class":82},[57,4135,613],{"class":78},[57,4137,83],{"class":82},[57,4139,87],{"class":86},[57,4141,90],{"class":82},[57,4143,519],{"class":86},[57,4145,90],{"class":82},[57,4147,4098],{"class":86},[57,4149,96],{"class":82},[57,4151,4152,4154,4157,4159,4161,4163,4165],{"class":59,"line":197},[57,4153,3003],{"class":63},[57,4155,4156],{"class":67}," end",[57,4158,72],{"class":71},[57,4160,4114],{"class":86},[57,4162,246],{"class":82},[57,4164,4119],{"class":78},[57,4166,3595],{"class":82},[57,4168,4169,4172,4174,4176,4178,4180,4183,4185,4187,4190,4192,4194,4196,4199,4201,4203,4205,4207,4210,4212],{"class":59,"line":219},[57,4170,4171],{"class":86},"      console",[57,4173,246],{"class":82},[57,4175,249],{"class":78},[57,4177,83],{"class":82},[57,4179,254],{"class":156},[57,4181,4182],{"class":160},"function execution time ",[57,4184,261],{"class":260},[57,4186,83],{"class":565},[57,4188,4189],{"class":264},"end",[57,4191,3350],{"class":63},[57,4193,4109],{"class":264},[57,4195,3080],{"class":565},[57,4197,4198],{"class":78},"toFixed",[57,4200,83],{"class":565},[57,4202,700],{"class":178},[57,4204,235],{"class":565},[57,4206,268],{"class":260},[57,4208,4209],{"class":160},"ms",[57,4211,254],{"class":156},[57,4213,96],{"class":82},[57,4215,4216,4218],{"class":59,"line":240},[57,4217,3405],{"class":278},[57,4219,4220],{"class":86}," result\n",[57,4222,4223],{"class":59,"line":275},[57,4224,3935],{"class":82},[57,4226,4227],{"class":59,"line":292},[57,4228,3436],{"class":82},[57,4230,4231],{"class":59,"line":298},[57,4232,187],{"class":82},[57,4234,4235],{"class":59,"line":321},[57,4236,194],{"emptyLinePlaceholder":193},[57,4238,4239,4241,4243,4245,4247,4249,4251,4253,4255,4257,4259,4261,4263,4265],{"class":59,"line":357},[57,4240,64],{"class":63},[57,4242,452],{"class":67},[57,4244,72],{"class":71},[57,4246,4055],{"class":78},[57,4248,3086],{"class":82},[57,4250,460],{"class":227},[57,4252,90],{"class":82},[57,4254,465],{"class":227},[57,4256,235],{"class":82},[57,4258,470],{"class":71},[57,4260,473],{"class":86},[57,4262,476],{"class":63},[57,4264,465],{"class":86},[57,4266,96],{"class":82},[57,4268,4269,4271,4273,4275,4277,4279,4281],{"class":59,"line":375},[57,4270,501],{"class":78},[57,4272,83],{"class":82},[57,4274,654],{"class":178},[57,4276,90],{"class":82},[57,4278,659],{"class":178},[57,4280,235],{"class":82},[57,4282,4283],{"class":412}," // function execution time 0.043ms\n",[4285,4286,4287],"style",{},"html pre.shiki code .s8I54, html code.shiki .s8I54{--shiki-default:#F97583;--shiki-dark:#CB7676}html pre.shiki code .sXTEK, html code.shiki .sXTEK{--shiki-default:#79B8FF;--shiki-dark:#BD976A}html pre.shiki code .soRP2, html code.shiki .soRP2{--shiki-default:#F97583;--shiki-dark:#666666}html pre.shiki code .scd8n, html code.shiki .scd8n{--shiki-default:#B392F0;--shiki-dark:#80A665}html pre.shiki code .sybYZ, html code.shiki .sybYZ{--shiki-default:#E1E4E8;--shiki-dark:#666666}html pre.shiki code .sVbU4, html code.shiki .sVbU4{--shiki-default:#E1E4E8;--shiki-dark:#BD976A}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sqmIX, html code.shiki .sqmIX{--shiki-default:#E1E4E8;--shiki-dark:#B8A965}html pre.shiki code .sajHj, html code.shiki .sajHj{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D77}html pre.shiki code .sx1Rn, html code.shiki .sx1Rn{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D}html pre.shiki code .svno3, html code.shiki .svno3{--shiki-default:#79B8FF;--shiki-dark:#4C9A91}html pre.shiki code .sSfpy, html code.shiki .sSfpy{--shiki-default:#FFAB70;--shiki-dark:#BD976A}html pre.shiki code .sOPOU, html code.shiki .sOPOU{--shiki-default:#9ECBFF;--shiki-dark:#4D9375}html pre.shiki code .sGUJ0, html code.shiki .sGUJ0{--shiki-default:#E1E4E8;--shiki-dark:#C98A7D}html pre.shiki code .scBr_, html code.shiki .scBr_{--shiki-default:#F97583;--shiki-dark:#4D9375}html pre.shiki code .sKXKF, html code.shiki .sKXKF{--shiki-default:#6A737D;--shiki-dark:#758575DD}html pre.shiki code .snnN9, html code.shiki .snnN9{--shiki-default:#9ECBFF;--shiki-dark:#666666}html pre.shiki code .smuiB, html code.shiki .smuiB{--shiki-default:#79B8FF;--shiki-dark:#CB7676}html pre.shiki code .s3iJD, html code.shiki .s3iJD{--shiki-default:#B392F0;--shiki-dark:#5DA994}html pre.shiki code .s_3qV, html code.shiki .s_3qV{--shiki-default:#79B8FF;--shiki-dark:#C99076}html pre.shiki code .sSBLT, html code.shiki .sSBLT{--shiki-default:#79B8FF;--shiki-dark:#4D9375}",{"title":53,"searchDepth":146,"depth":146,"links":4289},[4290,4291,4292,4296,4302,4309,4310,4311],{"id":18,"depth":146,"text":19},{"id":122,"depth":146,"text":123},{"id":428,"depth":146,"text":429,"children":4293},[4294,4295],{"id":433,"depth":170,"text":434},{"id":818,"depth":170,"text":819},{"id":1116,"depth":146,"text":4297,"children":4298},"1. 使用Reflcet和直接使用语法操作对象的区别",[4299,4300,4301],{"id":1124,"depth":170,"text":1125},{"id":1314,"depth":170,"text":1315},{"id":1673,"depth":170,"text":1674},{"id":2241,"depth":146,"text":2242,"children":4303},[4304,4305,4307],{"id":2245,"depth":170,"text":2246},{"id":2429,"depth":170,"text":4306},"2.2 确保正确的this",{"id":2884,"depth":170,"text":4308},"2.3 总结:在Proxy中使用Reflect的原因",{"id":2911,"depth":146,"text":2912},{"id":3618,"depth":146,"text":3619},{"id":4039,"depth":146,"text":4040},"2025-04-11T00:00:00.000Z","md",null,{},"/blog/202504/understand-proxy-and-reflcet","qingkun",{"title":6,"description":53},"blog/202504/01.understand-proxy-and-reflcet","dW7oF2C6K7t4dMwy_pBVmQZiWSWXGT2dNGIxyC3slRE",1746713259008]