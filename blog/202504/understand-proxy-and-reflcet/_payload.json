[{"data":1,"prerenderedAt":4320},["ShallowReactive",2],{"/blog/202504/understand-proxy-and-reflcet":3},{"id":4,"title":5,"body":6,"date":4311,"description":52,"extension":4312,"image":4313,"meta":4314,"navigation":192,"path":4315,"qk":4316,"seo":4317,"stem":4318,"tags":4313,"__hash__":4319},"blog/blog/202504/01.understand-proxy-and-reflcet.md","带你了解Proxy和Reflcet",{"type":7,"value":8,"toc":4287},"minimal",[9,14,19,46,96,119,123,126,425,429,434,440,789,815,819,824,1061,1078,1082,1087,1098,1107,1113,1121,1125,1128,1137,1218,1226,1311,1315,1318,1322,1327,1422,1427,1524,1530,1670,1674,1677,1839,1849,1857,2077,2089,2238,2242,2246,2251,2359,2362,2426,2432,2435,2440,2650,2658,2663,2881,2892,2904,2908,2912,3615,3619,4036,4040,4043,4283],[10,11,13],"h1",{"id":12},"一proxy代理","一、Proxy（代理）",[15,16,18],"h2",{"id":17},"_1基本概念","1.基本概念",[20,21,22,23,27,28,31,32,35,36,35,39,35,42,45],"p",{},"Proxy 对象用于创建一个对象的",[24,25,26],"code",{},"代理",",从而实现基本操作的",[24,29,30],{},"拦截","和自定义 （比如:",[24,33,34],{},"属性查找","、",[24,37,38],{},"赋值",[24,40,41],{},"枚举",[24,43,44],{},"函数调用","等",[47,48,53],"pre",{"className":49,"code":50,"language":51,"meta":52,"style":52},"language-js shiki shiki-themes github-dark vitesse-dark","const proxyObject = new Proxy(target, handler)\n","js","",[24,54,55],{"__ignoreMap":52},[56,57,60,64,68,72,75,79,83,87,90,93],"span",{"class":58,"line":59},"line",1,[56,61,63],{"class":62},"s8I54","const",[56,65,67],{"class":66},"sXTEK"," proxyObject",[56,69,71],{"class":70},"soRP2"," =",[56,73,74],{"class":62}," new",[56,76,78],{"class":77},"scd8n"," Proxy",[56,80,82],{"class":81},"sybYZ","(",[56,84,86],{"class":85},"sVbU4","target",[56,88,89],{"class":81},",",[56,91,92],{"class":85}," handler",[56,94,95],{"class":81},")\n",[97,98,99,105],"ul",{},[100,101,102,104],"li",{},[24,103,86],{},": 代理的目标对象",[100,106,107,110,111,114,115,118],{},[24,108,109],{},"handler",": 是一个对象,是定义代理对象行为的函数 。比如",[24,112,113],{},"get","捕捉器用于读取 target 的属性,",[24,116,117],{},"set","捕捉器用于写入 target 的属性,等等",[15,120,122],{"id":121},"_2proxy-对对象的拦截","2.Proxy 对对象的拦截",[20,124,125],{},"对一个对象的的属性进行读取或写入时,打印相关信息",[47,127,129],{"className":49,"code":128,"language":51,"meta":52,"style":52},"const target = {\n  name: 'John',\n  age: 18,\n}\n\nconst proxy = new Proxy(target, {\n  get(target, prop) {\n    console.log(`Getting ${prop}`)\n    return target[prop]\n  },\n  set(target, prop, value) {\n    console.log(`Setting ${prop} = ${value}`)\n    target[prop] = value\n  }\n})\n\nproxy.name = 'Jane' // Setting name = Jane\nproxy.name // Getting name, Jane\n",[24,130,131,143,167,181,187,194,216,237,272,289,295,318,354,372,378,384,389,413],{"__ignoreMap":52},[56,132,133,135,138,140],{"class":58,"line":59},[56,134,63],{"class":62},[56,136,137],{"class":66}," target",[56,139,71],{"class":70},[56,141,142],{"class":81}," {\n",[56,144,146,150,153,157,161,164],{"class":58,"line":145},2,[56,147,149],{"class":148},"sqmIX","  name",[56,151,152],{"class":81},":",[56,154,156],{"class":155},"sajHj"," '",[56,158,160],{"class":159},"sx1Rn","John",[56,162,163],{"class":155},"'",[56,165,166],{"class":81},",\n",[56,168,170,173,175,179],{"class":58,"line":169},3,[56,171,172],{"class":148},"  age",[56,174,152],{"class":81},[56,176,178],{"class":177},"svno3"," 18",[56,180,166],{"class":81},[56,182,184],{"class":58,"line":183},4,[56,185,186],{"class":81},"}\n",[56,188,190],{"class":58,"line":189},5,[56,191,193],{"emptyLinePlaceholder":192},true,"\n",[56,195,197,199,202,204,206,208,210,212,214],{"class":58,"line":196},6,[56,198,63],{"class":62},[56,200,201],{"class":66}," proxy",[56,203,71],{"class":70},[56,205,74],{"class":62},[56,207,78],{"class":77},[56,209,82],{"class":81},[56,211,86],{"class":85},[56,213,89],{"class":81},[56,215,142],{"class":81},[56,217,219,222,224,227,229,232,235],{"class":58,"line":218},7,[56,220,221],{"class":77},"  get",[56,223,82],{"class":81},[56,225,86],{"class":226},"sSfpy",[56,228,89],{"class":81},[56,230,231],{"class":226}," prop",[56,233,234],{"class":81},")",[56,236,142],{"class":81},[56,238,240,243,246,249,251,254,257,261,265,268,270],{"class":58,"line":239},8,[56,241,242],{"class":85},"    console",[56,244,245],{"class":81},".",[56,247,248],{"class":77},"log",[56,250,82],{"class":81},[56,252,253],{"class":155},"`",[56,255,256],{"class":159},"Getting ",[56,258,260],{"class":259},"sOPOU","${",[56,262,264],{"class":263},"sGUJ0","prop",[56,266,267],{"class":259},"}",[56,269,253],{"class":155},[56,271,95],{"class":81},[56,273,275,279,281,284,286],{"class":58,"line":274},9,[56,276,278],{"class":277},"scBr_","    return",[56,280,137],{"class":85},[56,282,283],{"class":81},"[",[56,285,264],{"class":85},[56,287,288],{"class":81},"]\n",[56,290,292],{"class":58,"line":291},10,[56,293,294],{"class":81},"  },\n",[56,296,298,301,303,305,307,309,311,314,316],{"class":58,"line":297},11,[56,299,300],{"class":77},"  set",[56,302,82],{"class":81},[56,304,86],{"class":226},[56,306,89],{"class":81},[56,308,231],{"class":226},[56,310,89],{"class":81},[56,312,313],{"class":226}," value",[56,315,234],{"class":81},[56,317,142],{"class":81},[56,319,321,323,325,327,329,331,334,336,338,340,343,345,348,350,352],{"class":58,"line":320},12,[56,322,242],{"class":85},[56,324,245],{"class":81},[56,326,248],{"class":77},[56,328,82],{"class":81},[56,330,253],{"class":155},[56,332,333],{"class":159},"Setting ",[56,335,260],{"class":259},[56,337,264],{"class":263},[56,339,267],{"class":259},[56,341,342],{"class":159}," = ",[56,344,260],{"class":259},[56,346,347],{"class":263},"value",[56,349,267],{"class":259},[56,351,253],{"class":155},[56,353,95],{"class":81},[56,355,357,360,362,364,367,369],{"class":58,"line":356},13,[56,358,359],{"class":85},"    target",[56,361,283],{"class":81},[56,363,264],{"class":85},[56,365,366],{"class":81},"]",[56,368,71],{"class":70},[56,370,371],{"class":85}," value\n",[56,373,375],{"class":58,"line":374},14,[56,376,377],{"class":81},"  }\n",[56,379,381],{"class":58,"line":380},15,[56,382,383],{"class":81},"})\n",[56,385,387],{"class":58,"line":386},16,[56,388,193],{"emptyLinePlaceholder":192},[56,390,392,395,397,400,402,404,407,409],{"class":58,"line":391},17,[56,393,394],{"class":85},"proxy",[56,396,245],{"class":81},[56,398,399],{"class":85},"name",[56,401,71],{"class":70},[56,403,156],{"class":155},[56,405,406],{"class":159},"Jane",[56,408,163],{"class":155},[56,410,412],{"class":411},"sKXKF"," // Setting name = Jane\n",[56,414,416,418,420,422],{"class":58,"line":415},18,[56,417,394],{"class":85},[56,419,245],{"class":81},[56,421,399],{"class":85},[56,423,424],{"class":411}," // Getting name, Jane\n",[15,426,428],{"id":427},"_3proxy-对对函数的拦截","3.Proxy 对对函数的拦截",[430,431,433],"h3",{"id":432},"_31-拦截函数调用-apply-陷阱","3.1 拦截函数调用 (apply 陷阱)",[435,436,437],"blockquote",{},[20,438,439],{},"apply 是 Proxy handler 对象中的一个特殊方法（陷阱）,它用于拦截函数调用操作。当代理的目标对象是一个函数,并且这个函数被调用时（如 proxy() 或 proxy.call()）,apply 陷阱就会被触发。",[47,441,443],{"className":49,"code":442,"language":51,"meta":52,"style":52},"const sum = (a, b) => a + b\n\nconst proxySum = new Proxy(sum, {\n  apply(target, thisArg, argArray) {\n    // target: 被代理的原始函数\n    // thisArg: 调用时的this值\n    // argArray: 调用时传递的参数数组\n    console.log(`function name: ${target.name}`) // 通过 target.name 获取函数名\n    console.log(`Calculating sum of ${argArray}`)\n    return target.apply(target, argArray)\n  },\n})\n\nconsole.log(proxySum(1, 2)) // Calculating sum of 1,2\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.apply(null, [3, 4])) // Calculating sum of 3,4\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.call(null, 5, 6)) // Calculating sum of 5,6\nconsole.log(proxySum.bind(null, 7, 8)()) // Calculating sum of 7,8\n",[24,444,445,479,483,505,528,533,538,543,576,602,623,627,631,635,665,670,711,715,751],{"__ignoreMap":52},[56,446,447,449,452,454,457,460,462,465,467,470,473,476],{"class":58,"line":59},[56,448,63],{"class":62},[56,450,451],{"class":77}," sum",[56,453,71],{"class":70},[56,455,456],{"class":81}," (",[56,458,459],{"class":226},"a",[56,461,89],{"class":81},[56,463,464],{"class":226}," b",[56,466,234],{"class":81},[56,468,469],{"class":70}," =>",[56,471,472],{"class":85}," a",[56,474,475],{"class":62}," +",[56,477,478],{"class":85}," b\n",[56,480,481],{"class":58,"line":145},[56,482,193],{"emptyLinePlaceholder":192},[56,484,485,487,490,492,494,496,498,501,503],{"class":58,"line":169},[56,486,63],{"class":62},[56,488,489],{"class":66}," proxySum",[56,491,71],{"class":70},[56,493,74],{"class":62},[56,495,78],{"class":77},[56,497,82],{"class":81},[56,499,500],{"class":85},"sum",[56,502,89],{"class":81},[56,504,142],{"class":81},[56,506,507,510,512,514,516,519,521,524,526],{"class":58,"line":183},[56,508,509],{"class":77},"  apply",[56,511,82],{"class":81},[56,513,86],{"class":226},[56,515,89],{"class":81},[56,517,518],{"class":226}," thisArg",[56,520,89],{"class":81},[56,522,523],{"class":226}," argArray",[56,525,234],{"class":81},[56,527,142],{"class":81},[56,529,530],{"class":58,"line":189},[56,531,532],{"class":411},"    // target: 被代理的原始函数\n",[56,534,535],{"class":58,"line":196},[56,536,537],{"class":411},"    // thisArg: 调用时的this值\n",[56,539,540],{"class":58,"line":218},[56,541,542],{"class":411},"    // argArray: 调用时传递的参数数组\n",[56,544,545,547,549,551,553,555,558,560,562,565,567,569,571,573],{"class":58,"line":239},[56,546,242],{"class":85},[56,548,245],{"class":81},[56,550,248],{"class":77},[56,552,82],{"class":81},[56,554,253],{"class":155},[56,556,557],{"class":159},"function name: ",[56,559,260],{"class":259},[56,561,86],{"class":263},[56,563,245],{"class":564},"snnN9",[56,566,399],{"class":263},[56,568,267],{"class":259},[56,570,253],{"class":155},[56,572,234],{"class":81},[56,574,575],{"class":411}," // 通过 target.name 获取函数名\n",[56,577,578,580,582,584,586,588,591,593,596,598,600],{"class":58,"line":274},[56,579,242],{"class":85},[56,581,245],{"class":81},[56,583,248],{"class":77},[56,585,82],{"class":81},[56,587,253],{"class":155},[56,589,590],{"class":159},"Calculating sum of ",[56,592,260],{"class":259},[56,594,595],{"class":263},"argArray",[56,597,267],{"class":259},[56,599,253],{"class":155},[56,601,95],{"class":81},[56,603,604,606,608,610,613,615,617,619,621],{"class":58,"line":291},[56,605,278],{"class":277},[56,607,137],{"class":85},[56,609,245],{"class":81},[56,611,612],{"class":77},"apply",[56,614,82],{"class":81},[56,616,86],{"class":85},[56,618,89],{"class":81},[56,620,523],{"class":85},[56,622,95],{"class":81},[56,624,625],{"class":58,"line":297},[56,626,294],{"class":81},[56,628,629],{"class":58,"line":320},[56,630,383],{"class":81},[56,632,633],{"class":58,"line":356},[56,634,193],{"emptyLinePlaceholder":192},[56,636,637,640,642,644,646,649,651,654,656,659,662],{"class":58,"line":374},[56,638,639],{"class":85},"console",[56,641,245],{"class":81},[56,643,248],{"class":77},[56,645,82],{"class":81},[56,647,648],{"class":77},"proxySum",[56,650,82],{"class":81},[56,652,653],{"class":177},"1",[56,655,89],{"class":81},[56,657,658],{"class":177}," 2",[56,660,661],{"class":81},"))",[56,663,664],{"class":411}," // Calculating sum of 1,2\n",[56,666,667],{"class":58,"line":380},[56,668,669],{"class":411},"// eslint-disable-next-line no-useless-call\n",[56,671,672,674,676,678,680,682,684,686,688,692,694,697,700,702,705,708],{"class":58,"line":386},[56,673,639],{"class":85},[56,675,245],{"class":81},[56,677,248],{"class":77},[56,679,82],{"class":81},[56,681,648],{"class":85},[56,683,245],{"class":81},[56,685,612],{"class":77},[56,687,82],{"class":81},[56,689,691],{"class":690},"smuiB","null",[56,693,89],{"class":81},[56,695,696],{"class":81}," [",[56,698,699],{"class":177},"3",[56,701,89],{"class":81},[56,703,704],{"class":177}," 4",[56,706,707],{"class":81},"]))",[56,709,710],{"class":411}," // Calculating sum of 3,4\n",[56,712,713],{"class":58,"line":391},[56,714,669],{"class":411},[56,716,717,719,721,723,725,727,729,732,734,736,738,741,743,746,748],{"class":58,"line":415},[56,718,639],{"class":85},[56,720,245],{"class":81},[56,722,248],{"class":77},[56,724,82],{"class":81},[56,726,648],{"class":85},[56,728,245],{"class":81},[56,730,731],{"class":77},"call",[56,733,82],{"class":81},[56,735,691],{"class":690},[56,737,89],{"class":81},[56,739,740],{"class":177}," 5",[56,742,89],{"class":81},[56,744,745],{"class":177}," 6",[56,747,661],{"class":81},[56,749,750],{"class":411}," // Calculating sum of 5,6\n",[56,752,754,756,758,760,762,764,766,769,771,773,775,778,780,783,786],{"class":58,"line":753},19,[56,755,639],{"class":85},[56,757,245],{"class":81},[56,759,248],{"class":77},[56,761,82],{"class":81},[56,763,648],{"class":85},[56,765,245],{"class":81},[56,767,768],{"class":77},"bind",[56,770,82],{"class":81},[56,772,691],{"class":690},[56,774,89],{"class":81},[56,776,777],{"class":177}," 7",[56,779,89],{"class":81},[56,781,782],{"class":177}," 8",[56,784,785],{"class":81},")())",[56,787,788],{"class":411}," // Calculating sum of 7,8\n",[97,790,791,800,810],{},[100,792,793,795,796,799],{},[24,794,86],{},": 被代理的原始函数对象,可以通过",[24,797,798],{},"target.name","获取被代理的函数的函数名",[100,801,802,805,806,809],{},[24,803,804],{},"thisArg",": 函数调用时的 ",[24,807,808],{},"this"," 值",[100,811,812,814],{},[24,813,595],{},": 调用时传递的参数组成的数组",[430,816,818],{"id":817},"_32-拦截构造函数调用-construct-陷阱","3.2 拦截构造函数调用 (construct 陷阱)",[435,820,821],{},[20,822,823],{},"construct 陷阱是 Proxy handler 中用于拦截 new 操作符调用的特殊方法。当使用 new 调用被代理的构造函数时,这个陷阱会被触发。",[47,825,827],{"className":49,"code":826,"language":51,"meta":52,"style":52},"class Person {\n  constructor(name, age) {\n    this.name = name\n    this.age = age\n  }\n}\n\nconst ProxyPerson = new Proxy(Person, {\n  construct(target, argArray, newTarget) {\n    // target:被代理的原始构造函数\n    // argumentsList:构造函数调用时传递的参数数组\n    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n    console.log(`Creating ${target.name} with args ${argArray}`)\n    // eslint-disable-next-line new-cap\n    return new target(...argArray)\n  }\n})\n\nconst person = new ProxyPerson('John', 30) // Creating Person with args John,30\n",[24,828,829,840,858,873,887,891,895,899,921,943,948,953,958,996,1001,1018,1022,1026,1030],{"__ignoreMap":52},[56,830,831,834,838],{"class":58,"line":59},[56,832,833],{"class":62},"class",[56,835,837],{"class":836},"s3iJD"," Person",[56,839,142],{"class":81},[56,841,842,845,847,849,851,854,856],{"class":58,"line":145},[56,843,844],{"class":62},"  constructor",[56,846,82],{"class":81},[56,848,399],{"class":226},[56,850,89],{"class":81},[56,852,853],{"class":226}," age",[56,855,234],{"class":81},[56,857,142],{"class":81},[56,859,860,864,866,868,870],{"class":58,"line":169},[56,861,863],{"class":862},"s_3qV","    this",[56,865,245],{"class":81},[56,867,399],{"class":85},[56,869,71],{"class":70},[56,871,872],{"class":85}," name\n",[56,874,875,877,879,882,884],{"class":58,"line":183},[56,876,863],{"class":862},[56,878,245],{"class":81},[56,880,881],{"class":85},"age",[56,883,71],{"class":70},[56,885,886],{"class":85}," age\n",[56,888,889],{"class":58,"line":189},[56,890,377],{"class":81},[56,892,893],{"class":58,"line":196},[56,894,186],{"class":81},[56,896,897],{"class":58,"line":218},[56,898,193],{"emptyLinePlaceholder":192},[56,900,901,903,906,908,910,912,914,917,919],{"class":58,"line":239},[56,902,63],{"class":62},[56,904,905],{"class":66}," ProxyPerson",[56,907,71],{"class":70},[56,909,74],{"class":62},[56,911,78],{"class":77},[56,913,82],{"class":81},[56,915,916],{"class":85},"Person",[56,918,89],{"class":81},[56,920,142],{"class":81},[56,922,923,926,928,930,932,934,936,939,941],{"class":58,"line":274},[56,924,925],{"class":77},"  construct",[56,927,82],{"class":81},[56,929,86],{"class":226},[56,931,89],{"class":81},[56,933,523],{"class":226},[56,935,89],{"class":81},[56,937,938],{"class":226}," newTarget",[56,940,234],{"class":81},[56,942,142],{"class":81},[56,944,945],{"class":58,"line":291},[56,946,947],{"class":411},"    // target:被代理的原始构造函数\n",[56,949,950],{"class":58,"line":297},[56,951,952],{"class":411},"    // argumentsList:构造函数调用时传递的参数数组\n",[56,954,955],{"class":58,"line":320},[56,956,957],{"class":411},"    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n",[56,959,960,962,964,966,968,970,973,975,977,979,981,983,986,988,990,992,994],{"class":58,"line":356},[56,961,242],{"class":85},[56,963,245],{"class":81},[56,965,248],{"class":77},[56,967,82],{"class":81},[56,969,253],{"class":155},[56,971,972],{"class":159},"Creating ",[56,974,260],{"class":259},[56,976,86],{"class":263},[56,978,245],{"class":564},[56,980,399],{"class":263},[56,982,267],{"class":259},[56,984,985],{"class":159}," with args ",[56,987,260],{"class":259},[56,989,595],{"class":263},[56,991,267],{"class":259},[56,993,253],{"class":155},[56,995,95],{"class":81},[56,997,998],{"class":58,"line":374},[56,999,1000],{"class":411},"    // eslint-disable-next-line new-cap\n",[56,1002,1003,1005,1007,1009,1011,1014,1016],{"class":58,"line":380},[56,1004,278],{"class":277},[56,1006,74],{"class":62},[56,1008,137],{"class":77},[56,1010,82],{"class":81},[56,1012,1013],{"class":70},"...",[56,1015,595],{"class":85},[56,1017,95],{"class":81},[56,1019,1020],{"class":58,"line":386},[56,1021,377],{"class":81},[56,1023,1024],{"class":58,"line":391},[56,1025,383],{"class":81},[56,1027,1028],{"class":58,"line":415},[56,1029,193],{"emptyLinePlaceholder":192},[56,1031,1032,1034,1037,1039,1041,1043,1045,1047,1049,1051,1053,1056,1058],{"class":58,"line":753},[56,1033,63],{"class":62},[56,1035,1036],{"class":66}," person",[56,1038,71],{"class":70},[56,1040,74],{"class":62},[56,1042,905],{"class":77},[56,1044,82],{"class":81},[56,1046,163],{"class":155},[56,1048,160],{"class":159},[56,1050,163],{"class":155},[56,1052,89],{"class":81},[56,1054,1055],{"class":177}," 30",[56,1057,234],{"class":81},[56,1059,1060],{"class":411}," // Creating Person with args John,30\n",[97,1062,1063,1068,1072],{},[100,1064,1065,1067],{},[24,1066,86],{},": 被代理的原始函数对象,可以通过 target.name 获取被代理的函数的函数名",[100,1069,1070,814],{},[24,1071,595],{},[100,1073,1074,1077],{},[24,1075,1076],{},"newTarget",": 最初被调用的构造函数（通常是代理对象本身）",[10,1079,1081],{"id":1080},"二reflect反射","二、Reflect（反射）",[435,1083,1084],{},[20,1085,1086],{},"Reflect 是用于调用对象的基本操作（内部方法）",[435,1088,1089],{},[20,1090,1091,1092,1097],{},"对象的所有内部方法,参考链接:",[459,1093,1094],{"href":1094,"rel":1095},"https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf",[1096],"nofollow"," 第 44~46 页内容",[435,1099,1100],{},[20,1101,1102,1103],{},"内部方法与 Reflcet 方法对应表格,参考链接:",[459,1104,1105],{"href":1105,"rel":1106},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",[1096],[20,1108,1109,1112],{},[24,1110,1111],{},"Reflect","不是一个函数对象,因此它是不可构造的。并且 reflect 的所有属性和方法都是静态的。",[15,1114,1116,1117,1120],{"id":1115},"_1-使用reflcet和直接使用语法操作对象的区别","1. 使用",[24,1118,1119],{},"Reflcet","和直接使用语法操作对象的区别",[430,1122,1124],{"id":1123},"_11-返回值不同","1.1 返回值不同",[20,1126,1127],{},"例如: 给对象添加属性并设置值",[97,1129,1130],{},[100,1131,1132,1136],{},[1133,1134,1135],"strong",{},"直接设置",":返回设置的值（表达式的结果）",[47,1138,1140],{"className":49,"code":1139,"language":51,"meta":52,"style":52},"const obj = {}\nconst result = (obj.name = 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // jack\n",[24,1141,1142,1154,1183,1200],{"__ignoreMap":52},[56,1143,1144,1146,1149,1151],{"class":58,"line":59},[56,1145,63],{"class":62},[56,1147,1148],{"class":66}," obj",[56,1150,71],{"class":70},[56,1152,1153],{"class":81}," {}\n",[56,1155,1156,1158,1161,1163,1165,1168,1170,1172,1174,1176,1179,1181],{"class":58,"line":145},[56,1157,63],{"class":62},[56,1159,1160],{"class":66}," result",[56,1162,71],{"class":70},[56,1164,456],{"class":81},[56,1166,1167],{"class":85},"obj",[56,1169,245],{"class":81},[56,1171,399],{"class":85},[56,1173,71],{"class":70},[56,1175,156],{"class":155},[56,1177,1178],{"class":159},"jack",[56,1180,163],{"class":155},[56,1182,95],{"class":81},[56,1184,1185,1187,1189,1191,1193,1195,1197],{"class":58,"line":169},[56,1186,639],{"class":85},[56,1188,245],{"class":81},[56,1190,248],{"class":77},[56,1192,82],{"class":81},[56,1194,1167],{"class":85},[56,1196,234],{"class":81},[56,1198,1199],{"class":411}," // { name: 'jack' }\n",[56,1201,1202,1204,1206,1208,1210,1213,1215],{"class":58,"line":183},[56,1203,639],{"class":85},[56,1205,245],{"class":81},[56,1207,248],{"class":77},[56,1209,82],{"class":81},[56,1211,1212],{"class":85},"result",[56,1214,234],{"class":81},[56,1216,1217],{"class":411}," // jack\n",[97,1219,1220],{},[100,1221,1222,1225],{},[1133,1223,1224],{},"使用 Reflect",":返回一个布尔值,表示是否成功",[47,1227,1229],{"className":49,"code":1228,"language":51,"meta":52,"style":52},"const obj = {}\nconst result = Reflect.set(obj, 'name', 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // true\n",[24,1230,1231,1241,1278,1294],{"__ignoreMap":52},[56,1232,1233,1235,1237,1239],{"class":58,"line":59},[56,1234,63],{"class":62},[56,1236,1148],{"class":66},[56,1238,71],{"class":70},[56,1240,1153],{"class":81},[56,1242,1243,1245,1247,1249,1252,1254,1256,1258,1260,1262,1264,1266,1268,1270,1272,1274,1276],{"class":58,"line":145},[56,1244,63],{"class":62},[56,1246,1160],{"class":66},[56,1248,71],{"class":70},[56,1250,1251],{"class":85}," Reflect",[56,1253,245],{"class":81},[56,1255,117],{"class":77},[56,1257,82],{"class":81},[56,1259,1167],{"class":85},[56,1261,89],{"class":81},[56,1263,156],{"class":155},[56,1265,399],{"class":159},[56,1267,163],{"class":155},[56,1269,89],{"class":81},[56,1271,156],{"class":155},[56,1273,1178],{"class":159},[56,1275,163],{"class":155},[56,1277,95],{"class":81},[56,1279,1280,1282,1284,1286,1288,1290,1292],{"class":58,"line":169},[56,1281,639],{"class":85},[56,1283,245],{"class":81},[56,1285,248],{"class":77},[56,1287,82],{"class":81},[56,1289,1167],{"class":85},[56,1291,234],{"class":81},[56,1293,1199],{"class":411},[56,1295,1296,1298,1300,1302,1304,1306,1308],{"class":58,"line":183},[56,1297,639],{"class":85},[56,1299,245],{"class":81},[56,1301,248],{"class":77},[56,1303,82],{"class":81},[56,1305,1212],{"class":85},[56,1307,234],{"class":81},[56,1309,1310],{"class":411}," // true\n",[430,1312,1314],{"id":1313},"_12-处理不可写属性时的行为","1.2 处理不可写属性时的行为",[20,1316,1317],{},"例如:给对象的不可写属性赋值时",[20,1319,1320,152],{},[1133,1321,1135],{},[97,1323,1324],{},[100,1325,1326],{},"在严格模式下会抛出 TypeError",[47,1328,1330],{"className":49,"code":1329,"language":51,"meta":52,"style":52},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20 // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[24,1331,1332,1342,1352,1378,1389,1402,1406],{"__ignoreMap":52},[56,1333,1334,1336,1339],{"class":58,"line":59},[56,1335,163],{"class":155},[56,1337,1338],{"class":159},"use strict",[56,1340,1341],{"class":155},"'\n",[56,1343,1344,1346,1348,1350],{"class":58,"line":145},[56,1345,63],{"class":62},[56,1347,1148],{"class":66},[56,1349,71],{"class":70},[56,1351,1153],{"class":81},[56,1353,1354,1357,1359,1362,1364,1366,1368,1370,1372,1374,1376],{"class":58,"line":169},[56,1355,1356],{"class":85},"Object",[56,1358,245],{"class":81},[56,1360,1361],{"class":77},"defineProperty",[56,1363,82],{"class":81},[56,1365,1167],{"class":85},[56,1367,89],{"class":81},[56,1369,156],{"class":155},[56,1371,881],{"class":159},[56,1373,163],{"class":155},[56,1375,89],{"class":81},[56,1377,142],{"class":81},[56,1379,1380,1383,1385,1387],{"class":58,"line":183},[56,1381,1382],{"class":148},"  value",[56,1384,152],{"class":81},[56,1386,178],{"class":177},[56,1388,166],{"class":81},[56,1390,1391,1394,1396,1400],{"class":58,"line":189},[56,1392,1393],{"class":148},"  writeable",[56,1395,152],{"class":81},[56,1397,1399],{"class":1398},"sSBLT"," false",[56,1401,166],{"class":81},[56,1403,1404],{"class":58,"line":196},[56,1405,383],{"class":81},[56,1407,1408,1410,1412,1414,1416,1419],{"class":58,"line":218},[56,1409,1167],{"class":85},[56,1411,245],{"class":81},[56,1413,881],{"class":85},[56,1415,71],{"class":70},[56,1417,1418],{"class":177}," 20",[56,1420,1421],{"class":411}," // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[97,1423,1424],{},[100,1425,1426],{},"在非严格模式下静默失败",[47,1428,1430],{"className":49,"code":1429,"language":51,"meta":52,"style":52},"const obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20\nconsole.log(obj.age) // 18\n",[24,1431,1432,1442,1466,1476,1486,1490,1503],{"__ignoreMap":52},[56,1433,1434,1436,1438,1440],{"class":58,"line":59},[56,1435,63],{"class":62},[56,1437,1148],{"class":66},[56,1439,71],{"class":70},[56,1441,1153],{"class":81},[56,1443,1444,1446,1448,1450,1452,1454,1456,1458,1460,1462,1464],{"class":58,"line":145},[56,1445,1356],{"class":85},[56,1447,245],{"class":81},[56,1449,1361],{"class":77},[56,1451,82],{"class":81},[56,1453,1167],{"class":85},[56,1455,89],{"class":81},[56,1457,156],{"class":155},[56,1459,881],{"class":159},[56,1461,163],{"class":155},[56,1463,89],{"class":81},[56,1465,142],{"class":81},[56,1467,1468,1470,1472,1474],{"class":58,"line":169},[56,1469,1382],{"class":148},[56,1471,152],{"class":81},[56,1473,178],{"class":177},[56,1475,166],{"class":81},[56,1477,1478,1480,1482,1484],{"class":58,"line":183},[56,1479,1393],{"class":148},[56,1481,152],{"class":81},[56,1483,1399],{"class":1398},[56,1485,166],{"class":81},[56,1487,1488],{"class":58,"line":189},[56,1489,383],{"class":81},[56,1491,1492,1494,1496,1498,1500],{"class":58,"line":196},[56,1493,1167],{"class":85},[56,1495,245],{"class":81},[56,1497,881],{"class":85},[56,1499,71],{"class":70},[56,1501,1502],{"class":177}," 20\n",[56,1504,1505,1507,1509,1511,1513,1515,1517,1519,1521],{"class":58,"line":218},[56,1506,639],{"class":85},[56,1508,245],{"class":81},[56,1510,248],{"class":77},[56,1512,82],{"class":81},[56,1514,1167],{"class":85},[56,1516,245],{"class":81},[56,1518,881],{"class":85},[56,1520,234],{"class":81},[56,1522,1523],{"class":411}," // 18\n",[20,1525,1526,1529],{},[1133,1527,1528],{},"Reflect.set()",": 总是返回 false 而不抛出错误",[47,1531,1533],{"className":49,"code":1532,"language":51,"meta":52,"style":52},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nconst result = Reflect.set(obj, 'age', 20)\nconsole.log(result) // false\nconsole.log(obj.age) // 18\n",[24,1534,1535,1543,1553,1577,1587,1597,1601,1633,1650],{"__ignoreMap":52},[56,1536,1537,1539,1541],{"class":58,"line":59},[56,1538,163],{"class":155},[56,1540,1338],{"class":159},[56,1542,1341],{"class":155},[56,1544,1545,1547,1549,1551],{"class":58,"line":145},[56,1546,63],{"class":62},[56,1548,1148],{"class":66},[56,1550,71],{"class":70},[56,1552,1153],{"class":81},[56,1554,1555,1557,1559,1561,1563,1565,1567,1569,1571,1573,1575],{"class":58,"line":169},[56,1556,1356],{"class":85},[56,1558,245],{"class":81},[56,1560,1361],{"class":77},[56,1562,82],{"class":81},[56,1564,1167],{"class":85},[56,1566,89],{"class":81},[56,1568,156],{"class":155},[56,1570,881],{"class":159},[56,1572,163],{"class":155},[56,1574,89],{"class":81},[56,1576,142],{"class":81},[56,1578,1579,1581,1583,1585],{"class":58,"line":183},[56,1580,1382],{"class":148},[56,1582,152],{"class":81},[56,1584,178],{"class":177},[56,1586,166],{"class":81},[56,1588,1589,1591,1593,1595],{"class":58,"line":189},[56,1590,1393],{"class":148},[56,1592,152],{"class":81},[56,1594,1399],{"class":1398},[56,1596,166],{"class":81},[56,1598,1599],{"class":58,"line":196},[56,1600,383],{"class":81},[56,1602,1603,1605,1607,1609,1611,1613,1615,1617,1619,1621,1623,1625,1627,1629,1631],{"class":58,"line":218},[56,1604,63],{"class":62},[56,1606,1160],{"class":66},[56,1608,71],{"class":70},[56,1610,1251],{"class":85},[56,1612,245],{"class":81},[56,1614,117],{"class":77},[56,1616,82],{"class":81},[56,1618,1167],{"class":85},[56,1620,89],{"class":81},[56,1622,156],{"class":155},[56,1624,881],{"class":159},[56,1626,163],{"class":155},[56,1628,89],{"class":81},[56,1630,1418],{"class":177},[56,1632,95],{"class":81},[56,1634,1635,1637,1639,1641,1643,1645,1647],{"class":58,"line":239},[56,1636,639],{"class":85},[56,1638,245],{"class":81},[56,1640,248],{"class":77},[56,1642,82],{"class":81},[56,1644,1212],{"class":85},[56,1646,234],{"class":81},[56,1648,1649],{"class":411}," // false\n",[56,1651,1652,1654,1656,1658,1660,1662,1664,1666,1668],{"class":58,"line":274},[56,1653,639],{"class":85},[56,1655,245],{"class":81},[56,1657,248],{"class":77},[56,1659,82],{"class":81},[56,1661,1167],{"class":85},[56,1663,245],{"class":81},[56,1665,881],{"class":85},[56,1667,234],{"class":81},[56,1669,1523],{"class":411},[430,1671,1673],{"id":1672},"_13-指定-receiverthis","1.3 指定 receiver(this)",[20,1675,1676],{},"例如:对象中的 getter 的借用",[47,1678,1680],{"className":49,"code":1679,"language":51,"meta":52,"style":52},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nobj2.c = obj.c\nconsole.log(obj2.c) // 3 (不是7)\n",[24,1681,1682,1692,1704,1715,1727,1747,1751,1755,1759,1770,1781,1791,1795,1799,1818],{"__ignoreMap":52},[56,1683,1684,1686,1688,1690],{"class":58,"line":59},[56,1685,63],{"class":62},[56,1687,1148],{"class":66},[56,1689,71],{"class":70},[56,1691,142],{"class":81},[56,1693,1694,1697,1699,1702],{"class":58,"line":145},[56,1695,1696],{"class":148},"  a",[56,1698,152],{"class":81},[56,1700,1701],{"class":177}," 1",[56,1703,166],{"class":81},[56,1705,1706,1709,1711,1713],{"class":58,"line":169},[56,1707,1708],{"class":148},"  b",[56,1710,152],{"class":81},[56,1712,658],{"class":177},[56,1714,166],{"class":81},[56,1716,1717,1719,1722,1725],{"class":58,"line":183},[56,1718,221],{"class":62},[56,1720,1721],{"class":77}," c",[56,1723,1724],{"class":81},"()",[56,1726,142],{"class":81},[56,1728,1729,1731,1734,1736,1738,1740,1742,1744],{"class":58,"line":189},[56,1730,278],{"class":277},[56,1732,1733],{"class":862}," this",[56,1735,245],{"class":81},[56,1737,459],{"class":85},[56,1739,475],{"class":62},[56,1741,1733],{"class":862},[56,1743,245],{"class":81},[56,1745,1746],{"class":85},"b\n",[56,1748,1749],{"class":58,"line":196},[56,1750,377],{"class":81},[56,1752,1753],{"class":58,"line":218},[56,1754,186],{"class":81},[56,1756,1757],{"class":58,"line":239},[56,1758,193],{"emptyLinePlaceholder":192},[56,1760,1761,1763,1766,1768],{"class":58,"line":274},[56,1762,63],{"class":62},[56,1764,1765],{"class":66}," obj2",[56,1767,71],{"class":70},[56,1769,142],{"class":81},[56,1771,1772,1774,1776,1779],{"class":58,"line":291},[56,1773,1696],{"class":148},[56,1775,152],{"class":81},[56,1777,1778],{"class":177}," 3",[56,1780,166],{"class":81},[56,1782,1783,1785,1787,1789],{"class":58,"line":297},[56,1784,1708],{"class":148},[56,1786,152],{"class":81},[56,1788,704],{"class":177},[56,1790,166],{"class":81},[56,1792,1793],{"class":58,"line":320},[56,1794,186],{"class":81},[56,1796,1797],{"class":58,"line":356},[56,1798,193],{"emptyLinePlaceholder":192},[56,1800,1801,1804,1806,1809,1811,1813,1815],{"class":58,"line":374},[56,1802,1803],{"class":85},"obj2",[56,1805,245],{"class":81},[56,1807,1808],{"class":85},"c",[56,1810,71],{"class":70},[56,1812,1148],{"class":85},[56,1814,245],{"class":81},[56,1816,1817],{"class":85},"c\n",[56,1819,1820,1822,1824,1826,1828,1830,1832,1834,1836],{"class":58,"line":380},[56,1821,639],{"class":85},[56,1823,245],{"class":81},[56,1825,248],{"class":77},[56,1827,82],{"class":81},[56,1829,1803],{"class":85},[56,1831,245],{"class":81},[56,1833,1808],{"class":85},[56,1835,234],{"class":81},[56,1837,1838],{"class":411}," // 3 (不是7)\n",[20,1840,1841,1842,1845,1846,1848],{},"直接赋值只是复制了值,不会保持 ",[24,1843,1844],{},"getter"," 的动态计算特性, 无法直接实现对",[24,1847,1844],{},"的借用",[97,1850,1851],{},[100,1852,1853,1854,1856],{},"使用",[24,1855,768],{},"可以实现,但是需要手动获取属性描述符",[47,1858,1860],{"className":49,"code":1859,"language":51,"meta":52,"style":52},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\n// 获取 getter 函数\nconst descriptor = Object.getOwnPropertyDescriptor(obj, 'c') // 获取属性描述符\nconst getter = descriptor.get // 获取getter 函数\n\n// 绑定 this\nconst boundGetter = getter.bind(obj2)\nconsole.log(boundGetter()) // 7\n",[24,1861,1862,1872,1882,1892,1902,1920,1924,1928,1932,1942,1952,1962,1966,1970,1975,2009,2027,2031,2036,2057],{"__ignoreMap":52},[56,1863,1864,1866,1868,1870],{"class":58,"line":59},[56,1865,63],{"class":62},[56,1867,1148],{"class":66},[56,1869,71],{"class":70},[56,1871,142],{"class":81},[56,1873,1874,1876,1878,1880],{"class":58,"line":145},[56,1875,1696],{"class":148},[56,1877,152],{"class":81},[56,1879,1701],{"class":177},[56,1881,166],{"class":81},[56,1883,1884,1886,1888,1890],{"class":58,"line":169},[56,1885,1708],{"class":148},[56,1887,152],{"class":81},[56,1889,658],{"class":177},[56,1891,166],{"class":81},[56,1893,1894,1896,1898,1900],{"class":58,"line":183},[56,1895,221],{"class":62},[56,1897,1721],{"class":77},[56,1899,1724],{"class":81},[56,1901,142],{"class":81},[56,1903,1904,1906,1908,1910,1912,1914,1916,1918],{"class":58,"line":189},[56,1905,278],{"class":277},[56,1907,1733],{"class":862},[56,1909,245],{"class":81},[56,1911,459],{"class":85},[56,1913,475],{"class":62},[56,1915,1733],{"class":862},[56,1917,245],{"class":81},[56,1919,1746],{"class":85},[56,1921,1922],{"class":58,"line":196},[56,1923,377],{"class":81},[56,1925,1926],{"class":58,"line":218},[56,1927,186],{"class":81},[56,1929,1930],{"class":58,"line":239},[56,1931,193],{"emptyLinePlaceholder":192},[56,1933,1934,1936,1938,1940],{"class":58,"line":274},[56,1935,63],{"class":62},[56,1937,1765],{"class":66},[56,1939,71],{"class":70},[56,1941,142],{"class":81},[56,1943,1944,1946,1948,1950],{"class":58,"line":291},[56,1945,1696],{"class":148},[56,1947,152],{"class":81},[56,1949,1778],{"class":177},[56,1951,166],{"class":81},[56,1953,1954,1956,1958,1960],{"class":58,"line":297},[56,1955,1708],{"class":148},[56,1957,152],{"class":81},[56,1959,704],{"class":177},[56,1961,166],{"class":81},[56,1963,1964],{"class":58,"line":320},[56,1965,186],{"class":81},[56,1967,1968],{"class":58,"line":356},[56,1969,193],{"emptyLinePlaceholder":192},[56,1971,1972],{"class":58,"line":374},[56,1973,1974],{"class":411},"// 获取 getter 函数\n",[56,1976,1977,1979,1982,1984,1987,1989,1992,1994,1996,1998,2000,2002,2004,2006],{"class":58,"line":380},[56,1978,63],{"class":62},[56,1980,1981],{"class":66}," descriptor",[56,1983,71],{"class":70},[56,1985,1986],{"class":85}," Object",[56,1988,245],{"class":81},[56,1990,1991],{"class":77},"getOwnPropertyDescriptor",[56,1993,82],{"class":81},[56,1995,1167],{"class":85},[56,1997,89],{"class":81},[56,1999,156],{"class":155},[56,2001,1808],{"class":159},[56,2003,163],{"class":155},[56,2005,234],{"class":81},[56,2007,2008],{"class":411}," // 获取属性描述符\n",[56,2010,2011,2013,2016,2018,2020,2022,2024],{"class":58,"line":386},[56,2012,63],{"class":62},[56,2014,2015],{"class":66}," getter",[56,2017,71],{"class":70},[56,2019,1981],{"class":85},[56,2021,245],{"class":81},[56,2023,113],{"class":85},[56,2025,2026],{"class":411}," // 获取getter 函数\n",[56,2028,2029],{"class":58,"line":391},[56,2030,193],{"emptyLinePlaceholder":192},[56,2032,2033],{"class":58,"line":415},[56,2034,2035],{"class":411},"// 绑定 this\n",[56,2037,2038,2040,2043,2045,2047,2049,2051,2053,2055],{"class":58,"line":753},[56,2039,63],{"class":62},[56,2041,2042],{"class":66}," boundGetter",[56,2044,71],{"class":70},[56,2046,2015],{"class":85},[56,2048,245],{"class":81},[56,2050,768],{"class":77},[56,2052,82],{"class":81},[56,2054,1803],{"class":85},[56,2056,95],{"class":81},[56,2058,2060,2062,2064,2066,2068,2071,2074],{"class":58,"line":2059},20,[56,2061,639],{"class":85},[56,2063,245],{"class":81},[56,2065,248],{"class":77},[56,2067,82],{"class":81},[56,2069,2070],{"class":77},"boundGetter",[56,2072,2073],{"class":81},"())",[56,2075,2076],{"class":411}," // 7\n",[97,2078,2079],{},[100,2080,1853,2081,2083,2084,2086,2087,1848],{},[24,2082,1111],{},"改变",[24,2085,808],{},"可以直接实现",[24,2088,1844],{},[47,2090,2092],{"className":49,"code":2091,"language":51,"meta":52,"style":52},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nconsole.log(Reflect.get(obj, 'c', obj2)) // 7\n",[24,2093,2094,2104,2114,2124,2134,2152,2156,2160,2164,2174,2184,2194,2198,2202],{"__ignoreMap":52},[56,2095,2096,2098,2100,2102],{"class":58,"line":59},[56,2097,63],{"class":62},[56,2099,1148],{"class":66},[56,2101,71],{"class":70},[56,2103,142],{"class":81},[56,2105,2106,2108,2110,2112],{"class":58,"line":145},[56,2107,1696],{"class":148},[56,2109,152],{"class":81},[56,2111,1701],{"class":177},[56,2113,166],{"class":81},[56,2115,2116,2118,2120,2122],{"class":58,"line":169},[56,2117,1708],{"class":148},[56,2119,152],{"class":81},[56,2121,658],{"class":177},[56,2123,166],{"class":81},[56,2125,2126,2128,2130,2132],{"class":58,"line":183},[56,2127,221],{"class":62},[56,2129,1721],{"class":77},[56,2131,1724],{"class":81},[56,2133,142],{"class":81},[56,2135,2136,2138,2140,2142,2144,2146,2148,2150],{"class":58,"line":189},[56,2137,278],{"class":277},[56,2139,1733],{"class":862},[56,2141,245],{"class":81},[56,2143,459],{"class":85},[56,2145,475],{"class":62},[56,2147,1733],{"class":862},[56,2149,245],{"class":81},[56,2151,1746],{"class":85},[56,2153,2154],{"class":58,"line":196},[56,2155,377],{"class":81},[56,2157,2158],{"class":58,"line":218},[56,2159,186],{"class":81},[56,2161,2162],{"class":58,"line":239},[56,2163,193],{"emptyLinePlaceholder":192},[56,2165,2166,2168,2170,2172],{"class":58,"line":274},[56,2167,63],{"class":62},[56,2169,1765],{"class":66},[56,2171,71],{"class":70},[56,2173,142],{"class":81},[56,2175,2176,2178,2180,2182],{"class":58,"line":291},[56,2177,1696],{"class":148},[56,2179,152],{"class":81},[56,2181,1778],{"class":177},[56,2183,166],{"class":81},[56,2185,2186,2188,2190,2192],{"class":58,"line":297},[56,2187,1708],{"class":148},[56,2189,152],{"class":81},[56,2191,704],{"class":177},[56,2193,166],{"class":81},[56,2195,2196],{"class":58,"line":320},[56,2197,186],{"class":81},[56,2199,2200],{"class":58,"line":356},[56,2201,193],{"emptyLinePlaceholder":192},[56,2203,2204,2206,2208,2210,2212,2214,2216,2218,2220,2222,2224,2226,2228,2230,2232,2234,2236],{"class":58,"line":374},[56,2205,639],{"class":85},[56,2207,245],{"class":81},[56,2209,248],{"class":77},[56,2211,82],{"class":81},[56,2213,1111],{"class":85},[56,2215,245],{"class":81},[56,2217,113],{"class":77},[56,2219,82],{"class":81},[56,2221,1167],{"class":85},[56,2223,89],{"class":81},[56,2225,156],{"class":155},[56,2227,1808],{"class":159},[56,2229,163],{"class":155},[56,2231,89],{"class":81},[56,2233,1765],{"class":85},[56,2235,661],{"class":81},[56,2237,2076],{"class":411},[15,2239,2241],{"id":2240},"_2-在-proxy-中使用-reflect-的作用","2. 在 Proxy 中使用 Reflect 的作用",[430,2243,2245],{"id":2244},"_21-保持默认行为","2.1 保持默认行为",[20,2247,2248,2250],{},[24,2249,1111],{},"方法提供了与 Proxy 陷阱一一对应的操作,可以方便地在自定义行为后保持默认行为",[47,2252,2254],{"className":49,"code":2253,"language":51,"meta":52,"style":52},"const proxy = new Proxy(target, {\n  get(target, prop, receiver) {\n    console.log(`Getting property ${prop}`)\n    // 使用 Reflect 保持默认的获取行为\n    return Reflect.get(target, prop, receiver)\n  }\n})\n",[24,2255,2256,2276,2297,2322,2327,2351,2355],{"__ignoreMap":52},[56,2257,2258,2260,2262,2264,2266,2268,2270,2272,2274],{"class":58,"line":59},[56,2259,63],{"class":62},[56,2261,201],{"class":66},[56,2263,71],{"class":70},[56,2265,74],{"class":62},[56,2267,78],{"class":77},[56,2269,82],{"class":81},[56,2271,86],{"class":85},[56,2273,89],{"class":81},[56,2275,142],{"class":81},[56,2277,2278,2280,2282,2284,2286,2288,2290,2293,2295],{"class":58,"line":145},[56,2279,221],{"class":77},[56,2281,82],{"class":81},[56,2283,86],{"class":226},[56,2285,89],{"class":81},[56,2287,231],{"class":226},[56,2289,89],{"class":81},[56,2291,2292],{"class":226}," receiver",[56,2294,234],{"class":81},[56,2296,142],{"class":81},[56,2298,2299,2301,2303,2305,2307,2309,2312,2314,2316,2318,2320],{"class":58,"line":169},[56,2300,242],{"class":85},[56,2302,245],{"class":81},[56,2304,248],{"class":77},[56,2306,82],{"class":81},[56,2308,253],{"class":155},[56,2310,2311],{"class":159},"Getting property ",[56,2313,260],{"class":259},[56,2315,264],{"class":263},[56,2317,267],{"class":259},[56,2319,253],{"class":155},[56,2321,95],{"class":81},[56,2323,2324],{"class":58,"line":183},[56,2325,2326],{"class":411},"    // 使用 Reflect 保持默认的获取行为\n",[56,2328,2329,2331,2333,2335,2337,2339,2341,2343,2345,2347,2349],{"class":58,"line":189},[56,2330,278],{"class":277},[56,2332,1251],{"class":85},[56,2334,245],{"class":81},[56,2336,113],{"class":77},[56,2338,82],{"class":81},[56,2340,86],{"class":85},[56,2342,89],{"class":81},[56,2344,231],{"class":85},[56,2346,89],{"class":81},[56,2348,2292],{"class":85},[56,2350,95],{"class":81},[56,2352,2353],{"class":58,"line":196},[56,2354,377],{"class":81},[56,2356,2357],{"class":58,"line":218},[56,2358,383],{"class":81},[20,2360,2361],{},"Reflect 方法提供了与 Proxy 陷阱完美对应,使代码更一致",[2363,2364,2365,2378],"table",{},[2366,2367,2368],"thead",{},[2369,2370,2371,2375],"tr",{},[2372,2373,2374],"th",{},"Proxy 陷阱",[2372,2376,2377],{},"Reflect 方法",[2379,2380,2381,2389,2395,2403,2411,2418],"tbody",{},[2369,2382,2383,2386],{},[2384,2385,113],"td",{},[2384,2387,2388],{},"Reflect.get()",[2369,2390,2391,2393],{},[2384,2392,117],{},[2384,2394,1528],{},[2369,2396,2397,2400],{},[2384,2398,2399],{},"has",[2384,2401,2402],{},"Reflect.has()",[2369,2404,2405,2408],{},[2384,2406,2407],{},"deleteProperty",[2384,2409,2410],{},"Reflect.deleteProperty()",[2369,2412,2413,2415],{},[2384,2414,612],{},[2384,2416,2417],{},"Reflect.apply()",[2369,2419,2420,2423],{},[2384,2421,2422],{},"construct",[2384,2424,2425],{},"Reflect.construct()",[430,2427,2429,2430],{"id":2428},"_22-确保正确的this","2.2 确保正确的",[24,2431,808],{},[20,2433,2434],{},"例如: 在存在继承的对象中",[97,2436,2437],{},[100,2438,2439],{},"直接通过 target 访问",[47,2441,2443],{"className":49,"code":2442,"language":51,"meta":52,"style":52},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop) {\n    return target[prop] // 直接使用 target 会导致 this 绑定问题\n  }\n})\n\nconst obj2 = Object.create(proxy) // 继承proxy\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 3\n",[24,2444,2445,2455,2465,2475,2485,2503,2507,2511,2515,2535,2551,2566,2570,2574,2578,2602,2615,2629],{"__ignoreMap":52},[56,2446,2447,2449,2451,2453],{"class":58,"line":59},[56,2448,63],{"class":62},[56,2450,1148],{"class":66},[56,2452,71],{"class":70},[56,2454,142],{"class":81},[56,2456,2457,2459,2461,2463],{"class":58,"line":145},[56,2458,1696],{"class":148},[56,2460,152],{"class":81},[56,2462,1701],{"class":177},[56,2464,166],{"class":81},[56,2466,2467,2469,2471,2473],{"class":58,"line":169},[56,2468,1708],{"class":148},[56,2470,152],{"class":81},[56,2472,658],{"class":177},[56,2474,166],{"class":81},[56,2476,2477,2479,2481,2483],{"class":58,"line":183},[56,2478,221],{"class":62},[56,2480,1721],{"class":77},[56,2482,1724],{"class":81},[56,2484,142],{"class":81},[56,2486,2487,2489,2491,2493,2495,2497,2499,2501],{"class":58,"line":189},[56,2488,278],{"class":277},[56,2490,1733],{"class":862},[56,2492,245],{"class":81},[56,2494,459],{"class":85},[56,2496,475],{"class":62},[56,2498,1733],{"class":862},[56,2500,245],{"class":81},[56,2502,1746],{"class":85},[56,2504,2505],{"class":58,"line":196},[56,2506,377],{"class":81},[56,2508,2509],{"class":58,"line":218},[56,2510,186],{"class":81},[56,2512,2513],{"class":58,"line":239},[56,2514,193],{"emptyLinePlaceholder":192},[56,2516,2517,2519,2521,2523,2525,2527,2529,2531,2533],{"class":58,"line":274},[56,2518,63],{"class":62},[56,2520,201],{"class":66},[56,2522,71],{"class":70},[56,2524,74],{"class":62},[56,2526,78],{"class":77},[56,2528,82],{"class":81},[56,2530,1167],{"class":85},[56,2532,89],{"class":81},[56,2534,142],{"class":81},[56,2536,2537,2539,2541,2543,2545,2547,2549],{"class":58,"line":291},[56,2538,221],{"class":77},[56,2540,82],{"class":81},[56,2542,86],{"class":226},[56,2544,89],{"class":81},[56,2546,231],{"class":226},[56,2548,234],{"class":81},[56,2550,142],{"class":81},[56,2552,2553,2555,2557,2559,2561,2563],{"class":58,"line":297},[56,2554,278],{"class":277},[56,2556,137],{"class":85},[56,2558,283],{"class":81},[56,2560,264],{"class":85},[56,2562,366],{"class":81},[56,2564,2565],{"class":411}," // 直接使用 target 会导致 this 绑定问题\n",[56,2567,2568],{"class":58,"line":320},[56,2569,377],{"class":81},[56,2571,2572],{"class":58,"line":356},[56,2573,383],{"class":81},[56,2575,2576],{"class":58,"line":374},[56,2577,193],{"emptyLinePlaceholder":192},[56,2579,2580,2582,2584,2586,2588,2590,2593,2595,2597,2599],{"class":58,"line":380},[56,2581,63],{"class":62},[56,2583,1765],{"class":66},[56,2585,71],{"class":70},[56,2587,1986],{"class":85},[56,2589,245],{"class":81},[56,2591,2592],{"class":77},"create",[56,2594,82],{"class":81},[56,2596,394],{"class":85},[56,2598,234],{"class":81},[56,2600,2601],{"class":411}," // 继承proxy\n",[56,2603,2604,2606,2608,2610,2612],{"class":58,"line":386},[56,2605,1803],{"class":85},[56,2607,245],{"class":81},[56,2609,459],{"class":85},[56,2611,71],{"class":70},[56,2613,2614],{"class":177}," 3\n",[56,2616,2617,2619,2621,2624,2626],{"class":58,"line":391},[56,2618,1803],{"class":85},[56,2620,245],{"class":81},[56,2622,2623],{"class":85},"b",[56,2625,71],{"class":70},[56,2627,2628],{"class":177}," 4\n",[56,2630,2631,2633,2635,2637,2639,2641,2643,2645,2647],{"class":58,"line":415},[56,2632,639],{"class":85},[56,2634,245],{"class":81},[56,2636,248],{"class":77},[56,2638,82],{"class":81},[56,2640,1803],{"class":85},[56,2642,245],{"class":81},[56,2644,1808],{"class":85},[56,2646,234],{"class":81},[56,2648,2649],{"class":411}," // 3\n",[435,2651,2652],{},[20,2653,2654,2655,2657],{},"我们期望 obj2.c 应该计算 obj2.a + obj2.b,即 3 + 4 = 7\n实际输出却是 3,这是因为:\na. obj2.c 触发 proxy 的 get 陷阱\nb. 陷阱中直接返回 target ",[56,2656,264],{}," （即 obj.c）\nc. 当 obj.c 的 getter 执行时,this 指向的是 obj 而非 obj2\nd. 所以计算的是 obj.a + obj.b（1 + 2 = 3）",[97,2659,2660],{},[100,2661,2662],{},"使用 Reflect,传递 receiver",[47,2664,2666],{"className":49,"code":2665,"language":51,"meta":52,"style":52},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop, receiver) {\n    return Reflect.get(target, prop, receiver) // receiver 参数会自动指向最初发起调用的对象\n  }\n})\n\nconst obj2 = Object.create(proxy)\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 7\n",[24,2667,2668,2678,2688,2698,2708,2726,2730,2734,2738,2758,2778,2805,2809,2813,2817,2837,2849,2861],{"__ignoreMap":52},[56,2669,2670,2672,2674,2676],{"class":58,"line":59},[56,2671,63],{"class":62},[56,2673,1148],{"class":66},[56,2675,71],{"class":70},[56,2677,142],{"class":81},[56,2679,2680,2682,2684,2686],{"class":58,"line":145},[56,2681,1696],{"class":148},[56,2683,152],{"class":81},[56,2685,1701],{"class":177},[56,2687,166],{"class":81},[56,2689,2690,2692,2694,2696],{"class":58,"line":169},[56,2691,1708],{"class":148},[56,2693,152],{"class":81},[56,2695,658],{"class":177},[56,2697,166],{"class":81},[56,2699,2700,2702,2704,2706],{"class":58,"line":183},[56,2701,221],{"class":62},[56,2703,1721],{"class":77},[56,2705,1724],{"class":81},[56,2707,142],{"class":81},[56,2709,2710,2712,2714,2716,2718,2720,2722,2724],{"class":58,"line":189},[56,2711,278],{"class":277},[56,2713,1733],{"class":862},[56,2715,245],{"class":81},[56,2717,459],{"class":85},[56,2719,475],{"class":62},[56,2721,1733],{"class":862},[56,2723,245],{"class":81},[56,2725,1746],{"class":85},[56,2727,2728],{"class":58,"line":196},[56,2729,377],{"class":81},[56,2731,2732],{"class":58,"line":218},[56,2733,186],{"class":81},[56,2735,2736],{"class":58,"line":239},[56,2737,193],{"emptyLinePlaceholder":192},[56,2739,2740,2742,2744,2746,2748,2750,2752,2754,2756],{"class":58,"line":274},[56,2741,63],{"class":62},[56,2743,201],{"class":66},[56,2745,71],{"class":70},[56,2747,74],{"class":62},[56,2749,78],{"class":77},[56,2751,82],{"class":81},[56,2753,1167],{"class":85},[56,2755,89],{"class":81},[56,2757,142],{"class":81},[56,2759,2760,2762,2764,2766,2768,2770,2772,2774,2776],{"class":58,"line":291},[56,2761,221],{"class":77},[56,2763,82],{"class":81},[56,2765,86],{"class":226},[56,2767,89],{"class":81},[56,2769,231],{"class":226},[56,2771,89],{"class":81},[56,2773,2292],{"class":226},[56,2775,234],{"class":81},[56,2777,142],{"class":81},[56,2779,2780,2782,2784,2786,2788,2790,2792,2794,2796,2798,2800,2802],{"class":58,"line":297},[56,2781,278],{"class":277},[56,2783,1251],{"class":85},[56,2785,245],{"class":81},[56,2787,113],{"class":77},[56,2789,82],{"class":81},[56,2791,86],{"class":85},[56,2793,89],{"class":81},[56,2795,231],{"class":85},[56,2797,89],{"class":81},[56,2799,2292],{"class":85},[56,2801,234],{"class":81},[56,2803,2804],{"class":411}," // receiver 参数会自动指向最初发起调用的对象\n",[56,2806,2807],{"class":58,"line":320},[56,2808,377],{"class":81},[56,2810,2811],{"class":58,"line":356},[56,2812,383],{"class":81},[56,2814,2815],{"class":58,"line":374},[56,2816,193],{"emptyLinePlaceholder":192},[56,2818,2819,2821,2823,2825,2827,2829,2831,2833,2835],{"class":58,"line":380},[56,2820,63],{"class":62},[56,2822,1765],{"class":66},[56,2824,71],{"class":70},[56,2826,1986],{"class":85},[56,2828,245],{"class":81},[56,2830,2592],{"class":77},[56,2832,82],{"class":81},[56,2834,394],{"class":85},[56,2836,95],{"class":81},[56,2838,2839,2841,2843,2845,2847],{"class":58,"line":386},[56,2840,1803],{"class":85},[56,2842,245],{"class":81},[56,2844,459],{"class":85},[56,2846,71],{"class":70},[56,2848,2614],{"class":177},[56,2850,2851,2853,2855,2857,2859],{"class":58,"line":391},[56,2852,1803],{"class":85},[56,2854,245],{"class":81},[56,2856,2623],{"class":85},[56,2858,71],{"class":70},[56,2860,2628],{"class":177},[56,2862,2863,2865,2867,2869,2871,2873,2875,2877,2879],{"class":58,"line":415},[56,2864,639],{"class":85},[56,2866,245],{"class":81},[56,2868,248],{"class":77},[56,2870,82],{"class":81},[56,2872,1803],{"class":85},[56,2874,245],{"class":81},[56,2876,1808],{"class":85},[56,2878,234],{"class":81},[56,2880,2076],{"class":411},[430,2882,2884,2885,2888,2889,2891],{"id":2883},"_23-总结在proxy中使用reflect的原因","2.3 总结:在",[24,2886,2887],{},"Proxy","中使用",[24,2890,1111],{},"的原因",[2893,2894,2895,2898,2901],"ol",{},[100,2896,2897],{},"保持代理透明性:直接操作可能绕过代理陷阱",[100,2899,2900],{},"维护不变式:确保代理行为与原始对象一致",[100,2902,2903],{},"处理特殊属性:正确处理 getter/setter 和原型链属性",[10,2905,2907],{"id":2906},"三proxy-与-reflect-的应用","三、Proxy 与 Reflect 的应用",[15,2909,2911],{"id":2910},"_1-实现观察者模式","1. 实现观察者模式",[47,2913,2915],{"className":49,"code":2914,"language":51,"meta":52,"style":52},"function createObservable(object) {\n  const observers = new Map() // 存储属性与观察者回调的映射\n  return new Proxy(object, {\n    set(target, p, newValue, receiver) {\n      const isSuccess = Reflect.set(target, p, newValue, receiver)\n      if (isSuccess && observers.has(p)) {\n        // 通知该属性的所有观察者\n        observers.get(p).forEach((cb) => {\n          cb(newValue)\n        })\n      }\n    },\n    get(target, p, receiver) {\n      if (p === 'observe') { // 通过 handler 的 get 陷阱暴露方法\n        return (p, callback) => {\n          if (observers.has(p)) {\n            observers.get(p).add(callback)\n          }\n          else {\n            observers.set(p, [callback])\n          }\n          return () => {\n            const callbacks = observers.get(p)\n            const index = callbacks.indexOf(callback)\n            if (index > -1) {\n              callbacks.splice(index, 1)\n            }\n          }\n        }\n      }\n      return Reflect.get(target, p, receiver)\n    },\n  })\n}\nconst person = createObservable({\n  name: 'John',\n  age: 30,\n})\n\nconst unsubscribe = person.observe('name', (newName) => {\n  console.log(`Name changed to ${newName}`)\n})\n\nperson.name = 'Jane' // 输出: Name changed to Jane\nunsubscribe()\nperson.name = 'John' // 不会输出任何内容\n",[24,2916,2917,2934,2954,2971,2998,3032,3059,3064,3095,3107,3112,3117,3122,3143,3169,3189,3211,3236,3241,3248,3269,3274,3287,3310,3333,3356,3377,3383,3388,3394,3399,3425,3430,3436,3441,3455,3470,3481,3486,3491,3528,3555,3560,3565,3586,3595],{"__ignoreMap":52},[56,2918,2919,2922,2925,2927,2930,2932],{"class":58,"line":59},[56,2920,2921],{"class":62},"function",[56,2923,2924],{"class":77}," createObservable",[56,2926,82],{"class":81},[56,2928,2929],{"class":226},"object",[56,2931,234],{"class":81},[56,2933,142],{"class":81},[56,2935,2936,2939,2942,2944,2946,2949,2951],{"class":58,"line":145},[56,2937,2938],{"class":62},"  const",[56,2940,2941],{"class":66}," observers",[56,2943,71],{"class":70},[56,2945,74],{"class":62},[56,2947,2948],{"class":77}," Map",[56,2950,1724],{"class":81},[56,2952,2953],{"class":411}," // 存储属性与观察者回调的映射\n",[56,2955,2956,2959,2961,2963,2965,2967,2969],{"class":58,"line":169},[56,2957,2958],{"class":277},"  return",[56,2960,74],{"class":62},[56,2962,78],{"class":77},[56,2964,82],{"class":81},[56,2966,2929],{"class":85},[56,2968,89],{"class":81},[56,2970,142],{"class":81},[56,2972,2973,2976,2978,2980,2982,2985,2987,2990,2992,2994,2996],{"class":58,"line":183},[56,2974,2975],{"class":77},"    set",[56,2977,82],{"class":81},[56,2979,86],{"class":226},[56,2981,89],{"class":81},[56,2983,2984],{"class":226}," p",[56,2986,89],{"class":81},[56,2988,2989],{"class":226}," newValue",[56,2991,89],{"class":81},[56,2993,2292],{"class":226},[56,2995,234],{"class":81},[56,2997,142],{"class":81},[56,2999,3000,3003,3006,3008,3010,3012,3014,3016,3018,3020,3022,3024,3026,3028,3030],{"class":58,"line":189},[56,3001,3002],{"class":62},"      const",[56,3004,3005],{"class":66}," isSuccess",[56,3007,71],{"class":70},[56,3009,1251],{"class":85},[56,3011,245],{"class":81},[56,3013,117],{"class":77},[56,3015,82],{"class":81},[56,3017,86],{"class":85},[56,3019,89],{"class":81},[56,3021,2984],{"class":85},[56,3023,89],{"class":81},[56,3025,2989],{"class":85},[56,3027,89],{"class":81},[56,3029,2292],{"class":85},[56,3031,95],{"class":81},[56,3033,3034,3037,3039,3042,3045,3047,3049,3051,3053,3055,3057],{"class":58,"line":196},[56,3035,3036],{"class":277},"      if",[56,3038,456],{"class":81},[56,3040,3041],{"class":85},"isSuccess",[56,3043,3044],{"class":62}," &&",[56,3046,2941],{"class":85},[56,3048,245],{"class":81},[56,3050,2399],{"class":77},[56,3052,82],{"class":81},[56,3054,20],{"class":85},[56,3056,661],{"class":81},[56,3058,142],{"class":81},[56,3060,3061],{"class":58,"line":218},[56,3062,3063],{"class":411},"        // 通知该属性的所有观察者\n",[56,3065,3066,3069,3071,3073,3075,3077,3080,3083,3086,3089,3091,3093],{"class":58,"line":239},[56,3067,3068],{"class":85},"        observers",[56,3070,245],{"class":81},[56,3072,113],{"class":77},[56,3074,82],{"class":81},[56,3076,20],{"class":85},[56,3078,3079],{"class":81},").",[56,3081,3082],{"class":77},"forEach",[56,3084,3085],{"class":81},"((",[56,3087,3088],{"class":226},"cb",[56,3090,234],{"class":81},[56,3092,469],{"class":70},[56,3094,142],{"class":81},[56,3096,3097,3100,3102,3105],{"class":58,"line":274},[56,3098,3099],{"class":77},"          cb",[56,3101,82],{"class":81},[56,3103,3104],{"class":85},"newValue",[56,3106,95],{"class":81},[56,3108,3109],{"class":58,"line":291},[56,3110,3111],{"class":81},"        })\n",[56,3113,3114],{"class":58,"line":297},[56,3115,3116],{"class":81},"      }\n",[56,3118,3119],{"class":58,"line":320},[56,3120,3121],{"class":81},"    },\n",[56,3123,3124,3127,3129,3131,3133,3135,3137,3139,3141],{"class":58,"line":356},[56,3125,3126],{"class":77},"    get",[56,3128,82],{"class":81},[56,3130,86],{"class":226},[56,3132,89],{"class":81},[56,3134,2984],{"class":226},[56,3136,89],{"class":81},[56,3138,2292],{"class":226},[56,3140,234],{"class":81},[56,3142,142],{"class":81},[56,3144,3145,3147,3149,3151,3154,3156,3159,3161,3163,3166],{"class":58,"line":374},[56,3146,3036],{"class":277},[56,3148,456],{"class":81},[56,3150,20],{"class":85},[56,3152,3153],{"class":62}," ===",[56,3155,156],{"class":155},[56,3157,3158],{"class":159},"observe",[56,3160,163],{"class":155},[56,3162,234],{"class":81},[56,3164,3165],{"class":81}," {",[56,3167,3168],{"class":411}," // 通过 handler 的 get 陷阱暴露方法\n",[56,3170,3171,3174,3176,3178,3180,3183,3185,3187],{"class":58,"line":380},[56,3172,3173],{"class":277},"        return",[56,3175,456],{"class":81},[56,3177,20],{"class":226},[56,3179,89],{"class":81},[56,3181,3182],{"class":226}," callback",[56,3184,234],{"class":81},[56,3186,469],{"class":70},[56,3188,142],{"class":81},[56,3190,3191,3194,3196,3199,3201,3203,3205,3207,3209],{"class":58,"line":386},[56,3192,3193],{"class":277},"          if",[56,3195,456],{"class":81},[56,3197,3198],{"class":85},"observers",[56,3200,245],{"class":81},[56,3202,2399],{"class":77},[56,3204,82],{"class":81},[56,3206,20],{"class":85},[56,3208,661],{"class":81},[56,3210,142],{"class":81},[56,3212,3213,3216,3218,3220,3222,3224,3226,3229,3231,3234],{"class":58,"line":391},[56,3214,3215],{"class":85},"            observers",[56,3217,245],{"class":81},[56,3219,113],{"class":77},[56,3221,82],{"class":81},[56,3223,20],{"class":85},[56,3225,3079],{"class":81},[56,3227,3228],{"class":77},"add",[56,3230,82],{"class":81},[56,3232,3233],{"class":85},"callback",[56,3235,95],{"class":81},[56,3237,3238],{"class":58,"line":415},[56,3239,3240],{"class":81},"          }\n",[56,3242,3243,3246],{"class":58,"line":753},[56,3244,3245],{"class":277},"          else",[56,3247,142],{"class":81},[56,3249,3250,3252,3254,3256,3258,3260,3262,3264,3266],{"class":58,"line":2059},[56,3251,3215],{"class":85},[56,3253,245],{"class":81},[56,3255,117],{"class":77},[56,3257,82],{"class":81},[56,3259,20],{"class":85},[56,3261,89],{"class":81},[56,3263,696],{"class":81},[56,3265,3233],{"class":85},[56,3267,3268],{"class":81},"])\n",[56,3270,3272],{"class":58,"line":3271},21,[56,3273,3240],{"class":81},[56,3275,3277,3280,3283,3285],{"class":58,"line":3276},22,[56,3278,3279],{"class":277},"          return",[56,3281,3282],{"class":81}," ()",[56,3284,469],{"class":70},[56,3286,142],{"class":81},[56,3288,3290,3293,3296,3298,3300,3302,3304,3306,3308],{"class":58,"line":3289},23,[56,3291,3292],{"class":62},"            const",[56,3294,3295],{"class":66}," callbacks",[56,3297,71],{"class":70},[56,3299,2941],{"class":85},[56,3301,245],{"class":81},[56,3303,113],{"class":77},[56,3305,82],{"class":81},[56,3307,20],{"class":85},[56,3309,95],{"class":81},[56,3311,3313,3315,3318,3320,3322,3324,3327,3329,3331],{"class":58,"line":3312},24,[56,3314,3292],{"class":62},[56,3316,3317],{"class":66}," index",[56,3319,71],{"class":70},[56,3321,3295],{"class":85},[56,3323,245],{"class":81},[56,3325,3326],{"class":77},"indexOf",[56,3328,82],{"class":81},[56,3330,3233],{"class":85},[56,3332,95],{"class":81},[56,3334,3336,3339,3341,3344,3347,3350,3352,3354],{"class":58,"line":3335},25,[56,3337,3338],{"class":277},"            if",[56,3340,456],{"class":81},[56,3342,3343],{"class":85},"index",[56,3345,3346],{"class":70}," >",[56,3348,3349],{"class":62}," -",[56,3351,653],{"class":177},[56,3353,234],{"class":81},[56,3355,142],{"class":81},[56,3357,3359,3362,3364,3367,3369,3371,3373,3375],{"class":58,"line":3358},26,[56,3360,3361],{"class":85},"              callbacks",[56,3363,245],{"class":81},[56,3365,3366],{"class":77},"splice",[56,3368,82],{"class":81},[56,3370,3343],{"class":85},[56,3372,89],{"class":81},[56,3374,1701],{"class":177},[56,3376,95],{"class":81},[56,3378,3380],{"class":58,"line":3379},27,[56,3381,3382],{"class":81},"            }\n",[56,3384,3386],{"class":58,"line":3385},28,[56,3387,3240],{"class":81},[56,3389,3391],{"class":58,"line":3390},29,[56,3392,3393],{"class":81},"        }\n",[56,3395,3397],{"class":58,"line":3396},30,[56,3398,3116],{"class":81},[56,3400,3402,3405,3407,3409,3411,3413,3415,3417,3419,3421,3423],{"class":58,"line":3401},31,[56,3403,3404],{"class":277},"      return",[56,3406,1251],{"class":85},[56,3408,245],{"class":81},[56,3410,113],{"class":77},[56,3412,82],{"class":81},[56,3414,86],{"class":85},[56,3416,89],{"class":81},[56,3418,2984],{"class":85},[56,3420,89],{"class":81},[56,3422,2292],{"class":85},[56,3424,95],{"class":81},[56,3426,3428],{"class":58,"line":3427},32,[56,3429,3121],{"class":81},[56,3431,3433],{"class":58,"line":3432},33,[56,3434,3435],{"class":81},"  })\n",[56,3437,3439],{"class":58,"line":3438},34,[56,3440,186],{"class":81},[56,3442,3444,3446,3448,3450,3452],{"class":58,"line":3443},35,[56,3445,63],{"class":62},[56,3447,1036],{"class":66},[56,3449,71],{"class":70},[56,3451,2924],{"class":77},[56,3453,3454],{"class":81},"({\n",[56,3456,3458,3460,3462,3464,3466,3468],{"class":58,"line":3457},36,[56,3459,149],{"class":148},[56,3461,152],{"class":81},[56,3463,156],{"class":155},[56,3465,160],{"class":159},[56,3467,163],{"class":155},[56,3469,166],{"class":81},[56,3471,3473,3475,3477,3479],{"class":58,"line":3472},37,[56,3474,172],{"class":148},[56,3476,152],{"class":81},[56,3478,1055],{"class":177},[56,3480,166],{"class":81},[56,3482,3484],{"class":58,"line":3483},38,[56,3485,383],{"class":81},[56,3487,3489],{"class":58,"line":3488},39,[56,3490,193],{"emptyLinePlaceholder":192},[56,3492,3494,3496,3499,3501,3503,3505,3507,3509,3511,3513,3515,3517,3519,3522,3524,3526],{"class":58,"line":3493},40,[56,3495,63],{"class":62},[56,3497,3498],{"class":66}," unsubscribe",[56,3500,71],{"class":70},[56,3502,1036],{"class":85},[56,3504,245],{"class":81},[56,3506,3158],{"class":77},[56,3508,82],{"class":81},[56,3510,163],{"class":155},[56,3512,399],{"class":159},[56,3514,163],{"class":155},[56,3516,89],{"class":81},[56,3518,456],{"class":81},[56,3520,3521],{"class":226},"newName",[56,3523,234],{"class":81},[56,3525,469],{"class":70},[56,3527,142],{"class":81},[56,3529,3531,3534,3536,3538,3540,3542,3545,3547,3549,3551,3553],{"class":58,"line":3530},41,[56,3532,3533],{"class":85},"  console",[56,3535,245],{"class":81},[56,3537,248],{"class":77},[56,3539,82],{"class":81},[56,3541,253],{"class":155},[56,3543,3544],{"class":159},"Name changed to ",[56,3546,260],{"class":259},[56,3548,3521],{"class":263},[56,3550,267],{"class":259},[56,3552,253],{"class":155},[56,3554,95],{"class":81},[56,3556,3558],{"class":58,"line":3557},42,[56,3559,383],{"class":81},[56,3561,3563],{"class":58,"line":3562},43,[56,3564,193],{"emptyLinePlaceholder":192},[56,3566,3568,3571,3573,3575,3577,3579,3581,3583],{"class":58,"line":3567},44,[56,3569,3570],{"class":85},"person",[56,3572,245],{"class":81},[56,3574,399],{"class":85},[56,3576,71],{"class":70},[56,3578,156],{"class":155},[56,3580,406],{"class":159},[56,3582,163],{"class":155},[56,3584,3585],{"class":411}," // 输出: Name changed to Jane\n",[56,3587,3589,3592],{"class":58,"line":3588},45,[56,3590,3591],{"class":77},"unsubscribe",[56,3593,3594],{"class":81},"()\n",[56,3596,3598,3600,3602,3604,3606,3608,3610,3612],{"class":58,"line":3597},46,[56,3599,3570],{"class":85},[56,3601,245],{"class":81},[56,3603,399],{"class":85},[56,3605,71],{"class":70},[56,3607,156],{"class":155},[56,3609,160],{"class":159},[56,3611,163],{"class":155},[56,3613,3614],{"class":411}," // 不会输出任何内容\n",[15,3616,3618],{"id":3617},"_2-权限控制","2. 权限控制",[47,3620,3622],{"className":49,"code":3621,"language":51,"meta":52,"style":52},"function createSecureObject(role) {\n  const data = {\n    sensitiveInfo: 'secret'\n  }\n  return new Proxy(data, {\n    get: (target, p, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.get(target, p, receiver)\n      }\n    },\n    set: (target, p, newValue, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.set(target, p, newValue, receiver)\n      }\n    }\n  })\n}\n\nconst admin = createSecureObject('admin')\nconsole.log(admin.sensitiveInfo) // secret\n\nconst user = createSecureObject('user')\nconsole.log(user.sensitiveInfo) // Error: Access Denied\n",[24,3623,3624,3640,3651,3665,3669,3686,3710,3746,3767,3771,3778,3802,3806,3810,3838,3870,3888,3892,3898,3926,3930,3935,3939,3943,3947,3968,3989,3993,4015],{"__ignoreMap":52},[56,3625,3626,3628,3631,3633,3636,3638],{"class":58,"line":59},[56,3627,2921],{"class":62},[56,3629,3630],{"class":77}," createSecureObject",[56,3632,82],{"class":81},[56,3634,3635],{"class":226},"role",[56,3637,234],{"class":81},[56,3639,142],{"class":81},[56,3641,3642,3644,3647,3649],{"class":58,"line":145},[56,3643,2938],{"class":62},[56,3645,3646],{"class":66}," data",[56,3648,71],{"class":70},[56,3650,142],{"class":81},[56,3652,3653,3656,3658,3660,3663],{"class":58,"line":169},[56,3654,3655],{"class":148},"    sensitiveInfo",[56,3657,152],{"class":81},[56,3659,156],{"class":155},[56,3661,3662],{"class":159},"secret",[56,3664,1341],{"class":155},[56,3666,3667],{"class":58,"line":183},[56,3668,377],{"class":81},[56,3670,3671,3673,3675,3677,3679,3682,3684],{"class":58,"line":189},[56,3672,2958],{"class":277},[56,3674,74],{"class":62},[56,3676,78],{"class":77},[56,3678,82],{"class":81},[56,3680,3681],{"class":85},"data",[56,3683,89],{"class":81},[56,3685,142],{"class":81},[56,3687,3688,3690,3692,3694,3696,3698,3700,3702,3704,3706,3708],{"class":58,"line":196},[56,3689,3126],{"class":77},[56,3691,152],{"class":81},[56,3693,456],{"class":81},[56,3695,86],{"class":226},[56,3697,89],{"class":81},[56,3699,2984],{"class":226},[56,3701,89],{"class":81},[56,3703,2292],{"class":226},[56,3705,234],{"class":81},[56,3707,469],{"class":70},[56,3709,142],{"class":81},[56,3711,3712,3714,3716,3718,3720,3722,3725,3727,3729,3732,3735,3737,3740,3742,3744],{"class":58,"line":218},[56,3713,3036],{"class":277},[56,3715,456],{"class":81},[56,3717,20],{"class":85},[56,3719,3153],{"class":62},[56,3721,156],{"class":155},[56,3723,3724],{"class":159},"sensitiveInfo",[56,3726,163],{"class":155},[56,3728,3044],{"class":62},[56,3730,3731],{"class":85}," role",[56,3733,3734],{"class":62}," !==",[56,3736,156],{"class":155},[56,3738,3739],{"class":159},"admin",[56,3741,163],{"class":155},[56,3743,234],{"class":81},[56,3745,142],{"class":81},[56,3747,3748,3751,3753,3756,3758,3760,3763,3765],{"class":58,"line":239},[56,3749,3750],{"class":277},"        throw",[56,3752,74],{"class":62},[56,3754,3755],{"class":77}," Error",[56,3757,82],{"class":81},[56,3759,163],{"class":155},[56,3761,3762],{"class":159},"Access Denied",[56,3764,163],{"class":155},[56,3766,95],{"class":81},[56,3768,3769],{"class":58,"line":274},[56,3770,3116],{"class":81},[56,3772,3773,3776],{"class":58,"line":291},[56,3774,3775],{"class":277},"      else",[56,3777,142],{"class":81},[56,3779,3780,3782,3784,3786,3788,3790,3792,3794,3796,3798,3800],{"class":58,"line":297},[56,3781,3173],{"class":277},[56,3783,1251],{"class":85},[56,3785,245],{"class":81},[56,3787,113],{"class":77},[56,3789,82],{"class":81},[56,3791,86],{"class":85},[56,3793,89],{"class":81},[56,3795,2984],{"class":85},[56,3797,89],{"class":81},[56,3799,2292],{"class":85},[56,3801,95],{"class":81},[56,3803,3804],{"class":58,"line":320},[56,3805,3116],{"class":81},[56,3807,3808],{"class":58,"line":356},[56,3809,3121],{"class":81},[56,3811,3812,3814,3816,3818,3820,3822,3824,3826,3828,3830,3832,3834,3836],{"class":58,"line":374},[56,3813,2975],{"class":77},[56,3815,152],{"class":81},[56,3817,456],{"class":81},[56,3819,86],{"class":226},[56,3821,89],{"class":81},[56,3823,2984],{"class":226},[56,3825,89],{"class":81},[56,3827,2989],{"class":226},[56,3829,89],{"class":81},[56,3831,2292],{"class":226},[56,3833,234],{"class":81},[56,3835,469],{"class":70},[56,3837,142],{"class":81},[56,3839,3840,3842,3844,3846,3848,3850,3852,3854,3856,3858,3860,3862,3864,3866,3868],{"class":58,"line":380},[56,3841,3036],{"class":277},[56,3843,456],{"class":81},[56,3845,20],{"class":85},[56,3847,3153],{"class":62},[56,3849,156],{"class":155},[56,3851,3724],{"class":159},[56,3853,163],{"class":155},[56,3855,3044],{"class":62},[56,3857,3731],{"class":85},[56,3859,3734],{"class":62},[56,3861,156],{"class":155},[56,3863,3739],{"class":159},[56,3865,163],{"class":155},[56,3867,234],{"class":81},[56,3869,142],{"class":81},[56,3871,3872,3874,3876,3878,3880,3882,3884,3886],{"class":58,"line":386},[56,3873,3750],{"class":277},[56,3875,74],{"class":62},[56,3877,3755],{"class":77},[56,3879,82],{"class":81},[56,3881,163],{"class":155},[56,3883,3762],{"class":159},[56,3885,163],{"class":155},[56,3887,95],{"class":81},[56,3889,3890],{"class":58,"line":391},[56,3891,3116],{"class":81},[56,3893,3894,3896],{"class":58,"line":415},[56,3895,3775],{"class":277},[56,3897,142],{"class":81},[56,3899,3900,3902,3904,3906,3908,3910,3912,3914,3916,3918,3920,3922,3924],{"class":58,"line":753},[56,3901,3173],{"class":277},[56,3903,1251],{"class":85},[56,3905,245],{"class":81},[56,3907,117],{"class":77},[56,3909,82],{"class":81},[56,3911,86],{"class":85},[56,3913,89],{"class":81},[56,3915,2984],{"class":85},[56,3917,89],{"class":81},[56,3919,2989],{"class":85},[56,3921,89],{"class":81},[56,3923,2292],{"class":85},[56,3925,95],{"class":81},[56,3927,3928],{"class":58,"line":2059},[56,3929,3116],{"class":81},[56,3931,3932],{"class":58,"line":3271},[56,3933,3934],{"class":81},"    }\n",[56,3936,3937],{"class":58,"line":3276},[56,3938,3435],{"class":81},[56,3940,3941],{"class":58,"line":3289},[56,3942,186],{"class":81},[56,3944,3945],{"class":58,"line":3312},[56,3946,193],{"emptyLinePlaceholder":192},[56,3948,3949,3951,3954,3956,3958,3960,3962,3964,3966],{"class":58,"line":3335},[56,3950,63],{"class":62},[56,3952,3953],{"class":66}," admin",[56,3955,71],{"class":70},[56,3957,3630],{"class":77},[56,3959,82],{"class":81},[56,3961,163],{"class":155},[56,3963,3739],{"class":159},[56,3965,163],{"class":155},[56,3967,95],{"class":81},[56,3969,3970,3972,3974,3976,3978,3980,3982,3984,3986],{"class":58,"line":3358},[56,3971,639],{"class":85},[56,3973,245],{"class":81},[56,3975,248],{"class":77},[56,3977,82],{"class":81},[56,3979,3739],{"class":85},[56,3981,245],{"class":81},[56,3983,3724],{"class":85},[56,3985,234],{"class":81},[56,3987,3988],{"class":411}," // secret\n",[56,3990,3991],{"class":58,"line":3379},[56,3992,193],{"emptyLinePlaceholder":192},[56,3994,3995,3997,4000,4002,4004,4006,4008,4011,4013],{"class":58,"line":3385},[56,3996,63],{"class":62},[56,3998,3999],{"class":66}," user",[56,4001,71],{"class":70},[56,4003,3630],{"class":77},[56,4005,82],{"class":81},[56,4007,163],{"class":155},[56,4009,4010],{"class":159},"user",[56,4012,163],{"class":155},[56,4014,95],{"class":81},[56,4016,4017,4019,4021,4023,4025,4027,4029,4031,4033],{"class":58,"line":3390},[56,4018,639],{"class":85},[56,4020,245],{"class":81},[56,4022,248],{"class":77},[56,4024,82],{"class":81},[56,4026,4010],{"class":85},[56,4028,245],{"class":81},[56,4030,3724],{"class":85},[56,4032,234],{"class":81},[56,4034,4035],{"class":411}," // Error: Access Denied\n",[15,4037,4039],{"id":4038},"_3-面向切面编程","3. 面向切面编程",[20,4041,4042],{},"通过 Proxy 拦截函数,可以对函数的执行添加行为,例如计算函数执行消耗的时间",[47,4044,4046],{"className":49,"code":4045,"language":51,"meta":52,"style":52},"function calcFuncExecTime(func) {\n  return new Proxy(func, {\n    apply(target, thisArg, args) {\n      const start = performance.now()\n      const result = Reflect.apply(target, thisArg, args)\n      const end = performance.now()\n      console.log(`function execution time ${(end - start).toFixed(3)}ms`)\n      return result\n    }\n  })\n}\n\nconst sum = calcFuncExecTime((a, b) => a + b)\nsum(1, 2) // function execution time 0.043ms\n",[24,4047,4048,4064,4080,4102,4121,4149,4166,4213,4220,4224,4228,4232,4236,4266],{"__ignoreMap":52},[56,4049,4050,4052,4055,4057,4060,4062],{"class":58,"line":59},[56,4051,2921],{"class":62},[56,4053,4054],{"class":77}," calcFuncExecTime",[56,4056,82],{"class":81},[56,4058,4059],{"class":226},"func",[56,4061,234],{"class":81},[56,4063,142],{"class":81},[56,4065,4066,4068,4070,4072,4074,4076,4078],{"class":58,"line":145},[56,4067,2958],{"class":277},[56,4069,74],{"class":62},[56,4071,78],{"class":77},[56,4073,82],{"class":81},[56,4075,4059],{"class":85},[56,4077,89],{"class":81},[56,4079,142],{"class":81},[56,4081,4082,4085,4087,4089,4091,4093,4095,4098,4100],{"class":58,"line":169},[56,4083,4084],{"class":77},"    apply",[56,4086,82],{"class":81},[56,4088,86],{"class":226},[56,4090,89],{"class":81},[56,4092,518],{"class":226},[56,4094,89],{"class":81},[56,4096,4097],{"class":226}," args",[56,4099,234],{"class":81},[56,4101,142],{"class":81},[56,4103,4104,4106,4109,4111,4114,4116,4119],{"class":58,"line":183},[56,4105,3002],{"class":62},[56,4107,4108],{"class":66}," start",[56,4110,71],{"class":70},[56,4112,4113],{"class":85}," performance",[56,4115,245],{"class":81},[56,4117,4118],{"class":77},"now",[56,4120,3594],{"class":81},[56,4122,4123,4125,4127,4129,4131,4133,4135,4137,4139,4141,4143,4145,4147],{"class":58,"line":189},[56,4124,3002],{"class":62},[56,4126,1160],{"class":66},[56,4128,71],{"class":70},[56,4130,1251],{"class":85},[56,4132,245],{"class":81},[56,4134,612],{"class":77},[56,4136,82],{"class":81},[56,4138,86],{"class":85},[56,4140,89],{"class":81},[56,4142,518],{"class":85},[56,4144,89],{"class":81},[56,4146,4097],{"class":85},[56,4148,95],{"class":81},[56,4150,4151,4153,4156,4158,4160,4162,4164],{"class":58,"line":196},[56,4152,3002],{"class":62},[56,4154,4155],{"class":66}," end",[56,4157,71],{"class":70},[56,4159,4113],{"class":85},[56,4161,245],{"class":81},[56,4163,4118],{"class":77},[56,4165,3594],{"class":81},[56,4167,4168,4171,4173,4175,4177,4179,4182,4184,4186,4189,4191,4193,4195,4198,4200,4202,4204,4206,4209,4211],{"class":58,"line":218},[56,4169,4170],{"class":85},"      console",[56,4172,245],{"class":81},[56,4174,248],{"class":77},[56,4176,82],{"class":81},[56,4178,253],{"class":155},[56,4180,4181],{"class":159},"function execution time ",[56,4183,260],{"class":259},[56,4185,82],{"class":564},[56,4187,4188],{"class":263},"end",[56,4190,3349],{"class":62},[56,4192,4108],{"class":263},[56,4194,3079],{"class":564},[56,4196,4197],{"class":77},"toFixed",[56,4199,82],{"class":564},[56,4201,699],{"class":177},[56,4203,234],{"class":564},[56,4205,267],{"class":259},[56,4207,4208],{"class":159},"ms",[56,4210,253],{"class":155},[56,4212,95],{"class":81},[56,4214,4215,4217],{"class":58,"line":239},[56,4216,3404],{"class":277},[56,4218,4219],{"class":85}," result\n",[56,4221,4222],{"class":58,"line":274},[56,4223,3934],{"class":81},[56,4225,4226],{"class":58,"line":291},[56,4227,3435],{"class":81},[56,4229,4230],{"class":58,"line":297},[56,4231,186],{"class":81},[56,4233,4234],{"class":58,"line":320},[56,4235,193],{"emptyLinePlaceholder":192},[56,4237,4238,4240,4242,4244,4246,4248,4250,4252,4254,4256,4258,4260,4262,4264],{"class":58,"line":356},[56,4239,63],{"class":62},[56,4241,451],{"class":66},[56,4243,71],{"class":70},[56,4245,4054],{"class":77},[56,4247,3085],{"class":81},[56,4249,459],{"class":226},[56,4251,89],{"class":81},[56,4253,464],{"class":226},[56,4255,234],{"class":81},[56,4257,469],{"class":70},[56,4259,472],{"class":85},[56,4261,475],{"class":62},[56,4263,464],{"class":85},[56,4265,95],{"class":81},[56,4267,4268,4270,4272,4274,4276,4278,4280],{"class":58,"line":374},[56,4269,500],{"class":77},[56,4271,82],{"class":81},[56,4273,653],{"class":177},[56,4275,89],{"class":81},[56,4277,658],{"class":177},[56,4279,234],{"class":81},[56,4281,4282],{"class":411}," // function execution time 0.043ms\n",[4284,4285,4286],"style",{},"html pre.shiki code .s8I54, html code.shiki .s8I54{--shiki-default:#F97583;--shiki-dark:#CB7676}html pre.shiki code .sXTEK, html code.shiki .sXTEK{--shiki-default:#79B8FF;--shiki-dark:#BD976A}html pre.shiki code .soRP2, html code.shiki .soRP2{--shiki-default:#F97583;--shiki-dark:#666666}html pre.shiki code .scd8n, html code.shiki .scd8n{--shiki-default:#B392F0;--shiki-dark:#80A665}html pre.shiki code .sybYZ, html code.shiki .sybYZ{--shiki-default:#E1E4E8;--shiki-dark:#666666}html pre.shiki code .sVbU4, html code.shiki .sVbU4{--shiki-default:#E1E4E8;--shiki-dark:#BD976A}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sqmIX, html code.shiki .sqmIX{--shiki-default:#E1E4E8;--shiki-dark:#B8A965}html pre.shiki code .sajHj, html code.shiki .sajHj{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D77}html pre.shiki code .sx1Rn, html code.shiki .sx1Rn{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D}html pre.shiki code .svno3, html code.shiki .svno3{--shiki-default:#79B8FF;--shiki-dark:#4C9A91}html pre.shiki code .sSfpy, html code.shiki .sSfpy{--shiki-default:#FFAB70;--shiki-dark:#BD976A}html pre.shiki code .sOPOU, html code.shiki .sOPOU{--shiki-default:#9ECBFF;--shiki-dark:#4D9375}html pre.shiki code .sGUJ0, html code.shiki .sGUJ0{--shiki-default:#E1E4E8;--shiki-dark:#C98A7D}html pre.shiki code .scBr_, html code.shiki .scBr_{--shiki-default:#F97583;--shiki-dark:#4D9375}html pre.shiki code .sKXKF, html code.shiki .sKXKF{--shiki-default:#6A737D;--shiki-dark:#758575DD}html pre.shiki code .snnN9, html code.shiki .snnN9{--shiki-default:#9ECBFF;--shiki-dark:#666666}html pre.shiki code .smuiB, html code.shiki .smuiB{--shiki-default:#79B8FF;--shiki-dark:#CB7676}html pre.shiki code .s3iJD, html code.shiki .s3iJD{--shiki-default:#B392F0;--shiki-dark:#5DA994}html pre.shiki code .s_3qV, html code.shiki .s_3qV{--shiki-default:#79B8FF;--shiki-dark:#C99076}html pre.shiki code .sSBLT, html code.shiki .sSBLT{--shiki-default:#79B8FF;--shiki-dark:#4D9375}",{"title":52,"searchDepth":145,"depth":145,"links":4288},[4289,4290,4291,4295,4301,4308,4309,4310],{"id":17,"depth":145,"text":18},{"id":121,"depth":145,"text":122},{"id":427,"depth":145,"text":428,"children":4292},[4293,4294],{"id":432,"depth":169,"text":433},{"id":817,"depth":169,"text":818},{"id":1115,"depth":145,"text":4296,"children":4297},"1. 使用Reflcet和直接使用语法操作对象的区别",[4298,4299,4300],{"id":1123,"depth":169,"text":1124},{"id":1313,"depth":169,"text":1314},{"id":1672,"depth":169,"text":1673},{"id":2240,"depth":145,"text":2241,"children":4302},[4303,4304,4306],{"id":2244,"depth":169,"text":2245},{"id":2428,"depth":169,"text":4305},"2.2 确保正确的this",{"id":2883,"depth":169,"text":4307},"2.3 总结:在Proxy中使用Reflect的原因",{"id":2910,"depth":145,"text":2911},{"id":3617,"depth":145,"text":3618},{"id":4038,"depth":145,"text":4039},"2025-04-11T00:00:00.000Z","md",null,{},"/blog/202504/understand-proxy-and-reflcet","qingkun",{"title":5,"description":52},"blog/202504/01.understand-proxy-and-reflcet","dW7oF2C6K7t4dMwy_pBVmQZiWSWXGT2dNGIxyC3slRE",1746713259115]