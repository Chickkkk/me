[{"data":1,"prerenderedAt":4317},["ShallowReactive",2],{"/blog/202504/understand-proxy-and-reflcet":3},{"id":4,"title":5,"body":6,"date":4308,"description":4309,"extension":4310,"image":4309,"meta":4311,"navigation":196,"path":4312,"qk":4313,"seo":4314,"stem":4315,"tags":4309,"__hash__":4316},"blog/blog/202504/01.understand-proxy-and-reflcet.md","带你了解Proxy和Reflcet",{"type":7,"value":8,"toc":4291},"minimal",[9,13,18,23,50,100,123,127,130,429,433,438,444,793,819,823,828,1065,1082,1086,1091,1102,1111,1117,1125,1129,1132,1141,1222,1230,1315,1319,1322,1326,1331,1426,1431,1528,1534,1674,1678,1681,1843,1853,1861,2081,2093,2242,2246,2250,2255,2363,2366,2430,2436,2439,2444,2654,2662,2667,2885,2896,2908,2912,2916,3619,3623,4040,4044,4047,4287],[10,11,5],"h1",{"id":12},"带你了解proxy和reflcet",[14,15,17],"h2",{"id":16},"一proxy代理","一、Proxy（代理）",[19,20,22],"h3",{"id":21},"_1基本概念","1.基本概念",[24,25,26,27,31,32,35,36,39,40,39,43,39,46,49],"p",{},"Proxy 对象用于创建一个对象的",[28,29,30],"code",{},"代理",",从而实现基本操作的",[28,33,34],{},"拦截","和自定义 （比如:",[28,37,38],{},"属性查找","、",[28,41,42],{},"赋值",[28,44,45],{},"枚举",[28,47,48],{},"函数调用","等",[51,52,57],"pre",{"className":53,"code":54,"language":55,"meta":56,"style":56},"language-js shiki shiki-themes github-dark vitesse-dark","const proxyObject = new Proxy(target, handler)\n","js","",[28,58,59],{"__ignoreMap":56},[60,61,64,68,72,76,79,83,87,91,94,97],"span",{"class":62,"line":63},"line",1,[60,65,67],{"class":66},"s8I54","const",[60,69,71],{"class":70},"sXTEK"," proxyObject",[60,73,75],{"class":74},"soRP2"," =",[60,77,78],{"class":66}," new",[60,80,82],{"class":81},"scd8n"," Proxy",[60,84,86],{"class":85},"sybYZ","(",[60,88,90],{"class":89},"sVbU4","target",[60,92,93],{"class":85},",",[60,95,96],{"class":89}," handler",[60,98,99],{"class":85},")\n",[101,102,103,109],"ul",{},[104,105,106,108],"li",{},[28,107,90],{},": 代理的目标对象",[104,110,111,114,115,118,119,122],{},[28,112,113],{},"handler",": 是一个对象,是定义代理对象行为的函数 。比如",[28,116,117],{},"get","捕捉器用于读取 target 的属性,",[28,120,121],{},"set","捕捉器用于写入 target 的属性,等等",[19,124,126],{"id":125},"_2proxy-对对象的拦截","2.Proxy 对对象的拦截",[24,128,129],{},"对一个对象的的属性进行读取或写入时,打印相关信息",[51,131,133],{"className":53,"code":132,"language":55,"meta":56,"style":56},"const target = {\n  name: 'John',\n  age: 18,\n}\n\nconst proxy = new Proxy(target, {\n  get(target, prop) {\n    console.log(`Getting ${prop}`)\n    return target[prop]\n  },\n  set(target, prop, value) {\n    console.log(`Setting ${prop} = ${value}`)\n    target[prop] = value\n  }\n})\n\nproxy.name = 'Jane' // Setting name = Jane\nproxy.name // Getting name, Jane\n",[28,134,135,147,171,185,191,198,220,241,276,293,299,322,358,376,382,388,393,417],{"__ignoreMap":56},[60,136,137,139,142,144],{"class":62,"line":63},[60,138,67],{"class":66},[60,140,141],{"class":70}," target",[60,143,75],{"class":74},[60,145,146],{"class":85}," {\n",[60,148,150,154,157,161,165,168],{"class":62,"line":149},2,[60,151,153],{"class":152},"sqmIX","  name",[60,155,156],{"class":85},":",[60,158,160],{"class":159},"sajHj"," '",[60,162,164],{"class":163},"sx1Rn","John",[60,166,167],{"class":159},"'",[60,169,170],{"class":85},",\n",[60,172,174,177,179,183],{"class":62,"line":173},3,[60,175,176],{"class":152},"  age",[60,178,156],{"class":85},[60,180,182],{"class":181},"svno3"," 18",[60,184,170],{"class":85},[60,186,188],{"class":62,"line":187},4,[60,189,190],{"class":85},"}\n",[60,192,194],{"class":62,"line":193},5,[60,195,197],{"emptyLinePlaceholder":196},true,"\n",[60,199,201,203,206,208,210,212,214,216,218],{"class":62,"line":200},6,[60,202,67],{"class":66},[60,204,205],{"class":70}," proxy",[60,207,75],{"class":74},[60,209,78],{"class":66},[60,211,82],{"class":81},[60,213,86],{"class":85},[60,215,90],{"class":89},[60,217,93],{"class":85},[60,219,146],{"class":85},[60,221,223,226,228,231,233,236,239],{"class":62,"line":222},7,[60,224,225],{"class":81},"  get",[60,227,86],{"class":85},[60,229,90],{"class":230},"sSfpy",[60,232,93],{"class":85},[60,234,235],{"class":230}," prop",[60,237,238],{"class":85},")",[60,240,146],{"class":85},[60,242,244,247,250,253,255,258,261,265,269,272,274],{"class":62,"line":243},8,[60,245,246],{"class":89},"    console",[60,248,249],{"class":85},".",[60,251,252],{"class":81},"log",[60,254,86],{"class":85},[60,256,257],{"class":159},"`",[60,259,260],{"class":163},"Getting ",[60,262,264],{"class":263},"sOPOU","${",[60,266,268],{"class":267},"sGUJ0","prop",[60,270,271],{"class":263},"}",[60,273,257],{"class":159},[60,275,99],{"class":85},[60,277,279,283,285,288,290],{"class":62,"line":278},9,[60,280,282],{"class":281},"scBr_","    return",[60,284,141],{"class":89},[60,286,287],{"class":85},"[",[60,289,268],{"class":89},[60,291,292],{"class":85},"]\n",[60,294,296],{"class":62,"line":295},10,[60,297,298],{"class":85},"  },\n",[60,300,302,305,307,309,311,313,315,318,320],{"class":62,"line":301},11,[60,303,304],{"class":81},"  set",[60,306,86],{"class":85},[60,308,90],{"class":230},[60,310,93],{"class":85},[60,312,235],{"class":230},[60,314,93],{"class":85},[60,316,317],{"class":230}," value",[60,319,238],{"class":85},[60,321,146],{"class":85},[60,323,325,327,329,331,333,335,338,340,342,344,347,349,352,354,356],{"class":62,"line":324},12,[60,326,246],{"class":89},[60,328,249],{"class":85},[60,330,252],{"class":81},[60,332,86],{"class":85},[60,334,257],{"class":159},[60,336,337],{"class":163},"Setting ",[60,339,264],{"class":263},[60,341,268],{"class":267},[60,343,271],{"class":263},[60,345,346],{"class":163}," = ",[60,348,264],{"class":263},[60,350,351],{"class":267},"value",[60,353,271],{"class":263},[60,355,257],{"class":159},[60,357,99],{"class":85},[60,359,361,364,366,368,371,373],{"class":62,"line":360},13,[60,362,363],{"class":89},"    target",[60,365,287],{"class":85},[60,367,268],{"class":89},[60,369,370],{"class":85},"]",[60,372,75],{"class":74},[60,374,375],{"class":89}," value\n",[60,377,379],{"class":62,"line":378},14,[60,380,381],{"class":85},"  }\n",[60,383,385],{"class":62,"line":384},15,[60,386,387],{"class":85},"})\n",[60,389,391],{"class":62,"line":390},16,[60,392,197],{"emptyLinePlaceholder":196},[60,394,396,399,401,404,406,408,411,413],{"class":62,"line":395},17,[60,397,398],{"class":89},"proxy",[60,400,249],{"class":85},[60,402,403],{"class":89},"name",[60,405,75],{"class":74},[60,407,160],{"class":159},[60,409,410],{"class":163},"Jane",[60,412,167],{"class":159},[60,414,416],{"class":415},"sKXKF"," // Setting name = Jane\n",[60,418,420,422,424,426],{"class":62,"line":419},18,[60,421,398],{"class":89},[60,423,249],{"class":85},[60,425,403],{"class":89},[60,427,428],{"class":415}," // Getting name, Jane\n",[19,430,432],{"id":431},"_3proxy-对对函数的拦截","3.Proxy 对对函数的拦截",[434,435,437],"h4",{"id":436},"_31-拦截函数调用-apply-陷阱","3.1 拦截函数调用 (apply 陷阱)",[439,440,441],"blockquote",{},[24,442,443],{},"apply 是 Proxy handler 对象中的一个特殊方法（陷阱）,它用于拦截函数调用操作。当代理的目标对象是一个函数,并且这个函数被调用时（如 proxy() 或 proxy.call()）,apply 陷阱就会被触发。",[51,445,447],{"className":53,"code":446,"language":55,"meta":56,"style":56},"const sum = (a, b) => a + b\n\nconst proxySum = new Proxy(sum, {\n  apply(target, thisArg, argArray) {\n    // target: 被代理的原始函数\n    // thisArg: 调用时的this值\n    // argArray: 调用时传递的参数数组\n    console.log(`function name: ${target.name}`) // 通过 target.name 获取函数名\n    console.log(`Calculating sum of ${argArray}`)\n    return target.apply(target, argArray)\n  },\n})\n\nconsole.log(proxySum(1, 2)) // Calculating sum of 1,2\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.apply(null, [3, 4])) // Calculating sum of 3,4\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.call(null, 5, 6)) // Calculating sum of 5,6\nconsole.log(proxySum.bind(null, 7, 8)()) // Calculating sum of 7,8\n",[28,448,449,483,487,509,532,537,542,547,580,606,627,631,635,639,669,674,715,719,755],{"__ignoreMap":56},[60,450,451,453,456,458,461,464,466,469,471,474,477,480],{"class":62,"line":63},[60,452,67],{"class":66},[60,454,455],{"class":81}," sum",[60,457,75],{"class":74},[60,459,460],{"class":85}," (",[60,462,463],{"class":230},"a",[60,465,93],{"class":85},[60,467,468],{"class":230}," b",[60,470,238],{"class":85},[60,472,473],{"class":74}," =>",[60,475,476],{"class":89}," a",[60,478,479],{"class":66}," +",[60,481,482],{"class":89}," b\n",[60,484,485],{"class":62,"line":149},[60,486,197],{"emptyLinePlaceholder":196},[60,488,489,491,494,496,498,500,502,505,507],{"class":62,"line":173},[60,490,67],{"class":66},[60,492,493],{"class":70}," proxySum",[60,495,75],{"class":74},[60,497,78],{"class":66},[60,499,82],{"class":81},[60,501,86],{"class":85},[60,503,504],{"class":89},"sum",[60,506,93],{"class":85},[60,508,146],{"class":85},[60,510,511,514,516,518,520,523,525,528,530],{"class":62,"line":187},[60,512,513],{"class":81},"  apply",[60,515,86],{"class":85},[60,517,90],{"class":230},[60,519,93],{"class":85},[60,521,522],{"class":230}," thisArg",[60,524,93],{"class":85},[60,526,527],{"class":230}," argArray",[60,529,238],{"class":85},[60,531,146],{"class":85},[60,533,534],{"class":62,"line":193},[60,535,536],{"class":415},"    // target: 被代理的原始函数\n",[60,538,539],{"class":62,"line":200},[60,540,541],{"class":415},"    // thisArg: 调用时的this值\n",[60,543,544],{"class":62,"line":222},[60,545,546],{"class":415},"    // argArray: 调用时传递的参数数组\n",[60,548,549,551,553,555,557,559,562,564,566,569,571,573,575,577],{"class":62,"line":243},[60,550,246],{"class":89},[60,552,249],{"class":85},[60,554,252],{"class":81},[60,556,86],{"class":85},[60,558,257],{"class":159},[60,560,561],{"class":163},"function name: ",[60,563,264],{"class":263},[60,565,90],{"class":267},[60,567,249],{"class":568},"snnN9",[60,570,403],{"class":267},[60,572,271],{"class":263},[60,574,257],{"class":159},[60,576,238],{"class":85},[60,578,579],{"class":415}," // 通过 target.name 获取函数名\n",[60,581,582,584,586,588,590,592,595,597,600,602,604],{"class":62,"line":278},[60,583,246],{"class":89},[60,585,249],{"class":85},[60,587,252],{"class":81},[60,589,86],{"class":85},[60,591,257],{"class":159},[60,593,594],{"class":163},"Calculating sum of ",[60,596,264],{"class":263},[60,598,599],{"class":267},"argArray",[60,601,271],{"class":263},[60,603,257],{"class":159},[60,605,99],{"class":85},[60,607,608,610,612,614,617,619,621,623,625],{"class":62,"line":295},[60,609,282],{"class":281},[60,611,141],{"class":89},[60,613,249],{"class":85},[60,615,616],{"class":81},"apply",[60,618,86],{"class":85},[60,620,90],{"class":89},[60,622,93],{"class":85},[60,624,527],{"class":89},[60,626,99],{"class":85},[60,628,629],{"class":62,"line":301},[60,630,298],{"class":85},[60,632,633],{"class":62,"line":324},[60,634,387],{"class":85},[60,636,637],{"class":62,"line":360},[60,638,197],{"emptyLinePlaceholder":196},[60,640,641,644,646,648,650,653,655,658,660,663,666],{"class":62,"line":378},[60,642,643],{"class":89},"console",[60,645,249],{"class":85},[60,647,252],{"class":81},[60,649,86],{"class":85},[60,651,652],{"class":81},"proxySum",[60,654,86],{"class":85},[60,656,657],{"class":181},"1",[60,659,93],{"class":85},[60,661,662],{"class":181}," 2",[60,664,665],{"class":85},"))",[60,667,668],{"class":415}," // Calculating sum of 1,2\n",[60,670,671],{"class":62,"line":384},[60,672,673],{"class":415},"// eslint-disable-next-line no-useless-call\n",[60,675,676,678,680,682,684,686,688,690,692,696,698,701,704,706,709,712],{"class":62,"line":390},[60,677,643],{"class":89},[60,679,249],{"class":85},[60,681,252],{"class":81},[60,683,86],{"class":85},[60,685,652],{"class":89},[60,687,249],{"class":85},[60,689,616],{"class":81},[60,691,86],{"class":85},[60,693,695],{"class":694},"smuiB","null",[60,697,93],{"class":85},[60,699,700],{"class":85}," [",[60,702,703],{"class":181},"3",[60,705,93],{"class":85},[60,707,708],{"class":181}," 4",[60,710,711],{"class":85},"]))",[60,713,714],{"class":415}," // Calculating sum of 3,4\n",[60,716,717],{"class":62,"line":395},[60,718,673],{"class":415},[60,720,721,723,725,727,729,731,733,736,738,740,742,745,747,750,752],{"class":62,"line":419},[60,722,643],{"class":89},[60,724,249],{"class":85},[60,726,252],{"class":81},[60,728,86],{"class":85},[60,730,652],{"class":89},[60,732,249],{"class":85},[60,734,735],{"class":81},"call",[60,737,86],{"class":85},[60,739,695],{"class":694},[60,741,93],{"class":85},[60,743,744],{"class":181}," 5",[60,746,93],{"class":85},[60,748,749],{"class":181}," 6",[60,751,665],{"class":85},[60,753,754],{"class":415}," // Calculating sum of 5,6\n",[60,756,758,760,762,764,766,768,770,773,775,777,779,782,784,787,790],{"class":62,"line":757},19,[60,759,643],{"class":89},[60,761,249],{"class":85},[60,763,252],{"class":81},[60,765,86],{"class":85},[60,767,652],{"class":89},[60,769,249],{"class":85},[60,771,772],{"class":81},"bind",[60,774,86],{"class":85},[60,776,695],{"class":694},[60,778,93],{"class":85},[60,780,781],{"class":181}," 7",[60,783,93],{"class":85},[60,785,786],{"class":181}," 8",[60,788,789],{"class":85},")())",[60,791,792],{"class":415}," // Calculating sum of 7,8\n",[101,794,795,804,814],{},[104,796,797,799,800,803],{},[28,798,90],{},": 被代理的原始函数对象,可以通过",[28,801,802],{},"target.name","获取被代理的函数的函数名",[104,805,806,809,810,813],{},[28,807,808],{},"thisArg",": 函数调用时的 ",[28,811,812],{},"this"," 值",[104,815,816,818],{},[28,817,599],{},": 调用时传递的参数组成的数组",[434,820,822],{"id":821},"_32-拦截构造函数调用-construct-陷阱","3.2 拦截构造函数调用 (construct 陷阱)",[439,824,825],{},[24,826,827],{},"construct 陷阱是 Proxy handler 中用于拦截 new 操作符调用的特殊方法。当使用 new 调用被代理的构造函数时,这个陷阱会被触发。",[51,829,831],{"className":53,"code":830,"language":55,"meta":56,"style":56},"class Person {\n  constructor(name, age) {\n    this.name = name\n    this.age = age\n  }\n}\n\nconst ProxyPerson = new Proxy(Person, {\n  construct(target, argArray, newTarget) {\n    // target:被代理的原始构造函数\n    // argumentsList:构造函数调用时传递的参数数组\n    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n    console.log(`Creating ${target.name} with args ${argArray}`)\n    // eslint-disable-next-line new-cap\n    return new target(...argArray)\n  }\n})\n\nconst person = new ProxyPerson('John', 30) // Creating Person with args John,30\n",[28,832,833,844,862,877,891,895,899,903,925,947,952,957,962,1000,1005,1022,1026,1030,1034],{"__ignoreMap":56},[60,834,835,838,842],{"class":62,"line":63},[60,836,837],{"class":66},"class",[60,839,841],{"class":840},"s3iJD"," Person",[60,843,146],{"class":85},[60,845,846,849,851,853,855,858,860],{"class":62,"line":149},[60,847,848],{"class":66},"  constructor",[60,850,86],{"class":85},[60,852,403],{"class":230},[60,854,93],{"class":85},[60,856,857],{"class":230}," age",[60,859,238],{"class":85},[60,861,146],{"class":85},[60,863,864,868,870,872,874],{"class":62,"line":173},[60,865,867],{"class":866},"s_3qV","    this",[60,869,249],{"class":85},[60,871,403],{"class":89},[60,873,75],{"class":74},[60,875,876],{"class":89}," name\n",[60,878,879,881,883,886,888],{"class":62,"line":187},[60,880,867],{"class":866},[60,882,249],{"class":85},[60,884,885],{"class":89},"age",[60,887,75],{"class":74},[60,889,890],{"class":89}," age\n",[60,892,893],{"class":62,"line":193},[60,894,381],{"class":85},[60,896,897],{"class":62,"line":200},[60,898,190],{"class":85},[60,900,901],{"class":62,"line":222},[60,902,197],{"emptyLinePlaceholder":196},[60,904,905,907,910,912,914,916,918,921,923],{"class":62,"line":243},[60,906,67],{"class":66},[60,908,909],{"class":70}," ProxyPerson",[60,911,75],{"class":74},[60,913,78],{"class":66},[60,915,82],{"class":81},[60,917,86],{"class":85},[60,919,920],{"class":89},"Person",[60,922,93],{"class":85},[60,924,146],{"class":85},[60,926,927,930,932,934,936,938,940,943,945],{"class":62,"line":278},[60,928,929],{"class":81},"  construct",[60,931,86],{"class":85},[60,933,90],{"class":230},[60,935,93],{"class":85},[60,937,527],{"class":230},[60,939,93],{"class":85},[60,941,942],{"class":230}," newTarget",[60,944,238],{"class":85},[60,946,146],{"class":85},[60,948,949],{"class":62,"line":295},[60,950,951],{"class":415},"    // target:被代理的原始构造函数\n",[60,953,954],{"class":62,"line":301},[60,955,956],{"class":415},"    // argumentsList:构造函数调用时传递的参数数组\n",[60,958,959],{"class":62,"line":324},[60,960,961],{"class":415},"    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n",[60,963,964,966,968,970,972,974,977,979,981,983,985,987,990,992,994,996,998],{"class":62,"line":360},[60,965,246],{"class":89},[60,967,249],{"class":85},[60,969,252],{"class":81},[60,971,86],{"class":85},[60,973,257],{"class":159},[60,975,976],{"class":163},"Creating ",[60,978,264],{"class":263},[60,980,90],{"class":267},[60,982,249],{"class":568},[60,984,403],{"class":267},[60,986,271],{"class":263},[60,988,989],{"class":163}," with args ",[60,991,264],{"class":263},[60,993,599],{"class":267},[60,995,271],{"class":263},[60,997,257],{"class":159},[60,999,99],{"class":85},[60,1001,1002],{"class":62,"line":378},[60,1003,1004],{"class":415},"    // eslint-disable-next-line new-cap\n",[60,1006,1007,1009,1011,1013,1015,1018,1020],{"class":62,"line":384},[60,1008,282],{"class":281},[60,1010,78],{"class":66},[60,1012,141],{"class":81},[60,1014,86],{"class":85},[60,1016,1017],{"class":74},"...",[60,1019,599],{"class":89},[60,1021,99],{"class":85},[60,1023,1024],{"class":62,"line":390},[60,1025,381],{"class":85},[60,1027,1028],{"class":62,"line":395},[60,1029,387],{"class":85},[60,1031,1032],{"class":62,"line":419},[60,1033,197],{"emptyLinePlaceholder":196},[60,1035,1036,1038,1041,1043,1045,1047,1049,1051,1053,1055,1057,1060,1062],{"class":62,"line":757},[60,1037,67],{"class":66},[60,1039,1040],{"class":70}," person",[60,1042,75],{"class":74},[60,1044,78],{"class":66},[60,1046,909],{"class":81},[60,1048,86],{"class":85},[60,1050,167],{"class":159},[60,1052,164],{"class":163},[60,1054,167],{"class":159},[60,1056,93],{"class":85},[60,1058,1059],{"class":181}," 30",[60,1061,238],{"class":85},[60,1063,1064],{"class":415}," // Creating Person with args John,30\n",[101,1066,1067,1072,1076],{},[104,1068,1069,1071],{},[28,1070,90],{},": 被代理的原始函数对象,可以通过 target.name 获取被代理的函数的函数名",[104,1073,1074,818],{},[28,1075,599],{},[104,1077,1078,1081],{},[28,1079,1080],{},"newTarget",": 最初被调用的构造函数（通常是代理对象本身）",[14,1083,1085],{"id":1084},"二reflect反射","二、Reflect（反射）",[439,1087,1088],{},[24,1089,1090],{},"Reflect 是用于调用对象的基本操作（内部方法）",[439,1092,1093],{},[24,1094,1095,1096,1101],{},"对象的所有内部方法,参考链接:",[463,1097,1098],{"href":1098,"rel":1099},"https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf",[1100],"nofollow"," 第 44~46 页内容",[439,1103,1104],{},[24,1105,1106,1107],{},"内部方法与 Reflcet 方法对应表格,参考链接:",[463,1108,1109],{"href":1109,"rel":1110},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",[1100],[24,1112,1113,1116],{},[28,1114,1115],{},"Reflect","不是一个函数对象,因此它是不可构造的。并且 reflect 的所有属性和方法都是静态的。",[19,1118,1120,1121,1124],{"id":1119},"_1-使用reflcet和直接使用语法操作对象的区别","1. 使用",[28,1122,1123],{},"Reflcet","和直接使用语法操作对象的区别",[434,1126,1128],{"id":1127},"_11-返回值不同","1.1 返回值不同",[24,1130,1131],{},"例如: 给对象添加属性并设置值",[101,1133,1134],{},[104,1135,1136,1140],{},[1137,1138,1139],"strong",{},"直接设置",":返回设置的值（表达式的结果）",[51,1142,1144],{"className":53,"code":1143,"language":55,"meta":56,"style":56},"const obj = {}\nconst result = (obj.name = 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // jack\n",[28,1145,1146,1158,1187,1204],{"__ignoreMap":56},[60,1147,1148,1150,1153,1155],{"class":62,"line":63},[60,1149,67],{"class":66},[60,1151,1152],{"class":70}," obj",[60,1154,75],{"class":74},[60,1156,1157],{"class":85}," {}\n",[60,1159,1160,1162,1165,1167,1169,1172,1174,1176,1178,1180,1183,1185],{"class":62,"line":149},[60,1161,67],{"class":66},[60,1163,1164],{"class":70}," result",[60,1166,75],{"class":74},[60,1168,460],{"class":85},[60,1170,1171],{"class":89},"obj",[60,1173,249],{"class":85},[60,1175,403],{"class":89},[60,1177,75],{"class":74},[60,1179,160],{"class":159},[60,1181,1182],{"class":163},"jack",[60,1184,167],{"class":159},[60,1186,99],{"class":85},[60,1188,1189,1191,1193,1195,1197,1199,1201],{"class":62,"line":173},[60,1190,643],{"class":89},[60,1192,249],{"class":85},[60,1194,252],{"class":81},[60,1196,86],{"class":85},[60,1198,1171],{"class":89},[60,1200,238],{"class":85},[60,1202,1203],{"class":415}," // { name: 'jack' }\n",[60,1205,1206,1208,1210,1212,1214,1217,1219],{"class":62,"line":187},[60,1207,643],{"class":89},[60,1209,249],{"class":85},[60,1211,252],{"class":81},[60,1213,86],{"class":85},[60,1215,1216],{"class":89},"result",[60,1218,238],{"class":85},[60,1220,1221],{"class":415}," // jack\n",[101,1223,1224],{},[104,1225,1226,1229],{},[1137,1227,1228],{},"使用 Reflect",":返回一个布尔值,表示是否成功",[51,1231,1233],{"className":53,"code":1232,"language":55,"meta":56,"style":56},"const obj = {}\nconst result = Reflect.set(obj, 'name', 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // true\n",[28,1234,1235,1245,1282,1298],{"__ignoreMap":56},[60,1236,1237,1239,1241,1243],{"class":62,"line":63},[60,1238,67],{"class":66},[60,1240,1152],{"class":70},[60,1242,75],{"class":74},[60,1244,1157],{"class":85},[60,1246,1247,1249,1251,1253,1256,1258,1260,1262,1264,1266,1268,1270,1272,1274,1276,1278,1280],{"class":62,"line":149},[60,1248,67],{"class":66},[60,1250,1164],{"class":70},[60,1252,75],{"class":74},[60,1254,1255],{"class":89}," Reflect",[60,1257,249],{"class":85},[60,1259,121],{"class":81},[60,1261,86],{"class":85},[60,1263,1171],{"class":89},[60,1265,93],{"class":85},[60,1267,160],{"class":159},[60,1269,403],{"class":163},[60,1271,167],{"class":159},[60,1273,93],{"class":85},[60,1275,160],{"class":159},[60,1277,1182],{"class":163},[60,1279,167],{"class":159},[60,1281,99],{"class":85},[60,1283,1284,1286,1288,1290,1292,1294,1296],{"class":62,"line":173},[60,1285,643],{"class":89},[60,1287,249],{"class":85},[60,1289,252],{"class":81},[60,1291,86],{"class":85},[60,1293,1171],{"class":89},[60,1295,238],{"class":85},[60,1297,1203],{"class":415},[60,1299,1300,1302,1304,1306,1308,1310,1312],{"class":62,"line":187},[60,1301,643],{"class":89},[60,1303,249],{"class":85},[60,1305,252],{"class":81},[60,1307,86],{"class":85},[60,1309,1216],{"class":89},[60,1311,238],{"class":85},[60,1313,1314],{"class":415}," // true\n",[434,1316,1318],{"id":1317},"_12-处理不可写属性时的行为","1.2 处理不可写属性时的行为",[24,1320,1321],{},"例如:给对象的不可写属性赋值时",[24,1323,1324,156],{},[1137,1325,1139],{},[101,1327,1328],{},[104,1329,1330],{},"在严格模式下会抛出 TypeError",[51,1332,1334],{"className":53,"code":1333,"language":55,"meta":56,"style":56},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20 // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[28,1335,1336,1346,1356,1382,1393,1406,1410],{"__ignoreMap":56},[60,1337,1338,1340,1343],{"class":62,"line":63},[60,1339,167],{"class":159},[60,1341,1342],{"class":163},"use strict",[60,1344,1345],{"class":159},"'\n",[60,1347,1348,1350,1352,1354],{"class":62,"line":149},[60,1349,67],{"class":66},[60,1351,1152],{"class":70},[60,1353,75],{"class":74},[60,1355,1157],{"class":85},[60,1357,1358,1361,1363,1366,1368,1370,1372,1374,1376,1378,1380],{"class":62,"line":173},[60,1359,1360],{"class":89},"Object",[60,1362,249],{"class":85},[60,1364,1365],{"class":81},"defineProperty",[60,1367,86],{"class":85},[60,1369,1171],{"class":89},[60,1371,93],{"class":85},[60,1373,160],{"class":159},[60,1375,885],{"class":163},[60,1377,167],{"class":159},[60,1379,93],{"class":85},[60,1381,146],{"class":85},[60,1383,1384,1387,1389,1391],{"class":62,"line":187},[60,1385,1386],{"class":152},"  value",[60,1388,156],{"class":85},[60,1390,182],{"class":181},[60,1392,170],{"class":85},[60,1394,1395,1398,1400,1404],{"class":62,"line":193},[60,1396,1397],{"class":152},"  writeable",[60,1399,156],{"class":85},[60,1401,1403],{"class":1402},"sSBLT"," false",[60,1405,170],{"class":85},[60,1407,1408],{"class":62,"line":200},[60,1409,387],{"class":85},[60,1411,1412,1414,1416,1418,1420,1423],{"class":62,"line":222},[60,1413,1171],{"class":89},[60,1415,249],{"class":85},[60,1417,885],{"class":89},[60,1419,75],{"class":74},[60,1421,1422],{"class":181}," 20",[60,1424,1425],{"class":415}," // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[101,1427,1428],{},[104,1429,1430],{},"在非严格模式下静默失败",[51,1432,1434],{"className":53,"code":1433,"language":55,"meta":56,"style":56},"const obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20\nconsole.log(obj.age) // 18\n",[28,1435,1436,1446,1470,1480,1490,1494,1507],{"__ignoreMap":56},[60,1437,1438,1440,1442,1444],{"class":62,"line":63},[60,1439,67],{"class":66},[60,1441,1152],{"class":70},[60,1443,75],{"class":74},[60,1445,1157],{"class":85},[60,1447,1448,1450,1452,1454,1456,1458,1460,1462,1464,1466,1468],{"class":62,"line":149},[60,1449,1360],{"class":89},[60,1451,249],{"class":85},[60,1453,1365],{"class":81},[60,1455,86],{"class":85},[60,1457,1171],{"class":89},[60,1459,93],{"class":85},[60,1461,160],{"class":159},[60,1463,885],{"class":163},[60,1465,167],{"class":159},[60,1467,93],{"class":85},[60,1469,146],{"class":85},[60,1471,1472,1474,1476,1478],{"class":62,"line":173},[60,1473,1386],{"class":152},[60,1475,156],{"class":85},[60,1477,182],{"class":181},[60,1479,170],{"class":85},[60,1481,1482,1484,1486,1488],{"class":62,"line":187},[60,1483,1397],{"class":152},[60,1485,156],{"class":85},[60,1487,1403],{"class":1402},[60,1489,170],{"class":85},[60,1491,1492],{"class":62,"line":193},[60,1493,387],{"class":85},[60,1495,1496,1498,1500,1502,1504],{"class":62,"line":200},[60,1497,1171],{"class":89},[60,1499,249],{"class":85},[60,1501,885],{"class":89},[60,1503,75],{"class":74},[60,1505,1506],{"class":181}," 20\n",[60,1508,1509,1511,1513,1515,1517,1519,1521,1523,1525],{"class":62,"line":222},[60,1510,643],{"class":89},[60,1512,249],{"class":85},[60,1514,252],{"class":81},[60,1516,86],{"class":85},[60,1518,1171],{"class":89},[60,1520,249],{"class":85},[60,1522,885],{"class":89},[60,1524,238],{"class":85},[60,1526,1527],{"class":415}," // 18\n",[24,1529,1530,1533],{},[1137,1531,1532],{},"Reflect.set()",": 总是返回 false 而不抛出错误",[51,1535,1537],{"className":53,"code":1536,"language":55,"meta":56,"style":56},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nconst result = Reflect.set(obj, 'age', 20)\nconsole.log(result) // false\nconsole.log(obj.age) // 18\n",[28,1538,1539,1547,1557,1581,1591,1601,1605,1637,1654],{"__ignoreMap":56},[60,1540,1541,1543,1545],{"class":62,"line":63},[60,1542,167],{"class":159},[60,1544,1342],{"class":163},[60,1546,1345],{"class":159},[60,1548,1549,1551,1553,1555],{"class":62,"line":149},[60,1550,67],{"class":66},[60,1552,1152],{"class":70},[60,1554,75],{"class":74},[60,1556,1157],{"class":85},[60,1558,1559,1561,1563,1565,1567,1569,1571,1573,1575,1577,1579],{"class":62,"line":173},[60,1560,1360],{"class":89},[60,1562,249],{"class":85},[60,1564,1365],{"class":81},[60,1566,86],{"class":85},[60,1568,1171],{"class":89},[60,1570,93],{"class":85},[60,1572,160],{"class":159},[60,1574,885],{"class":163},[60,1576,167],{"class":159},[60,1578,93],{"class":85},[60,1580,146],{"class":85},[60,1582,1583,1585,1587,1589],{"class":62,"line":187},[60,1584,1386],{"class":152},[60,1586,156],{"class":85},[60,1588,182],{"class":181},[60,1590,170],{"class":85},[60,1592,1593,1595,1597,1599],{"class":62,"line":193},[60,1594,1397],{"class":152},[60,1596,156],{"class":85},[60,1598,1403],{"class":1402},[60,1600,170],{"class":85},[60,1602,1603],{"class":62,"line":200},[60,1604,387],{"class":85},[60,1606,1607,1609,1611,1613,1615,1617,1619,1621,1623,1625,1627,1629,1631,1633,1635],{"class":62,"line":222},[60,1608,67],{"class":66},[60,1610,1164],{"class":70},[60,1612,75],{"class":74},[60,1614,1255],{"class":89},[60,1616,249],{"class":85},[60,1618,121],{"class":81},[60,1620,86],{"class":85},[60,1622,1171],{"class":89},[60,1624,93],{"class":85},[60,1626,160],{"class":159},[60,1628,885],{"class":163},[60,1630,167],{"class":159},[60,1632,93],{"class":85},[60,1634,1422],{"class":181},[60,1636,99],{"class":85},[60,1638,1639,1641,1643,1645,1647,1649,1651],{"class":62,"line":243},[60,1640,643],{"class":89},[60,1642,249],{"class":85},[60,1644,252],{"class":81},[60,1646,86],{"class":85},[60,1648,1216],{"class":89},[60,1650,238],{"class":85},[60,1652,1653],{"class":415}," // false\n",[60,1655,1656,1658,1660,1662,1664,1666,1668,1670,1672],{"class":62,"line":278},[60,1657,643],{"class":89},[60,1659,249],{"class":85},[60,1661,252],{"class":81},[60,1663,86],{"class":85},[60,1665,1171],{"class":89},[60,1667,249],{"class":85},[60,1669,885],{"class":89},[60,1671,238],{"class":85},[60,1673,1527],{"class":415},[434,1675,1677],{"id":1676},"_13-指定-receiverthis","1.3 指定 receiver(this)",[24,1679,1680],{},"例如:对象中的 getter 的借用",[51,1682,1684],{"className":53,"code":1683,"language":55,"meta":56,"style":56},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nobj2.c = obj.c\nconsole.log(obj2.c) // 3 (不是7)\n",[28,1685,1686,1696,1708,1719,1731,1751,1755,1759,1763,1774,1785,1795,1799,1803,1822],{"__ignoreMap":56},[60,1687,1688,1690,1692,1694],{"class":62,"line":63},[60,1689,67],{"class":66},[60,1691,1152],{"class":70},[60,1693,75],{"class":74},[60,1695,146],{"class":85},[60,1697,1698,1701,1703,1706],{"class":62,"line":149},[60,1699,1700],{"class":152},"  a",[60,1702,156],{"class":85},[60,1704,1705],{"class":181}," 1",[60,1707,170],{"class":85},[60,1709,1710,1713,1715,1717],{"class":62,"line":173},[60,1711,1712],{"class":152},"  b",[60,1714,156],{"class":85},[60,1716,662],{"class":181},[60,1718,170],{"class":85},[60,1720,1721,1723,1726,1729],{"class":62,"line":187},[60,1722,225],{"class":66},[60,1724,1725],{"class":81}," c",[60,1727,1728],{"class":85},"()",[60,1730,146],{"class":85},[60,1732,1733,1735,1738,1740,1742,1744,1746,1748],{"class":62,"line":193},[60,1734,282],{"class":281},[60,1736,1737],{"class":866}," this",[60,1739,249],{"class":85},[60,1741,463],{"class":89},[60,1743,479],{"class":66},[60,1745,1737],{"class":866},[60,1747,249],{"class":85},[60,1749,1750],{"class":89},"b\n",[60,1752,1753],{"class":62,"line":200},[60,1754,381],{"class":85},[60,1756,1757],{"class":62,"line":222},[60,1758,190],{"class":85},[60,1760,1761],{"class":62,"line":243},[60,1762,197],{"emptyLinePlaceholder":196},[60,1764,1765,1767,1770,1772],{"class":62,"line":278},[60,1766,67],{"class":66},[60,1768,1769],{"class":70}," obj2",[60,1771,75],{"class":74},[60,1773,146],{"class":85},[60,1775,1776,1778,1780,1783],{"class":62,"line":295},[60,1777,1700],{"class":152},[60,1779,156],{"class":85},[60,1781,1782],{"class":181}," 3",[60,1784,170],{"class":85},[60,1786,1787,1789,1791,1793],{"class":62,"line":301},[60,1788,1712],{"class":152},[60,1790,156],{"class":85},[60,1792,708],{"class":181},[60,1794,170],{"class":85},[60,1796,1797],{"class":62,"line":324},[60,1798,190],{"class":85},[60,1800,1801],{"class":62,"line":360},[60,1802,197],{"emptyLinePlaceholder":196},[60,1804,1805,1808,1810,1813,1815,1817,1819],{"class":62,"line":378},[60,1806,1807],{"class":89},"obj2",[60,1809,249],{"class":85},[60,1811,1812],{"class":89},"c",[60,1814,75],{"class":74},[60,1816,1152],{"class":89},[60,1818,249],{"class":85},[60,1820,1821],{"class":89},"c\n",[60,1823,1824,1826,1828,1830,1832,1834,1836,1838,1840],{"class":62,"line":384},[60,1825,643],{"class":89},[60,1827,249],{"class":85},[60,1829,252],{"class":81},[60,1831,86],{"class":85},[60,1833,1807],{"class":89},[60,1835,249],{"class":85},[60,1837,1812],{"class":89},[60,1839,238],{"class":85},[60,1841,1842],{"class":415}," // 3 (不是7)\n",[24,1844,1845,1846,1849,1850,1852],{},"直接赋值只是复制了值,不会保持 ",[28,1847,1848],{},"getter"," 的动态计算特性, 无法直接实现对",[28,1851,1848],{},"的借用",[101,1854,1855],{},[104,1856,1857,1858,1860],{},"使用",[28,1859,772],{},"可以实现,但是需要手动获取属性描述符",[51,1862,1864],{"className":53,"code":1863,"language":55,"meta":56,"style":56},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\n// 获取 getter 函数\nconst descriptor = Object.getOwnPropertyDescriptor(obj, 'c') // 获取属性描述符\nconst getter = descriptor.get // 获取getter 函数\n\n// 绑定 this\nconst boundGetter = getter.bind(obj2)\nconsole.log(boundGetter()) // 7\n",[28,1865,1866,1876,1886,1896,1906,1924,1928,1932,1936,1946,1956,1966,1970,1974,1979,2013,2031,2035,2040,2061],{"__ignoreMap":56},[60,1867,1868,1870,1872,1874],{"class":62,"line":63},[60,1869,67],{"class":66},[60,1871,1152],{"class":70},[60,1873,75],{"class":74},[60,1875,146],{"class":85},[60,1877,1878,1880,1882,1884],{"class":62,"line":149},[60,1879,1700],{"class":152},[60,1881,156],{"class":85},[60,1883,1705],{"class":181},[60,1885,170],{"class":85},[60,1887,1888,1890,1892,1894],{"class":62,"line":173},[60,1889,1712],{"class":152},[60,1891,156],{"class":85},[60,1893,662],{"class":181},[60,1895,170],{"class":85},[60,1897,1898,1900,1902,1904],{"class":62,"line":187},[60,1899,225],{"class":66},[60,1901,1725],{"class":81},[60,1903,1728],{"class":85},[60,1905,146],{"class":85},[60,1907,1908,1910,1912,1914,1916,1918,1920,1922],{"class":62,"line":193},[60,1909,282],{"class":281},[60,1911,1737],{"class":866},[60,1913,249],{"class":85},[60,1915,463],{"class":89},[60,1917,479],{"class":66},[60,1919,1737],{"class":866},[60,1921,249],{"class":85},[60,1923,1750],{"class":89},[60,1925,1926],{"class":62,"line":200},[60,1927,381],{"class":85},[60,1929,1930],{"class":62,"line":222},[60,1931,190],{"class":85},[60,1933,1934],{"class":62,"line":243},[60,1935,197],{"emptyLinePlaceholder":196},[60,1937,1938,1940,1942,1944],{"class":62,"line":278},[60,1939,67],{"class":66},[60,1941,1769],{"class":70},[60,1943,75],{"class":74},[60,1945,146],{"class":85},[60,1947,1948,1950,1952,1954],{"class":62,"line":295},[60,1949,1700],{"class":152},[60,1951,156],{"class":85},[60,1953,1782],{"class":181},[60,1955,170],{"class":85},[60,1957,1958,1960,1962,1964],{"class":62,"line":301},[60,1959,1712],{"class":152},[60,1961,156],{"class":85},[60,1963,708],{"class":181},[60,1965,170],{"class":85},[60,1967,1968],{"class":62,"line":324},[60,1969,190],{"class":85},[60,1971,1972],{"class":62,"line":360},[60,1973,197],{"emptyLinePlaceholder":196},[60,1975,1976],{"class":62,"line":378},[60,1977,1978],{"class":415},"// 获取 getter 函数\n",[60,1980,1981,1983,1986,1988,1991,1993,1996,1998,2000,2002,2004,2006,2008,2010],{"class":62,"line":384},[60,1982,67],{"class":66},[60,1984,1985],{"class":70}," descriptor",[60,1987,75],{"class":74},[60,1989,1990],{"class":89}," Object",[60,1992,249],{"class":85},[60,1994,1995],{"class":81},"getOwnPropertyDescriptor",[60,1997,86],{"class":85},[60,1999,1171],{"class":89},[60,2001,93],{"class":85},[60,2003,160],{"class":159},[60,2005,1812],{"class":163},[60,2007,167],{"class":159},[60,2009,238],{"class":85},[60,2011,2012],{"class":415}," // 获取属性描述符\n",[60,2014,2015,2017,2020,2022,2024,2026,2028],{"class":62,"line":390},[60,2016,67],{"class":66},[60,2018,2019],{"class":70}," getter",[60,2021,75],{"class":74},[60,2023,1985],{"class":89},[60,2025,249],{"class":85},[60,2027,117],{"class":89},[60,2029,2030],{"class":415}," // 获取getter 函数\n",[60,2032,2033],{"class":62,"line":395},[60,2034,197],{"emptyLinePlaceholder":196},[60,2036,2037],{"class":62,"line":419},[60,2038,2039],{"class":415},"// 绑定 this\n",[60,2041,2042,2044,2047,2049,2051,2053,2055,2057,2059],{"class":62,"line":757},[60,2043,67],{"class":66},[60,2045,2046],{"class":70}," boundGetter",[60,2048,75],{"class":74},[60,2050,2019],{"class":89},[60,2052,249],{"class":85},[60,2054,772],{"class":81},[60,2056,86],{"class":85},[60,2058,1807],{"class":89},[60,2060,99],{"class":85},[60,2062,2064,2066,2068,2070,2072,2075,2078],{"class":62,"line":2063},20,[60,2065,643],{"class":89},[60,2067,249],{"class":85},[60,2069,252],{"class":81},[60,2071,86],{"class":85},[60,2073,2074],{"class":81},"boundGetter",[60,2076,2077],{"class":85},"())",[60,2079,2080],{"class":415}," // 7\n",[101,2082,2083],{},[104,2084,1857,2085,2087,2088,2090,2091,1852],{},[28,2086,1115],{},"改变",[28,2089,812],{},"可以直接实现",[28,2092,1848],{},[51,2094,2096],{"className":53,"code":2095,"language":55,"meta":56,"style":56},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nconsole.log(Reflect.get(obj, 'c', obj2)) // 7\n",[28,2097,2098,2108,2118,2128,2138,2156,2160,2164,2168,2178,2188,2198,2202,2206],{"__ignoreMap":56},[60,2099,2100,2102,2104,2106],{"class":62,"line":63},[60,2101,67],{"class":66},[60,2103,1152],{"class":70},[60,2105,75],{"class":74},[60,2107,146],{"class":85},[60,2109,2110,2112,2114,2116],{"class":62,"line":149},[60,2111,1700],{"class":152},[60,2113,156],{"class":85},[60,2115,1705],{"class":181},[60,2117,170],{"class":85},[60,2119,2120,2122,2124,2126],{"class":62,"line":173},[60,2121,1712],{"class":152},[60,2123,156],{"class":85},[60,2125,662],{"class":181},[60,2127,170],{"class":85},[60,2129,2130,2132,2134,2136],{"class":62,"line":187},[60,2131,225],{"class":66},[60,2133,1725],{"class":81},[60,2135,1728],{"class":85},[60,2137,146],{"class":85},[60,2139,2140,2142,2144,2146,2148,2150,2152,2154],{"class":62,"line":193},[60,2141,282],{"class":281},[60,2143,1737],{"class":866},[60,2145,249],{"class":85},[60,2147,463],{"class":89},[60,2149,479],{"class":66},[60,2151,1737],{"class":866},[60,2153,249],{"class":85},[60,2155,1750],{"class":89},[60,2157,2158],{"class":62,"line":200},[60,2159,381],{"class":85},[60,2161,2162],{"class":62,"line":222},[60,2163,190],{"class":85},[60,2165,2166],{"class":62,"line":243},[60,2167,197],{"emptyLinePlaceholder":196},[60,2169,2170,2172,2174,2176],{"class":62,"line":278},[60,2171,67],{"class":66},[60,2173,1769],{"class":70},[60,2175,75],{"class":74},[60,2177,146],{"class":85},[60,2179,2180,2182,2184,2186],{"class":62,"line":295},[60,2181,1700],{"class":152},[60,2183,156],{"class":85},[60,2185,1782],{"class":181},[60,2187,170],{"class":85},[60,2189,2190,2192,2194,2196],{"class":62,"line":301},[60,2191,1712],{"class":152},[60,2193,156],{"class":85},[60,2195,708],{"class":181},[60,2197,170],{"class":85},[60,2199,2200],{"class":62,"line":324},[60,2201,190],{"class":85},[60,2203,2204],{"class":62,"line":360},[60,2205,197],{"emptyLinePlaceholder":196},[60,2207,2208,2210,2212,2214,2216,2218,2220,2222,2224,2226,2228,2230,2232,2234,2236,2238,2240],{"class":62,"line":378},[60,2209,643],{"class":89},[60,2211,249],{"class":85},[60,2213,252],{"class":81},[60,2215,86],{"class":85},[60,2217,1115],{"class":89},[60,2219,249],{"class":85},[60,2221,117],{"class":81},[60,2223,86],{"class":85},[60,2225,1171],{"class":89},[60,2227,93],{"class":85},[60,2229,160],{"class":159},[60,2231,1812],{"class":163},[60,2233,167],{"class":159},[60,2235,93],{"class":85},[60,2237,1769],{"class":89},[60,2239,665],{"class":85},[60,2241,2080],{"class":415},[19,2243,2245],{"id":2244},"_2-在-proxy-中使用-reflect-的作用","2. 在 Proxy 中使用 Reflect 的作用",[434,2247,2249],{"id":2248},"_21-保持默认行为","2.1 保持默认行为",[24,2251,2252,2254],{},[28,2253,1115],{},"方法提供了与 Proxy 陷阱一一对应的操作,可以方便地在自定义行为后保持默认行为",[51,2256,2258],{"className":53,"code":2257,"language":55,"meta":56,"style":56},"const proxy = new Proxy(target, {\n  get(target, prop, receiver) {\n    console.log(`Getting property ${prop}`)\n    // 使用 Reflect 保持默认的获取行为\n    return Reflect.get(target, prop, receiver)\n  }\n})\n",[28,2259,2260,2280,2301,2326,2331,2355,2359],{"__ignoreMap":56},[60,2261,2262,2264,2266,2268,2270,2272,2274,2276,2278],{"class":62,"line":63},[60,2263,67],{"class":66},[60,2265,205],{"class":70},[60,2267,75],{"class":74},[60,2269,78],{"class":66},[60,2271,82],{"class":81},[60,2273,86],{"class":85},[60,2275,90],{"class":89},[60,2277,93],{"class":85},[60,2279,146],{"class":85},[60,2281,2282,2284,2286,2288,2290,2292,2294,2297,2299],{"class":62,"line":149},[60,2283,225],{"class":81},[60,2285,86],{"class":85},[60,2287,90],{"class":230},[60,2289,93],{"class":85},[60,2291,235],{"class":230},[60,2293,93],{"class":85},[60,2295,2296],{"class":230}," receiver",[60,2298,238],{"class":85},[60,2300,146],{"class":85},[60,2302,2303,2305,2307,2309,2311,2313,2316,2318,2320,2322,2324],{"class":62,"line":173},[60,2304,246],{"class":89},[60,2306,249],{"class":85},[60,2308,252],{"class":81},[60,2310,86],{"class":85},[60,2312,257],{"class":159},[60,2314,2315],{"class":163},"Getting property ",[60,2317,264],{"class":263},[60,2319,268],{"class":267},[60,2321,271],{"class":263},[60,2323,257],{"class":159},[60,2325,99],{"class":85},[60,2327,2328],{"class":62,"line":187},[60,2329,2330],{"class":415},"    // 使用 Reflect 保持默认的获取行为\n",[60,2332,2333,2335,2337,2339,2341,2343,2345,2347,2349,2351,2353],{"class":62,"line":193},[60,2334,282],{"class":281},[60,2336,1255],{"class":89},[60,2338,249],{"class":85},[60,2340,117],{"class":81},[60,2342,86],{"class":85},[60,2344,90],{"class":89},[60,2346,93],{"class":85},[60,2348,235],{"class":89},[60,2350,93],{"class":85},[60,2352,2296],{"class":89},[60,2354,99],{"class":85},[60,2356,2357],{"class":62,"line":200},[60,2358,381],{"class":85},[60,2360,2361],{"class":62,"line":222},[60,2362,387],{"class":85},[24,2364,2365],{},"Reflect 方法提供了与 Proxy 陷阱完美对应,使代码更一致",[2367,2368,2369,2382],"table",{},[2370,2371,2372],"thead",{},[2373,2374,2375,2379],"tr",{},[2376,2377,2378],"th",{},"Proxy 陷阱",[2376,2380,2381],{},"Reflect 方法",[2383,2384,2385,2393,2399,2407,2415,2422],"tbody",{},[2373,2386,2387,2390],{},[2388,2389,117],"td",{},[2388,2391,2392],{},"Reflect.get()",[2373,2394,2395,2397],{},[2388,2396,121],{},[2388,2398,1532],{},[2373,2400,2401,2404],{},[2388,2402,2403],{},"has",[2388,2405,2406],{},"Reflect.has()",[2373,2408,2409,2412],{},[2388,2410,2411],{},"deleteProperty",[2388,2413,2414],{},"Reflect.deleteProperty()",[2373,2416,2417,2419],{},[2388,2418,616],{},[2388,2420,2421],{},"Reflect.apply()",[2373,2423,2424,2427],{},[2388,2425,2426],{},"construct",[2388,2428,2429],{},"Reflect.construct()",[434,2431,2433,2434],{"id":2432},"_22-确保正确的this","2.2 确保正确的",[28,2435,812],{},[24,2437,2438],{},"例如: 在存在继承的对象中",[101,2440,2441],{},[104,2442,2443],{},"直接通过 target 访问",[51,2445,2447],{"className":53,"code":2446,"language":55,"meta":56,"style":56},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop) {\n    return target[prop] // 直接使用 target 会导致 this 绑定问题\n  }\n})\n\nconst obj2 = Object.create(proxy) // 继承proxy\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 3\n",[28,2448,2449,2459,2469,2479,2489,2507,2511,2515,2519,2539,2555,2570,2574,2578,2582,2606,2619,2633],{"__ignoreMap":56},[60,2450,2451,2453,2455,2457],{"class":62,"line":63},[60,2452,67],{"class":66},[60,2454,1152],{"class":70},[60,2456,75],{"class":74},[60,2458,146],{"class":85},[60,2460,2461,2463,2465,2467],{"class":62,"line":149},[60,2462,1700],{"class":152},[60,2464,156],{"class":85},[60,2466,1705],{"class":181},[60,2468,170],{"class":85},[60,2470,2471,2473,2475,2477],{"class":62,"line":173},[60,2472,1712],{"class":152},[60,2474,156],{"class":85},[60,2476,662],{"class":181},[60,2478,170],{"class":85},[60,2480,2481,2483,2485,2487],{"class":62,"line":187},[60,2482,225],{"class":66},[60,2484,1725],{"class":81},[60,2486,1728],{"class":85},[60,2488,146],{"class":85},[60,2490,2491,2493,2495,2497,2499,2501,2503,2505],{"class":62,"line":193},[60,2492,282],{"class":281},[60,2494,1737],{"class":866},[60,2496,249],{"class":85},[60,2498,463],{"class":89},[60,2500,479],{"class":66},[60,2502,1737],{"class":866},[60,2504,249],{"class":85},[60,2506,1750],{"class":89},[60,2508,2509],{"class":62,"line":200},[60,2510,381],{"class":85},[60,2512,2513],{"class":62,"line":222},[60,2514,190],{"class":85},[60,2516,2517],{"class":62,"line":243},[60,2518,197],{"emptyLinePlaceholder":196},[60,2520,2521,2523,2525,2527,2529,2531,2533,2535,2537],{"class":62,"line":278},[60,2522,67],{"class":66},[60,2524,205],{"class":70},[60,2526,75],{"class":74},[60,2528,78],{"class":66},[60,2530,82],{"class":81},[60,2532,86],{"class":85},[60,2534,1171],{"class":89},[60,2536,93],{"class":85},[60,2538,146],{"class":85},[60,2540,2541,2543,2545,2547,2549,2551,2553],{"class":62,"line":295},[60,2542,225],{"class":81},[60,2544,86],{"class":85},[60,2546,90],{"class":230},[60,2548,93],{"class":85},[60,2550,235],{"class":230},[60,2552,238],{"class":85},[60,2554,146],{"class":85},[60,2556,2557,2559,2561,2563,2565,2567],{"class":62,"line":301},[60,2558,282],{"class":281},[60,2560,141],{"class":89},[60,2562,287],{"class":85},[60,2564,268],{"class":89},[60,2566,370],{"class":85},[60,2568,2569],{"class":415}," // 直接使用 target 会导致 this 绑定问题\n",[60,2571,2572],{"class":62,"line":324},[60,2573,381],{"class":85},[60,2575,2576],{"class":62,"line":360},[60,2577,387],{"class":85},[60,2579,2580],{"class":62,"line":378},[60,2581,197],{"emptyLinePlaceholder":196},[60,2583,2584,2586,2588,2590,2592,2594,2597,2599,2601,2603],{"class":62,"line":384},[60,2585,67],{"class":66},[60,2587,1769],{"class":70},[60,2589,75],{"class":74},[60,2591,1990],{"class":89},[60,2593,249],{"class":85},[60,2595,2596],{"class":81},"create",[60,2598,86],{"class":85},[60,2600,398],{"class":89},[60,2602,238],{"class":85},[60,2604,2605],{"class":415}," // 继承proxy\n",[60,2607,2608,2610,2612,2614,2616],{"class":62,"line":390},[60,2609,1807],{"class":89},[60,2611,249],{"class":85},[60,2613,463],{"class":89},[60,2615,75],{"class":74},[60,2617,2618],{"class":181}," 3\n",[60,2620,2621,2623,2625,2628,2630],{"class":62,"line":395},[60,2622,1807],{"class":89},[60,2624,249],{"class":85},[60,2626,2627],{"class":89},"b",[60,2629,75],{"class":74},[60,2631,2632],{"class":181}," 4\n",[60,2634,2635,2637,2639,2641,2643,2645,2647,2649,2651],{"class":62,"line":419},[60,2636,643],{"class":89},[60,2638,249],{"class":85},[60,2640,252],{"class":81},[60,2642,86],{"class":85},[60,2644,1807],{"class":89},[60,2646,249],{"class":85},[60,2648,1812],{"class":89},[60,2650,238],{"class":85},[60,2652,2653],{"class":415}," // 3\n",[439,2655,2656],{},[24,2657,2658,2659,2661],{},"我们期望 obj2.c 应该计算 obj2.a + obj2.b,即 3 + 4 = 7\n实际输出却是 3,这是因为:\na. obj2.c 触发 proxy 的 get 陷阱\nb. 陷阱中直接返回 target ",[60,2660,268],{}," （即 obj.c）\nc. 当 obj.c 的 getter 执行时,this 指向的是 obj 而非 obj2\nd. 所以计算的是 obj.a + obj.b（1 + 2 = 3）",[101,2663,2664],{},[104,2665,2666],{},"使用 Reflect,传递 receiver",[51,2668,2670],{"className":53,"code":2669,"language":55,"meta":56,"style":56},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop, receiver) {\n    return Reflect.get(target, prop, receiver) // receiver 参数会自动指向最初发起调用的对象\n  }\n})\n\nconst obj2 = Object.create(proxy)\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 7\n",[28,2671,2672,2682,2692,2702,2712,2730,2734,2738,2742,2762,2782,2809,2813,2817,2821,2841,2853,2865],{"__ignoreMap":56},[60,2673,2674,2676,2678,2680],{"class":62,"line":63},[60,2675,67],{"class":66},[60,2677,1152],{"class":70},[60,2679,75],{"class":74},[60,2681,146],{"class":85},[60,2683,2684,2686,2688,2690],{"class":62,"line":149},[60,2685,1700],{"class":152},[60,2687,156],{"class":85},[60,2689,1705],{"class":181},[60,2691,170],{"class":85},[60,2693,2694,2696,2698,2700],{"class":62,"line":173},[60,2695,1712],{"class":152},[60,2697,156],{"class":85},[60,2699,662],{"class":181},[60,2701,170],{"class":85},[60,2703,2704,2706,2708,2710],{"class":62,"line":187},[60,2705,225],{"class":66},[60,2707,1725],{"class":81},[60,2709,1728],{"class":85},[60,2711,146],{"class":85},[60,2713,2714,2716,2718,2720,2722,2724,2726,2728],{"class":62,"line":193},[60,2715,282],{"class":281},[60,2717,1737],{"class":866},[60,2719,249],{"class":85},[60,2721,463],{"class":89},[60,2723,479],{"class":66},[60,2725,1737],{"class":866},[60,2727,249],{"class":85},[60,2729,1750],{"class":89},[60,2731,2732],{"class":62,"line":200},[60,2733,381],{"class":85},[60,2735,2736],{"class":62,"line":222},[60,2737,190],{"class":85},[60,2739,2740],{"class":62,"line":243},[60,2741,197],{"emptyLinePlaceholder":196},[60,2743,2744,2746,2748,2750,2752,2754,2756,2758,2760],{"class":62,"line":278},[60,2745,67],{"class":66},[60,2747,205],{"class":70},[60,2749,75],{"class":74},[60,2751,78],{"class":66},[60,2753,82],{"class":81},[60,2755,86],{"class":85},[60,2757,1171],{"class":89},[60,2759,93],{"class":85},[60,2761,146],{"class":85},[60,2763,2764,2766,2768,2770,2772,2774,2776,2778,2780],{"class":62,"line":295},[60,2765,225],{"class":81},[60,2767,86],{"class":85},[60,2769,90],{"class":230},[60,2771,93],{"class":85},[60,2773,235],{"class":230},[60,2775,93],{"class":85},[60,2777,2296],{"class":230},[60,2779,238],{"class":85},[60,2781,146],{"class":85},[60,2783,2784,2786,2788,2790,2792,2794,2796,2798,2800,2802,2804,2806],{"class":62,"line":301},[60,2785,282],{"class":281},[60,2787,1255],{"class":89},[60,2789,249],{"class":85},[60,2791,117],{"class":81},[60,2793,86],{"class":85},[60,2795,90],{"class":89},[60,2797,93],{"class":85},[60,2799,235],{"class":89},[60,2801,93],{"class":85},[60,2803,2296],{"class":89},[60,2805,238],{"class":85},[60,2807,2808],{"class":415}," // receiver 参数会自动指向最初发起调用的对象\n",[60,2810,2811],{"class":62,"line":324},[60,2812,381],{"class":85},[60,2814,2815],{"class":62,"line":360},[60,2816,387],{"class":85},[60,2818,2819],{"class":62,"line":378},[60,2820,197],{"emptyLinePlaceholder":196},[60,2822,2823,2825,2827,2829,2831,2833,2835,2837,2839],{"class":62,"line":384},[60,2824,67],{"class":66},[60,2826,1769],{"class":70},[60,2828,75],{"class":74},[60,2830,1990],{"class":89},[60,2832,249],{"class":85},[60,2834,2596],{"class":81},[60,2836,86],{"class":85},[60,2838,398],{"class":89},[60,2840,99],{"class":85},[60,2842,2843,2845,2847,2849,2851],{"class":62,"line":390},[60,2844,1807],{"class":89},[60,2846,249],{"class":85},[60,2848,463],{"class":89},[60,2850,75],{"class":74},[60,2852,2618],{"class":181},[60,2854,2855,2857,2859,2861,2863],{"class":62,"line":395},[60,2856,1807],{"class":89},[60,2858,249],{"class":85},[60,2860,2627],{"class":89},[60,2862,75],{"class":74},[60,2864,2632],{"class":181},[60,2866,2867,2869,2871,2873,2875,2877,2879,2881,2883],{"class":62,"line":419},[60,2868,643],{"class":89},[60,2870,249],{"class":85},[60,2872,252],{"class":81},[60,2874,86],{"class":85},[60,2876,1807],{"class":89},[60,2878,249],{"class":85},[60,2880,1812],{"class":89},[60,2882,238],{"class":85},[60,2884,2080],{"class":415},[434,2886,2888,2889,2892,2893,2895],{"id":2887},"_23-总结在proxy中使用reflect的原因","2.3 总结:在",[28,2890,2891],{},"Proxy","中使用",[28,2894,1115],{},"的原因",[2897,2898,2899,2902,2905],"ol",{},[104,2900,2901],{},"保持代理透明性:直接操作可能绕过代理陷阱",[104,2903,2904],{},"维护不变式:确保代理行为与原始对象一致",[104,2906,2907],{},"处理特殊属性:正确处理 getter/setter 和原型链属性",[14,2909,2911],{"id":2910},"三proxy-与-reflect-的应用","三、Proxy 与 Reflect 的应用",[19,2913,2915],{"id":2914},"_1-实现观察者模式","1. 实现观察者模式",[51,2917,2919],{"className":53,"code":2918,"language":55,"meta":56,"style":56},"function createObservable(object) {\n  const observers = new Map() // 存储属性与观察者回调的映射\n  return new Proxy(object, {\n    set(target, p, newValue, receiver) {\n      const isSuccess = Reflect.set(target, p, newValue, receiver)\n      if (isSuccess && observers.has(p)) {\n        // 通知该属性的所有观察者\n        observers.get(p).forEach((cb) => {\n          cb(newValue)\n        })\n      }\n    },\n    get(target, p, receiver) {\n      if (p === 'observe') { // 通过 handler 的 get 陷阱暴露方法\n        return (p, callback) => {\n          if (observers.has(p)) {\n            observers.get(p).add(callback)\n          }\n          else {\n            observers.set(p, [callback])\n          }\n          return () => {\n            const callbacks = observers.get(p)\n            const index = callbacks.indexOf(callback)\n            if (index > -1) {\n              callbacks.splice(index, 1)\n            }\n          }\n        }\n      }\n      return Reflect.get(target, p, receiver)\n    },\n  })\n}\nconst person = createObservable({\n  name: 'John',\n  age: 30,\n})\n\nconst unsubscribe = person.observe('name', (newName) => {\n  console.log(`Name changed to ${newName}`)\n})\n\nperson.name = 'Jane' // 输出: Name changed to Jane\nunsubscribe()\nperson.name = 'John' // 不会输出任何内容\n",[28,2920,2921,2938,2958,2975,3002,3036,3063,3068,3099,3111,3116,3121,3126,3147,3173,3193,3215,3240,3245,3252,3273,3278,3291,3314,3337,3360,3381,3387,3392,3398,3403,3429,3434,3440,3445,3459,3474,3485,3490,3495,3532,3559,3564,3569,3590,3599],{"__ignoreMap":56},[60,2922,2923,2926,2929,2931,2934,2936],{"class":62,"line":63},[60,2924,2925],{"class":66},"function",[60,2927,2928],{"class":81}," createObservable",[60,2930,86],{"class":85},[60,2932,2933],{"class":230},"object",[60,2935,238],{"class":85},[60,2937,146],{"class":85},[60,2939,2940,2943,2946,2948,2950,2953,2955],{"class":62,"line":149},[60,2941,2942],{"class":66},"  const",[60,2944,2945],{"class":70}," observers",[60,2947,75],{"class":74},[60,2949,78],{"class":66},[60,2951,2952],{"class":81}," Map",[60,2954,1728],{"class":85},[60,2956,2957],{"class":415}," // 存储属性与观察者回调的映射\n",[60,2959,2960,2963,2965,2967,2969,2971,2973],{"class":62,"line":173},[60,2961,2962],{"class":281},"  return",[60,2964,78],{"class":66},[60,2966,82],{"class":81},[60,2968,86],{"class":85},[60,2970,2933],{"class":89},[60,2972,93],{"class":85},[60,2974,146],{"class":85},[60,2976,2977,2980,2982,2984,2986,2989,2991,2994,2996,2998,3000],{"class":62,"line":187},[60,2978,2979],{"class":81},"    set",[60,2981,86],{"class":85},[60,2983,90],{"class":230},[60,2985,93],{"class":85},[60,2987,2988],{"class":230}," p",[60,2990,93],{"class":85},[60,2992,2993],{"class":230}," newValue",[60,2995,93],{"class":85},[60,2997,2296],{"class":230},[60,2999,238],{"class":85},[60,3001,146],{"class":85},[60,3003,3004,3007,3010,3012,3014,3016,3018,3020,3022,3024,3026,3028,3030,3032,3034],{"class":62,"line":193},[60,3005,3006],{"class":66},"      const",[60,3008,3009],{"class":70}," isSuccess",[60,3011,75],{"class":74},[60,3013,1255],{"class":89},[60,3015,249],{"class":85},[60,3017,121],{"class":81},[60,3019,86],{"class":85},[60,3021,90],{"class":89},[60,3023,93],{"class":85},[60,3025,2988],{"class":89},[60,3027,93],{"class":85},[60,3029,2993],{"class":89},[60,3031,93],{"class":85},[60,3033,2296],{"class":89},[60,3035,99],{"class":85},[60,3037,3038,3041,3043,3046,3049,3051,3053,3055,3057,3059,3061],{"class":62,"line":200},[60,3039,3040],{"class":281},"      if",[60,3042,460],{"class":85},[60,3044,3045],{"class":89},"isSuccess",[60,3047,3048],{"class":66}," &&",[60,3050,2945],{"class":89},[60,3052,249],{"class":85},[60,3054,2403],{"class":81},[60,3056,86],{"class":85},[60,3058,24],{"class":89},[60,3060,665],{"class":85},[60,3062,146],{"class":85},[60,3064,3065],{"class":62,"line":222},[60,3066,3067],{"class":415},"        // 通知该属性的所有观察者\n",[60,3069,3070,3073,3075,3077,3079,3081,3084,3087,3090,3093,3095,3097],{"class":62,"line":243},[60,3071,3072],{"class":89},"        observers",[60,3074,249],{"class":85},[60,3076,117],{"class":81},[60,3078,86],{"class":85},[60,3080,24],{"class":89},[60,3082,3083],{"class":85},").",[60,3085,3086],{"class":81},"forEach",[60,3088,3089],{"class":85},"((",[60,3091,3092],{"class":230},"cb",[60,3094,238],{"class":85},[60,3096,473],{"class":74},[60,3098,146],{"class":85},[60,3100,3101,3104,3106,3109],{"class":62,"line":278},[60,3102,3103],{"class":81},"          cb",[60,3105,86],{"class":85},[60,3107,3108],{"class":89},"newValue",[60,3110,99],{"class":85},[60,3112,3113],{"class":62,"line":295},[60,3114,3115],{"class":85},"        })\n",[60,3117,3118],{"class":62,"line":301},[60,3119,3120],{"class":85},"      }\n",[60,3122,3123],{"class":62,"line":324},[60,3124,3125],{"class":85},"    },\n",[60,3127,3128,3131,3133,3135,3137,3139,3141,3143,3145],{"class":62,"line":360},[60,3129,3130],{"class":81},"    get",[60,3132,86],{"class":85},[60,3134,90],{"class":230},[60,3136,93],{"class":85},[60,3138,2988],{"class":230},[60,3140,93],{"class":85},[60,3142,2296],{"class":230},[60,3144,238],{"class":85},[60,3146,146],{"class":85},[60,3148,3149,3151,3153,3155,3158,3160,3163,3165,3167,3170],{"class":62,"line":378},[60,3150,3040],{"class":281},[60,3152,460],{"class":85},[60,3154,24],{"class":89},[60,3156,3157],{"class":66}," ===",[60,3159,160],{"class":159},[60,3161,3162],{"class":163},"observe",[60,3164,167],{"class":159},[60,3166,238],{"class":85},[60,3168,3169],{"class":85}," {",[60,3171,3172],{"class":415}," // 通过 handler 的 get 陷阱暴露方法\n",[60,3174,3175,3178,3180,3182,3184,3187,3189,3191],{"class":62,"line":384},[60,3176,3177],{"class":281},"        return",[60,3179,460],{"class":85},[60,3181,24],{"class":230},[60,3183,93],{"class":85},[60,3185,3186],{"class":230}," callback",[60,3188,238],{"class":85},[60,3190,473],{"class":74},[60,3192,146],{"class":85},[60,3194,3195,3198,3200,3203,3205,3207,3209,3211,3213],{"class":62,"line":390},[60,3196,3197],{"class":281},"          if",[60,3199,460],{"class":85},[60,3201,3202],{"class":89},"observers",[60,3204,249],{"class":85},[60,3206,2403],{"class":81},[60,3208,86],{"class":85},[60,3210,24],{"class":89},[60,3212,665],{"class":85},[60,3214,146],{"class":85},[60,3216,3217,3220,3222,3224,3226,3228,3230,3233,3235,3238],{"class":62,"line":395},[60,3218,3219],{"class":89},"            observers",[60,3221,249],{"class":85},[60,3223,117],{"class":81},[60,3225,86],{"class":85},[60,3227,24],{"class":89},[60,3229,3083],{"class":85},[60,3231,3232],{"class":81},"add",[60,3234,86],{"class":85},[60,3236,3237],{"class":89},"callback",[60,3239,99],{"class":85},[60,3241,3242],{"class":62,"line":419},[60,3243,3244],{"class":85},"          }\n",[60,3246,3247,3250],{"class":62,"line":757},[60,3248,3249],{"class":281},"          else",[60,3251,146],{"class":85},[60,3253,3254,3256,3258,3260,3262,3264,3266,3268,3270],{"class":62,"line":2063},[60,3255,3219],{"class":89},[60,3257,249],{"class":85},[60,3259,121],{"class":81},[60,3261,86],{"class":85},[60,3263,24],{"class":89},[60,3265,93],{"class":85},[60,3267,700],{"class":85},[60,3269,3237],{"class":89},[60,3271,3272],{"class":85},"])\n",[60,3274,3276],{"class":62,"line":3275},21,[60,3277,3244],{"class":85},[60,3279,3281,3284,3287,3289],{"class":62,"line":3280},22,[60,3282,3283],{"class":281},"          return",[60,3285,3286],{"class":85}," ()",[60,3288,473],{"class":74},[60,3290,146],{"class":85},[60,3292,3294,3297,3300,3302,3304,3306,3308,3310,3312],{"class":62,"line":3293},23,[60,3295,3296],{"class":66},"            const",[60,3298,3299],{"class":70}," callbacks",[60,3301,75],{"class":74},[60,3303,2945],{"class":89},[60,3305,249],{"class":85},[60,3307,117],{"class":81},[60,3309,86],{"class":85},[60,3311,24],{"class":89},[60,3313,99],{"class":85},[60,3315,3317,3319,3322,3324,3326,3328,3331,3333,3335],{"class":62,"line":3316},24,[60,3318,3296],{"class":66},[60,3320,3321],{"class":70}," index",[60,3323,75],{"class":74},[60,3325,3299],{"class":89},[60,3327,249],{"class":85},[60,3329,3330],{"class":81},"indexOf",[60,3332,86],{"class":85},[60,3334,3237],{"class":89},[60,3336,99],{"class":85},[60,3338,3340,3343,3345,3348,3351,3354,3356,3358],{"class":62,"line":3339},25,[60,3341,3342],{"class":281},"            if",[60,3344,460],{"class":85},[60,3346,3347],{"class":89},"index",[60,3349,3350],{"class":74}," >",[60,3352,3353],{"class":66}," -",[60,3355,657],{"class":181},[60,3357,238],{"class":85},[60,3359,146],{"class":85},[60,3361,3363,3366,3368,3371,3373,3375,3377,3379],{"class":62,"line":3362},26,[60,3364,3365],{"class":89},"              callbacks",[60,3367,249],{"class":85},[60,3369,3370],{"class":81},"splice",[60,3372,86],{"class":85},[60,3374,3347],{"class":89},[60,3376,93],{"class":85},[60,3378,1705],{"class":181},[60,3380,99],{"class":85},[60,3382,3384],{"class":62,"line":3383},27,[60,3385,3386],{"class":85},"            }\n",[60,3388,3390],{"class":62,"line":3389},28,[60,3391,3244],{"class":85},[60,3393,3395],{"class":62,"line":3394},29,[60,3396,3397],{"class":85},"        }\n",[60,3399,3401],{"class":62,"line":3400},30,[60,3402,3120],{"class":85},[60,3404,3406,3409,3411,3413,3415,3417,3419,3421,3423,3425,3427],{"class":62,"line":3405},31,[60,3407,3408],{"class":281},"      return",[60,3410,1255],{"class":89},[60,3412,249],{"class":85},[60,3414,117],{"class":81},[60,3416,86],{"class":85},[60,3418,90],{"class":89},[60,3420,93],{"class":85},[60,3422,2988],{"class":89},[60,3424,93],{"class":85},[60,3426,2296],{"class":89},[60,3428,99],{"class":85},[60,3430,3432],{"class":62,"line":3431},32,[60,3433,3125],{"class":85},[60,3435,3437],{"class":62,"line":3436},33,[60,3438,3439],{"class":85},"  })\n",[60,3441,3443],{"class":62,"line":3442},34,[60,3444,190],{"class":85},[60,3446,3448,3450,3452,3454,3456],{"class":62,"line":3447},35,[60,3449,67],{"class":66},[60,3451,1040],{"class":70},[60,3453,75],{"class":74},[60,3455,2928],{"class":81},[60,3457,3458],{"class":85},"({\n",[60,3460,3462,3464,3466,3468,3470,3472],{"class":62,"line":3461},36,[60,3463,153],{"class":152},[60,3465,156],{"class":85},[60,3467,160],{"class":159},[60,3469,164],{"class":163},[60,3471,167],{"class":159},[60,3473,170],{"class":85},[60,3475,3477,3479,3481,3483],{"class":62,"line":3476},37,[60,3478,176],{"class":152},[60,3480,156],{"class":85},[60,3482,1059],{"class":181},[60,3484,170],{"class":85},[60,3486,3488],{"class":62,"line":3487},38,[60,3489,387],{"class":85},[60,3491,3493],{"class":62,"line":3492},39,[60,3494,197],{"emptyLinePlaceholder":196},[60,3496,3498,3500,3503,3505,3507,3509,3511,3513,3515,3517,3519,3521,3523,3526,3528,3530],{"class":62,"line":3497},40,[60,3499,67],{"class":66},[60,3501,3502],{"class":70}," unsubscribe",[60,3504,75],{"class":74},[60,3506,1040],{"class":89},[60,3508,249],{"class":85},[60,3510,3162],{"class":81},[60,3512,86],{"class":85},[60,3514,167],{"class":159},[60,3516,403],{"class":163},[60,3518,167],{"class":159},[60,3520,93],{"class":85},[60,3522,460],{"class":85},[60,3524,3525],{"class":230},"newName",[60,3527,238],{"class":85},[60,3529,473],{"class":74},[60,3531,146],{"class":85},[60,3533,3535,3538,3540,3542,3544,3546,3549,3551,3553,3555,3557],{"class":62,"line":3534},41,[60,3536,3537],{"class":89},"  console",[60,3539,249],{"class":85},[60,3541,252],{"class":81},[60,3543,86],{"class":85},[60,3545,257],{"class":159},[60,3547,3548],{"class":163},"Name changed to ",[60,3550,264],{"class":263},[60,3552,3525],{"class":267},[60,3554,271],{"class":263},[60,3556,257],{"class":159},[60,3558,99],{"class":85},[60,3560,3562],{"class":62,"line":3561},42,[60,3563,387],{"class":85},[60,3565,3567],{"class":62,"line":3566},43,[60,3568,197],{"emptyLinePlaceholder":196},[60,3570,3572,3575,3577,3579,3581,3583,3585,3587],{"class":62,"line":3571},44,[60,3573,3574],{"class":89},"person",[60,3576,249],{"class":85},[60,3578,403],{"class":89},[60,3580,75],{"class":74},[60,3582,160],{"class":159},[60,3584,410],{"class":163},[60,3586,167],{"class":159},[60,3588,3589],{"class":415}," // 输出: Name changed to Jane\n",[60,3591,3593,3596],{"class":62,"line":3592},45,[60,3594,3595],{"class":81},"unsubscribe",[60,3597,3598],{"class":85},"()\n",[60,3600,3602,3604,3606,3608,3610,3612,3614,3616],{"class":62,"line":3601},46,[60,3603,3574],{"class":89},[60,3605,249],{"class":85},[60,3607,403],{"class":89},[60,3609,75],{"class":74},[60,3611,160],{"class":159},[60,3613,164],{"class":163},[60,3615,167],{"class":159},[60,3617,3618],{"class":415}," // 不会输出任何内容\n",[19,3620,3622],{"id":3621},"_2-权限控制","2. 权限控制",[51,3624,3626],{"className":53,"code":3625,"language":55,"meta":56,"style":56},"function createSecureObject(role) {\n  const data = {\n    sensitiveInfo: 'secret'\n  }\n  return new Proxy(data, {\n    get: (target, p, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.get(target, p, receiver)\n      }\n    },\n    set: (target, p, newValue, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.set(target, p, newValue, receiver)\n      }\n    }\n  })\n}\n\nconst admin = createSecureObject('admin')\nconsole.log(admin.sensitiveInfo) // secret\n\nconst user = createSecureObject('user')\nconsole.log(user.sensitiveInfo) // Error: Access Denied\n",[28,3627,3628,3644,3655,3669,3673,3690,3714,3750,3771,3775,3782,3806,3810,3814,3842,3874,3892,3896,3902,3930,3934,3939,3943,3947,3951,3972,3993,3997,4019],{"__ignoreMap":56},[60,3629,3630,3632,3635,3637,3640,3642],{"class":62,"line":63},[60,3631,2925],{"class":66},[60,3633,3634],{"class":81}," createSecureObject",[60,3636,86],{"class":85},[60,3638,3639],{"class":230},"role",[60,3641,238],{"class":85},[60,3643,146],{"class":85},[60,3645,3646,3648,3651,3653],{"class":62,"line":149},[60,3647,2942],{"class":66},[60,3649,3650],{"class":70}," data",[60,3652,75],{"class":74},[60,3654,146],{"class":85},[60,3656,3657,3660,3662,3664,3667],{"class":62,"line":173},[60,3658,3659],{"class":152},"    sensitiveInfo",[60,3661,156],{"class":85},[60,3663,160],{"class":159},[60,3665,3666],{"class":163},"secret",[60,3668,1345],{"class":159},[60,3670,3671],{"class":62,"line":187},[60,3672,381],{"class":85},[60,3674,3675,3677,3679,3681,3683,3686,3688],{"class":62,"line":193},[60,3676,2962],{"class":281},[60,3678,78],{"class":66},[60,3680,82],{"class":81},[60,3682,86],{"class":85},[60,3684,3685],{"class":89},"data",[60,3687,93],{"class":85},[60,3689,146],{"class":85},[60,3691,3692,3694,3696,3698,3700,3702,3704,3706,3708,3710,3712],{"class":62,"line":200},[60,3693,3130],{"class":81},[60,3695,156],{"class":85},[60,3697,460],{"class":85},[60,3699,90],{"class":230},[60,3701,93],{"class":85},[60,3703,2988],{"class":230},[60,3705,93],{"class":85},[60,3707,2296],{"class":230},[60,3709,238],{"class":85},[60,3711,473],{"class":74},[60,3713,146],{"class":85},[60,3715,3716,3718,3720,3722,3724,3726,3729,3731,3733,3736,3739,3741,3744,3746,3748],{"class":62,"line":222},[60,3717,3040],{"class":281},[60,3719,460],{"class":85},[60,3721,24],{"class":89},[60,3723,3157],{"class":66},[60,3725,160],{"class":159},[60,3727,3728],{"class":163},"sensitiveInfo",[60,3730,167],{"class":159},[60,3732,3048],{"class":66},[60,3734,3735],{"class":89}," role",[60,3737,3738],{"class":66}," !==",[60,3740,160],{"class":159},[60,3742,3743],{"class":163},"admin",[60,3745,167],{"class":159},[60,3747,238],{"class":85},[60,3749,146],{"class":85},[60,3751,3752,3755,3757,3760,3762,3764,3767,3769],{"class":62,"line":243},[60,3753,3754],{"class":281},"        throw",[60,3756,78],{"class":66},[60,3758,3759],{"class":81}," Error",[60,3761,86],{"class":85},[60,3763,167],{"class":159},[60,3765,3766],{"class":163},"Access Denied",[60,3768,167],{"class":159},[60,3770,99],{"class":85},[60,3772,3773],{"class":62,"line":278},[60,3774,3120],{"class":85},[60,3776,3777,3780],{"class":62,"line":295},[60,3778,3779],{"class":281},"      else",[60,3781,146],{"class":85},[60,3783,3784,3786,3788,3790,3792,3794,3796,3798,3800,3802,3804],{"class":62,"line":301},[60,3785,3177],{"class":281},[60,3787,1255],{"class":89},[60,3789,249],{"class":85},[60,3791,117],{"class":81},[60,3793,86],{"class":85},[60,3795,90],{"class":89},[60,3797,93],{"class":85},[60,3799,2988],{"class":89},[60,3801,93],{"class":85},[60,3803,2296],{"class":89},[60,3805,99],{"class":85},[60,3807,3808],{"class":62,"line":324},[60,3809,3120],{"class":85},[60,3811,3812],{"class":62,"line":360},[60,3813,3125],{"class":85},[60,3815,3816,3818,3820,3822,3824,3826,3828,3830,3832,3834,3836,3838,3840],{"class":62,"line":378},[60,3817,2979],{"class":81},[60,3819,156],{"class":85},[60,3821,460],{"class":85},[60,3823,90],{"class":230},[60,3825,93],{"class":85},[60,3827,2988],{"class":230},[60,3829,93],{"class":85},[60,3831,2993],{"class":230},[60,3833,93],{"class":85},[60,3835,2296],{"class":230},[60,3837,238],{"class":85},[60,3839,473],{"class":74},[60,3841,146],{"class":85},[60,3843,3844,3846,3848,3850,3852,3854,3856,3858,3860,3862,3864,3866,3868,3870,3872],{"class":62,"line":384},[60,3845,3040],{"class":281},[60,3847,460],{"class":85},[60,3849,24],{"class":89},[60,3851,3157],{"class":66},[60,3853,160],{"class":159},[60,3855,3728],{"class":163},[60,3857,167],{"class":159},[60,3859,3048],{"class":66},[60,3861,3735],{"class":89},[60,3863,3738],{"class":66},[60,3865,160],{"class":159},[60,3867,3743],{"class":163},[60,3869,167],{"class":159},[60,3871,238],{"class":85},[60,3873,146],{"class":85},[60,3875,3876,3878,3880,3882,3884,3886,3888,3890],{"class":62,"line":390},[60,3877,3754],{"class":281},[60,3879,78],{"class":66},[60,3881,3759],{"class":81},[60,3883,86],{"class":85},[60,3885,167],{"class":159},[60,3887,3766],{"class":163},[60,3889,167],{"class":159},[60,3891,99],{"class":85},[60,3893,3894],{"class":62,"line":395},[60,3895,3120],{"class":85},[60,3897,3898,3900],{"class":62,"line":419},[60,3899,3779],{"class":281},[60,3901,146],{"class":85},[60,3903,3904,3906,3908,3910,3912,3914,3916,3918,3920,3922,3924,3926,3928],{"class":62,"line":757},[60,3905,3177],{"class":281},[60,3907,1255],{"class":89},[60,3909,249],{"class":85},[60,3911,121],{"class":81},[60,3913,86],{"class":85},[60,3915,90],{"class":89},[60,3917,93],{"class":85},[60,3919,2988],{"class":89},[60,3921,93],{"class":85},[60,3923,2993],{"class":89},[60,3925,93],{"class":85},[60,3927,2296],{"class":89},[60,3929,99],{"class":85},[60,3931,3932],{"class":62,"line":2063},[60,3933,3120],{"class":85},[60,3935,3936],{"class":62,"line":3275},[60,3937,3938],{"class":85},"    }\n",[60,3940,3941],{"class":62,"line":3280},[60,3942,3439],{"class":85},[60,3944,3945],{"class":62,"line":3293},[60,3946,190],{"class":85},[60,3948,3949],{"class":62,"line":3316},[60,3950,197],{"emptyLinePlaceholder":196},[60,3952,3953,3955,3958,3960,3962,3964,3966,3968,3970],{"class":62,"line":3339},[60,3954,67],{"class":66},[60,3956,3957],{"class":70}," admin",[60,3959,75],{"class":74},[60,3961,3634],{"class":81},[60,3963,86],{"class":85},[60,3965,167],{"class":159},[60,3967,3743],{"class":163},[60,3969,167],{"class":159},[60,3971,99],{"class":85},[60,3973,3974,3976,3978,3980,3982,3984,3986,3988,3990],{"class":62,"line":3362},[60,3975,643],{"class":89},[60,3977,249],{"class":85},[60,3979,252],{"class":81},[60,3981,86],{"class":85},[60,3983,3743],{"class":89},[60,3985,249],{"class":85},[60,3987,3728],{"class":89},[60,3989,238],{"class":85},[60,3991,3992],{"class":415}," // secret\n",[60,3994,3995],{"class":62,"line":3383},[60,3996,197],{"emptyLinePlaceholder":196},[60,3998,3999,4001,4004,4006,4008,4010,4012,4015,4017],{"class":62,"line":3389},[60,4000,67],{"class":66},[60,4002,4003],{"class":70}," user",[60,4005,75],{"class":74},[60,4007,3634],{"class":81},[60,4009,86],{"class":85},[60,4011,167],{"class":159},[60,4013,4014],{"class":163},"user",[60,4016,167],{"class":159},[60,4018,99],{"class":85},[60,4020,4021,4023,4025,4027,4029,4031,4033,4035,4037],{"class":62,"line":3394},[60,4022,643],{"class":89},[60,4024,249],{"class":85},[60,4026,252],{"class":81},[60,4028,86],{"class":85},[60,4030,4014],{"class":89},[60,4032,249],{"class":85},[60,4034,3728],{"class":89},[60,4036,238],{"class":85},[60,4038,4039],{"class":415}," // Error: Access Denied\n",[19,4041,4043],{"id":4042},"_3-面向切面编程","3. 面向切面编程",[24,4045,4046],{},"通过 Proxy 拦截函数,可以对函数的执行添加行为,例如计算函数执行消耗的时间",[51,4048,4050],{"className":53,"code":4049,"language":55,"meta":56,"style":56},"function calcFuncExecTime(func) {\n  return new Proxy(func, {\n    apply(target, thisArg, args) {\n      const start = performance.now()\n      const result = Reflect.apply(target, thisArg, args)\n      const end = performance.now()\n      console.log(`function execution time ${(end - start).toFixed(3)}ms`)\n      return result\n    }\n  })\n}\n\nconst sum = calcFuncExecTime((a, b) => a + b)\nsum(1, 2) // function execution time 0.043ms\n",[28,4051,4052,4068,4084,4106,4125,4153,4170,4217,4224,4228,4232,4236,4240,4270],{"__ignoreMap":56},[60,4053,4054,4056,4059,4061,4064,4066],{"class":62,"line":63},[60,4055,2925],{"class":66},[60,4057,4058],{"class":81}," calcFuncExecTime",[60,4060,86],{"class":85},[60,4062,4063],{"class":230},"func",[60,4065,238],{"class":85},[60,4067,146],{"class":85},[60,4069,4070,4072,4074,4076,4078,4080,4082],{"class":62,"line":149},[60,4071,2962],{"class":281},[60,4073,78],{"class":66},[60,4075,82],{"class":81},[60,4077,86],{"class":85},[60,4079,4063],{"class":89},[60,4081,93],{"class":85},[60,4083,146],{"class":85},[60,4085,4086,4089,4091,4093,4095,4097,4099,4102,4104],{"class":62,"line":173},[60,4087,4088],{"class":81},"    apply",[60,4090,86],{"class":85},[60,4092,90],{"class":230},[60,4094,93],{"class":85},[60,4096,522],{"class":230},[60,4098,93],{"class":85},[60,4100,4101],{"class":230}," args",[60,4103,238],{"class":85},[60,4105,146],{"class":85},[60,4107,4108,4110,4113,4115,4118,4120,4123],{"class":62,"line":187},[60,4109,3006],{"class":66},[60,4111,4112],{"class":70}," start",[60,4114,75],{"class":74},[60,4116,4117],{"class":89}," performance",[60,4119,249],{"class":85},[60,4121,4122],{"class":81},"now",[60,4124,3598],{"class":85},[60,4126,4127,4129,4131,4133,4135,4137,4139,4141,4143,4145,4147,4149,4151],{"class":62,"line":193},[60,4128,3006],{"class":66},[60,4130,1164],{"class":70},[60,4132,75],{"class":74},[60,4134,1255],{"class":89},[60,4136,249],{"class":85},[60,4138,616],{"class":81},[60,4140,86],{"class":85},[60,4142,90],{"class":89},[60,4144,93],{"class":85},[60,4146,522],{"class":89},[60,4148,93],{"class":85},[60,4150,4101],{"class":89},[60,4152,99],{"class":85},[60,4154,4155,4157,4160,4162,4164,4166,4168],{"class":62,"line":200},[60,4156,3006],{"class":66},[60,4158,4159],{"class":70}," end",[60,4161,75],{"class":74},[60,4163,4117],{"class":89},[60,4165,249],{"class":85},[60,4167,4122],{"class":81},[60,4169,3598],{"class":85},[60,4171,4172,4175,4177,4179,4181,4183,4186,4188,4190,4193,4195,4197,4199,4202,4204,4206,4208,4210,4213,4215],{"class":62,"line":222},[60,4173,4174],{"class":89},"      console",[60,4176,249],{"class":85},[60,4178,252],{"class":81},[60,4180,86],{"class":85},[60,4182,257],{"class":159},[60,4184,4185],{"class":163},"function execution time ",[60,4187,264],{"class":263},[60,4189,86],{"class":568},[60,4191,4192],{"class":267},"end",[60,4194,3353],{"class":66},[60,4196,4112],{"class":267},[60,4198,3083],{"class":568},[60,4200,4201],{"class":81},"toFixed",[60,4203,86],{"class":568},[60,4205,703],{"class":181},[60,4207,238],{"class":568},[60,4209,271],{"class":263},[60,4211,4212],{"class":163},"ms",[60,4214,257],{"class":159},[60,4216,99],{"class":85},[60,4218,4219,4221],{"class":62,"line":243},[60,4220,3408],{"class":281},[60,4222,4223],{"class":89}," result\n",[60,4225,4226],{"class":62,"line":278},[60,4227,3938],{"class":85},[60,4229,4230],{"class":62,"line":295},[60,4231,3439],{"class":85},[60,4233,4234],{"class":62,"line":301},[60,4235,190],{"class":85},[60,4237,4238],{"class":62,"line":324},[60,4239,197],{"emptyLinePlaceholder":196},[60,4241,4242,4244,4246,4248,4250,4252,4254,4256,4258,4260,4262,4264,4266,4268],{"class":62,"line":360},[60,4243,67],{"class":66},[60,4245,455],{"class":70},[60,4247,75],{"class":74},[60,4249,4058],{"class":81},[60,4251,3089],{"class":85},[60,4253,463],{"class":230},[60,4255,93],{"class":85},[60,4257,468],{"class":230},[60,4259,238],{"class":85},[60,4261,473],{"class":74},[60,4263,476],{"class":89},[60,4265,479],{"class":66},[60,4267,468],{"class":89},[60,4269,99],{"class":85},[60,4271,4272,4274,4276,4278,4280,4282,4284],{"class":62,"line":378},[60,4273,504],{"class":81},[60,4275,86],{"class":85},[60,4277,657],{"class":181},[60,4279,93],{"class":85},[60,4281,662],{"class":181},[60,4283,238],{"class":85},[60,4285,4286],{"class":415}," // function execution time 0.043ms\n",[4288,4289,4290],"style",{},"html pre.shiki code .s8I54, html code.shiki .s8I54{--shiki-default:#F97583;--shiki-dark:#CB7676}html pre.shiki code .sXTEK, html code.shiki .sXTEK{--shiki-default:#79B8FF;--shiki-dark:#BD976A}html pre.shiki code .soRP2, html code.shiki .soRP2{--shiki-default:#F97583;--shiki-dark:#666666}html pre.shiki code .scd8n, html code.shiki .scd8n{--shiki-default:#B392F0;--shiki-dark:#80A665}html pre.shiki code .sybYZ, html code.shiki .sybYZ{--shiki-default:#E1E4E8;--shiki-dark:#666666}html pre.shiki code .sVbU4, html code.shiki .sVbU4{--shiki-default:#E1E4E8;--shiki-dark:#BD976A}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sqmIX, html code.shiki .sqmIX{--shiki-default:#E1E4E8;--shiki-dark:#B8A965}html pre.shiki code .sajHj, html code.shiki .sajHj{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D77}html pre.shiki code .sx1Rn, html code.shiki .sx1Rn{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D}html pre.shiki code .svno3, html code.shiki .svno3{--shiki-default:#79B8FF;--shiki-dark:#4C9A91}html pre.shiki code .sSfpy, html code.shiki .sSfpy{--shiki-default:#FFAB70;--shiki-dark:#BD976A}html pre.shiki code .sOPOU, html code.shiki .sOPOU{--shiki-default:#9ECBFF;--shiki-dark:#4D9375}html pre.shiki code .sGUJ0, html code.shiki .sGUJ0{--shiki-default:#E1E4E8;--shiki-dark:#C98A7D}html pre.shiki code .scBr_, html code.shiki .scBr_{--shiki-default:#F97583;--shiki-dark:#4D9375}html pre.shiki code .sKXKF, html code.shiki .sKXKF{--shiki-default:#6A737D;--shiki-dark:#758575DD}html pre.shiki code .snnN9, html code.shiki .snnN9{--shiki-default:#9ECBFF;--shiki-dark:#666666}html pre.shiki code .smuiB, html code.shiki .smuiB{--shiki-default:#79B8FF;--shiki-dark:#CB7676}html pre.shiki code .s3iJD, html code.shiki .s3iJD{--shiki-default:#B392F0;--shiki-dark:#5DA994}html pre.shiki code .s_3qV, html code.shiki .s_3qV{--shiki-default:#79B8FF;--shiki-dark:#C99076}html pre.shiki code .sSBLT, html code.shiki .sSBLT{--shiki-default:#79B8FF;--shiki-dark:#4D9375}",{"title":56,"searchDepth":149,"depth":149,"links":4292},[4293,4298,4303],{"id":16,"depth":149,"text":17,"children":4294},[4295,4296,4297],{"id":21,"depth":173,"text":22},{"id":125,"depth":173,"text":126},{"id":431,"depth":173,"text":432},{"id":1084,"depth":149,"text":1085,"children":4299},[4300,4302],{"id":1119,"depth":173,"text":4301},"1. 使用Reflcet和直接使用语法操作对象的区别",{"id":2244,"depth":173,"text":2245},{"id":2910,"depth":149,"text":2911,"children":4304},[4305,4306,4307],{"id":2914,"depth":173,"text":2915},{"id":3621,"depth":173,"text":3622},{"id":4042,"depth":173,"text":4043},"2025-04-11T00:00:00.000Z",null,"md",{},"/blog/202504/understand-proxy-and-reflcet","qingkun",{"title":5,"description":4309},"blog/202504/01.understand-proxy-and-reflcet","8GUKdZNnZltC2GwFrWmL9Hb_Tkz3xrjlgYx6RxJbCM0",1746762409092]