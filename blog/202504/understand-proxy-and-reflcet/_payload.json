[{"data":1,"prerenderedAt":4323},["ShallowReactive",2],{"/blog/202504/understand-proxy-and-reflcet":3},{"id":4,"title":5,"body":6,"date":4314,"description":4315,"extension":4316,"image":4315,"meta":4317,"navigation":195,"path":4318,"qk":4319,"seo":4320,"stem":4321,"tags":4315,"__hash__":4322},"blog/blog/202504/01.understand-proxy-and-reflcet.md","带你了解Proxy和Reflcet",{"type":7,"value":8,"toc":4290},"minimal",[9,13,17,22,49,99,122,126,129,428,432,437,443,792,818,822,827,1064,1081,1085,1090,1101,1110,1116,1124,1128,1131,1140,1221,1229,1314,1318,1321,1325,1330,1425,1430,1527,1533,1673,1677,1680,1842,1852,1860,2080,2092,2241,2245,2249,2254,2362,2365,2429,2435,2438,2443,2653,2661,2666,2884,2895,2907,2911,2915,3618,3622,4039,4043,4046,4286],[10,11,5],"h1",{"id":12},"带你了解proxy和reflcet",[10,14,16],{"id":15},"一proxy代理","一、Proxy（代理）",[18,19,21],"h2",{"id":20},"_1基本概念","1.基本概念",[23,24,25,26,30,31,34,35,38,39,38,42,38,45,48],"p",{},"Proxy 对象用于创建一个对象的",[27,28,29],"code",{},"代理",",从而实现基本操作的",[27,32,33],{},"拦截","和自定义 （比如:",[27,36,37],{},"属性查找","、",[27,40,41],{},"赋值",[27,43,44],{},"枚举",[27,46,47],{},"函数调用","等",[50,51,56],"pre",{"className":52,"code":53,"language":54,"meta":55,"style":55},"language-js shiki shiki-themes github-dark vitesse-dark","const proxyObject = new Proxy(target, handler)\n","js","",[27,57,58],{"__ignoreMap":55},[59,60,63,67,71,75,78,82,86,90,93,96],"span",{"class":61,"line":62},"line",1,[59,64,66],{"class":65},"s8I54","const",[59,68,70],{"class":69},"sXTEK"," proxyObject",[59,72,74],{"class":73},"soRP2"," =",[59,76,77],{"class":65}," new",[59,79,81],{"class":80},"scd8n"," Proxy",[59,83,85],{"class":84},"sybYZ","(",[59,87,89],{"class":88},"sVbU4","target",[59,91,92],{"class":84},",",[59,94,95],{"class":88}," handler",[59,97,98],{"class":84},")\n",[100,101,102,108],"ul",{},[103,104,105,107],"li",{},[27,106,89],{},": 代理的目标对象",[103,109,110,113,114,117,118,121],{},[27,111,112],{},"handler",": 是一个对象,是定义代理对象行为的函数 。比如",[27,115,116],{},"get","捕捉器用于读取 target 的属性,",[27,119,120],{},"set","捕捉器用于写入 target 的属性,等等",[18,123,125],{"id":124},"_2proxy-对对象的拦截","2.Proxy 对对象的拦截",[23,127,128],{},"对一个对象的的属性进行读取或写入时,打印相关信息",[50,130,132],{"className":52,"code":131,"language":54,"meta":55,"style":55},"const target = {\n  name: 'John',\n  age: 18,\n}\n\nconst proxy = new Proxy(target, {\n  get(target, prop) {\n    console.log(`Getting ${prop}`)\n    return target[prop]\n  },\n  set(target, prop, value) {\n    console.log(`Setting ${prop} = ${value}`)\n    target[prop] = value\n  }\n})\n\nproxy.name = 'Jane' // Setting name = Jane\nproxy.name // Getting name, Jane\n",[27,133,134,146,170,184,190,197,219,240,275,292,298,321,357,375,381,387,392,416],{"__ignoreMap":55},[59,135,136,138,141,143],{"class":61,"line":62},[59,137,66],{"class":65},[59,139,140],{"class":69}," target",[59,142,74],{"class":73},[59,144,145],{"class":84}," {\n",[59,147,149,153,156,160,164,167],{"class":61,"line":148},2,[59,150,152],{"class":151},"sqmIX","  name",[59,154,155],{"class":84},":",[59,157,159],{"class":158},"sajHj"," '",[59,161,163],{"class":162},"sx1Rn","John",[59,165,166],{"class":158},"'",[59,168,169],{"class":84},",\n",[59,171,173,176,178,182],{"class":61,"line":172},3,[59,174,175],{"class":151},"  age",[59,177,155],{"class":84},[59,179,181],{"class":180},"svno3"," 18",[59,183,169],{"class":84},[59,185,187],{"class":61,"line":186},4,[59,188,189],{"class":84},"}\n",[59,191,193],{"class":61,"line":192},5,[59,194,196],{"emptyLinePlaceholder":195},true,"\n",[59,198,200,202,205,207,209,211,213,215,217],{"class":61,"line":199},6,[59,201,66],{"class":65},[59,203,204],{"class":69}," proxy",[59,206,74],{"class":73},[59,208,77],{"class":65},[59,210,81],{"class":80},[59,212,85],{"class":84},[59,214,89],{"class":88},[59,216,92],{"class":84},[59,218,145],{"class":84},[59,220,222,225,227,230,232,235,238],{"class":61,"line":221},7,[59,223,224],{"class":80},"  get",[59,226,85],{"class":84},[59,228,89],{"class":229},"sSfpy",[59,231,92],{"class":84},[59,233,234],{"class":229}," prop",[59,236,237],{"class":84},")",[59,239,145],{"class":84},[59,241,243,246,249,252,254,257,260,264,268,271,273],{"class":61,"line":242},8,[59,244,245],{"class":88},"    console",[59,247,248],{"class":84},".",[59,250,251],{"class":80},"log",[59,253,85],{"class":84},[59,255,256],{"class":158},"`",[59,258,259],{"class":162},"Getting ",[59,261,263],{"class":262},"sOPOU","${",[59,265,267],{"class":266},"sGUJ0","prop",[59,269,270],{"class":262},"}",[59,272,256],{"class":158},[59,274,98],{"class":84},[59,276,278,282,284,287,289],{"class":61,"line":277},9,[59,279,281],{"class":280},"scBr_","    return",[59,283,140],{"class":88},[59,285,286],{"class":84},"[",[59,288,267],{"class":88},[59,290,291],{"class":84},"]\n",[59,293,295],{"class":61,"line":294},10,[59,296,297],{"class":84},"  },\n",[59,299,301,304,306,308,310,312,314,317,319],{"class":61,"line":300},11,[59,302,303],{"class":80},"  set",[59,305,85],{"class":84},[59,307,89],{"class":229},[59,309,92],{"class":84},[59,311,234],{"class":229},[59,313,92],{"class":84},[59,315,316],{"class":229}," value",[59,318,237],{"class":84},[59,320,145],{"class":84},[59,322,324,326,328,330,332,334,337,339,341,343,346,348,351,353,355],{"class":61,"line":323},12,[59,325,245],{"class":88},[59,327,248],{"class":84},[59,329,251],{"class":80},[59,331,85],{"class":84},[59,333,256],{"class":158},[59,335,336],{"class":162},"Setting ",[59,338,263],{"class":262},[59,340,267],{"class":266},[59,342,270],{"class":262},[59,344,345],{"class":162}," = ",[59,347,263],{"class":262},[59,349,350],{"class":266},"value",[59,352,270],{"class":262},[59,354,256],{"class":158},[59,356,98],{"class":84},[59,358,360,363,365,367,370,372],{"class":61,"line":359},13,[59,361,362],{"class":88},"    target",[59,364,286],{"class":84},[59,366,267],{"class":88},[59,368,369],{"class":84},"]",[59,371,74],{"class":73},[59,373,374],{"class":88}," value\n",[59,376,378],{"class":61,"line":377},14,[59,379,380],{"class":84},"  }\n",[59,382,384],{"class":61,"line":383},15,[59,385,386],{"class":84},"})\n",[59,388,390],{"class":61,"line":389},16,[59,391,196],{"emptyLinePlaceholder":195},[59,393,395,398,400,403,405,407,410,412],{"class":61,"line":394},17,[59,396,397],{"class":88},"proxy",[59,399,248],{"class":84},[59,401,402],{"class":88},"name",[59,404,74],{"class":73},[59,406,159],{"class":158},[59,408,409],{"class":162},"Jane",[59,411,166],{"class":158},[59,413,415],{"class":414},"sKXKF"," // Setting name = Jane\n",[59,417,419,421,423,425],{"class":61,"line":418},18,[59,420,397],{"class":88},[59,422,248],{"class":84},[59,424,402],{"class":88},[59,426,427],{"class":414}," // Getting name, Jane\n",[18,429,431],{"id":430},"_3proxy-对对函数的拦截","3.Proxy 对对函数的拦截",[433,434,436],"h3",{"id":435},"_31-拦截函数调用-apply-陷阱","3.1 拦截函数调用 (apply 陷阱)",[438,439,440],"blockquote",{},[23,441,442],{},"apply 是 Proxy handler 对象中的一个特殊方法（陷阱）,它用于拦截函数调用操作。当代理的目标对象是一个函数,并且这个函数被调用时（如 proxy() 或 proxy.call()）,apply 陷阱就会被触发。",[50,444,446],{"className":52,"code":445,"language":54,"meta":55,"style":55},"const sum = (a, b) => a + b\n\nconst proxySum = new Proxy(sum, {\n  apply(target, thisArg, argArray) {\n    // target: 被代理的原始函数\n    // thisArg: 调用时的this值\n    // argArray: 调用时传递的参数数组\n    console.log(`function name: ${target.name}`) // 通过 target.name 获取函数名\n    console.log(`Calculating sum of ${argArray}`)\n    return target.apply(target, argArray)\n  },\n})\n\nconsole.log(proxySum(1, 2)) // Calculating sum of 1,2\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.apply(null, [3, 4])) // Calculating sum of 3,4\n// eslint-disable-next-line no-useless-call\nconsole.log(proxySum.call(null, 5, 6)) // Calculating sum of 5,6\nconsole.log(proxySum.bind(null, 7, 8)()) // Calculating sum of 7,8\n",[27,447,448,482,486,508,531,536,541,546,579,605,626,630,634,638,668,673,714,718,754],{"__ignoreMap":55},[59,449,450,452,455,457,460,463,465,468,470,473,476,479],{"class":61,"line":62},[59,451,66],{"class":65},[59,453,454],{"class":80}," sum",[59,456,74],{"class":73},[59,458,459],{"class":84}," (",[59,461,462],{"class":229},"a",[59,464,92],{"class":84},[59,466,467],{"class":229}," b",[59,469,237],{"class":84},[59,471,472],{"class":73}," =>",[59,474,475],{"class":88}," a",[59,477,478],{"class":65}," +",[59,480,481],{"class":88}," b\n",[59,483,484],{"class":61,"line":148},[59,485,196],{"emptyLinePlaceholder":195},[59,487,488,490,493,495,497,499,501,504,506],{"class":61,"line":172},[59,489,66],{"class":65},[59,491,492],{"class":69}," proxySum",[59,494,74],{"class":73},[59,496,77],{"class":65},[59,498,81],{"class":80},[59,500,85],{"class":84},[59,502,503],{"class":88},"sum",[59,505,92],{"class":84},[59,507,145],{"class":84},[59,509,510,513,515,517,519,522,524,527,529],{"class":61,"line":186},[59,511,512],{"class":80},"  apply",[59,514,85],{"class":84},[59,516,89],{"class":229},[59,518,92],{"class":84},[59,520,521],{"class":229}," thisArg",[59,523,92],{"class":84},[59,525,526],{"class":229}," argArray",[59,528,237],{"class":84},[59,530,145],{"class":84},[59,532,533],{"class":61,"line":192},[59,534,535],{"class":414},"    // target: 被代理的原始函数\n",[59,537,538],{"class":61,"line":199},[59,539,540],{"class":414},"    // thisArg: 调用时的this值\n",[59,542,543],{"class":61,"line":221},[59,544,545],{"class":414},"    // argArray: 调用时传递的参数数组\n",[59,547,548,550,552,554,556,558,561,563,565,568,570,572,574,576],{"class":61,"line":242},[59,549,245],{"class":88},[59,551,248],{"class":84},[59,553,251],{"class":80},[59,555,85],{"class":84},[59,557,256],{"class":158},[59,559,560],{"class":162},"function name: ",[59,562,263],{"class":262},[59,564,89],{"class":266},[59,566,248],{"class":567},"snnN9",[59,569,402],{"class":266},[59,571,270],{"class":262},[59,573,256],{"class":158},[59,575,237],{"class":84},[59,577,578],{"class":414}," // 通过 target.name 获取函数名\n",[59,580,581,583,585,587,589,591,594,596,599,601,603],{"class":61,"line":277},[59,582,245],{"class":88},[59,584,248],{"class":84},[59,586,251],{"class":80},[59,588,85],{"class":84},[59,590,256],{"class":158},[59,592,593],{"class":162},"Calculating sum of ",[59,595,263],{"class":262},[59,597,598],{"class":266},"argArray",[59,600,270],{"class":262},[59,602,256],{"class":158},[59,604,98],{"class":84},[59,606,607,609,611,613,616,618,620,622,624],{"class":61,"line":294},[59,608,281],{"class":280},[59,610,140],{"class":88},[59,612,248],{"class":84},[59,614,615],{"class":80},"apply",[59,617,85],{"class":84},[59,619,89],{"class":88},[59,621,92],{"class":84},[59,623,526],{"class":88},[59,625,98],{"class":84},[59,627,628],{"class":61,"line":300},[59,629,297],{"class":84},[59,631,632],{"class":61,"line":323},[59,633,386],{"class":84},[59,635,636],{"class":61,"line":359},[59,637,196],{"emptyLinePlaceholder":195},[59,639,640,643,645,647,649,652,654,657,659,662,665],{"class":61,"line":377},[59,641,642],{"class":88},"console",[59,644,248],{"class":84},[59,646,251],{"class":80},[59,648,85],{"class":84},[59,650,651],{"class":80},"proxySum",[59,653,85],{"class":84},[59,655,656],{"class":180},"1",[59,658,92],{"class":84},[59,660,661],{"class":180}," 2",[59,663,664],{"class":84},"))",[59,666,667],{"class":414}," // Calculating sum of 1,2\n",[59,669,670],{"class":61,"line":383},[59,671,672],{"class":414},"// eslint-disable-next-line no-useless-call\n",[59,674,675,677,679,681,683,685,687,689,691,695,697,700,703,705,708,711],{"class":61,"line":389},[59,676,642],{"class":88},[59,678,248],{"class":84},[59,680,251],{"class":80},[59,682,85],{"class":84},[59,684,651],{"class":88},[59,686,248],{"class":84},[59,688,615],{"class":80},[59,690,85],{"class":84},[59,692,694],{"class":693},"smuiB","null",[59,696,92],{"class":84},[59,698,699],{"class":84}," [",[59,701,702],{"class":180},"3",[59,704,92],{"class":84},[59,706,707],{"class":180}," 4",[59,709,710],{"class":84},"]))",[59,712,713],{"class":414}," // Calculating sum of 3,4\n",[59,715,716],{"class":61,"line":394},[59,717,672],{"class":414},[59,719,720,722,724,726,728,730,732,735,737,739,741,744,746,749,751],{"class":61,"line":418},[59,721,642],{"class":88},[59,723,248],{"class":84},[59,725,251],{"class":80},[59,727,85],{"class":84},[59,729,651],{"class":88},[59,731,248],{"class":84},[59,733,734],{"class":80},"call",[59,736,85],{"class":84},[59,738,694],{"class":693},[59,740,92],{"class":84},[59,742,743],{"class":180}," 5",[59,745,92],{"class":84},[59,747,748],{"class":180}," 6",[59,750,664],{"class":84},[59,752,753],{"class":414}," // Calculating sum of 5,6\n",[59,755,757,759,761,763,765,767,769,772,774,776,778,781,783,786,789],{"class":61,"line":756},19,[59,758,642],{"class":88},[59,760,248],{"class":84},[59,762,251],{"class":80},[59,764,85],{"class":84},[59,766,651],{"class":88},[59,768,248],{"class":84},[59,770,771],{"class":80},"bind",[59,773,85],{"class":84},[59,775,694],{"class":693},[59,777,92],{"class":84},[59,779,780],{"class":180}," 7",[59,782,92],{"class":84},[59,784,785],{"class":180}," 8",[59,787,788],{"class":84},")())",[59,790,791],{"class":414}," // Calculating sum of 7,8\n",[100,793,794,803,813],{},[103,795,796,798,799,802],{},[27,797,89],{},": 被代理的原始函数对象,可以通过",[27,800,801],{},"target.name","获取被代理的函数的函数名",[103,804,805,808,809,812],{},[27,806,807],{},"thisArg",": 函数调用时的 ",[27,810,811],{},"this"," 值",[103,814,815,817],{},[27,816,598],{},": 调用时传递的参数组成的数组",[433,819,821],{"id":820},"_32-拦截构造函数调用-construct-陷阱","3.2 拦截构造函数调用 (construct 陷阱)",[438,823,824],{},[23,825,826],{},"construct 陷阱是 Proxy handler 中用于拦截 new 操作符调用的特殊方法。当使用 new 调用被代理的构造函数时,这个陷阱会被触发。",[50,828,830],{"className":52,"code":829,"language":54,"meta":55,"style":55},"class Person {\n  constructor(name, age) {\n    this.name = name\n    this.age = age\n  }\n}\n\nconst ProxyPerson = new Proxy(Person, {\n  construct(target, argArray, newTarget) {\n    // target:被代理的原始构造函数\n    // argumentsList:构造函数调用时传递的参数数组\n    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n    console.log(`Creating ${target.name} with args ${argArray}`)\n    // eslint-disable-next-line new-cap\n    return new target(...argArray)\n  }\n})\n\nconst person = new ProxyPerson('John', 30) // Creating Person with args John,30\n",[27,831,832,843,861,876,890,894,898,902,924,946,951,956,961,999,1004,1021,1025,1029,1033],{"__ignoreMap":55},[59,833,834,837,841],{"class":61,"line":62},[59,835,836],{"class":65},"class",[59,838,840],{"class":839},"s3iJD"," Person",[59,842,145],{"class":84},[59,844,845,848,850,852,854,857,859],{"class":61,"line":148},[59,846,847],{"class":65},"  constructor",[59,849,85],{"class":84},[59,851,402],{"class":229},[59,853,92],{"class":84},[59,855,856],{"class":229}," age",[59,858,237],{"class":84},[59,860,145],{"class":84},[59,862,863,867,869,871,873],{"class":61,"line":172},[59,864,866],{"class":865},"s_3qV","    this",[59,868,248],{"class":84},[59,870,402],{"class":88},[59,872,74],{"class":73},[59,874,875],{"class":88}," name\n",[59,877,878,880,882,885,887],{"class":61,"line":186},[59,879,866],{"class":865},[59,881,248],{"class":84},[59,883,884],{"class":88},"age",[59,886,74],{"class":73},[59,888,889],{"class":88}," age\n",[59,891,892],{"class":61,"line":192},[59,893,380],{"class":84},[59,895,896],{"class":61,"line":199},[59,897,189],{"class":84},[59,899,900],{"class":61,"line":221},[59,901,196],{"emptyLinePlaceholder":195},[59,903,904,906,909,911,913,915,917,920,922],{"class":61,"line":242},[59,905,66],{"class":65},[59,907,908],{"class":69}," ProxyPerson",[59,910,74],{"class":73},[59,912,77],{"class":65},[59,914,81],{"class":80},[59,916,85],{"class":84},[59,918,919],{"class":88},"Person",[59,921,92],{"class":84},[59,923,145],{"class":84},[59,925,926,929,931,933,935,937,939,942,944],{"class":61,"line":277},[59,927,928],{"class":80},"  construct",[59,930,85],{"class":84},[59,932,89],{"class":229},[59,934,92],{"class":84},[59,936,526],{"class":229},[59,938,92],{"class":84},[59,940,941],{"class":229}," newTarget",[59,943,237],{"class":84},[59,945,145],{"class":84},[59,947,948],{"class":61,"line":294},[59,949,950],{"class":414},"    // target:被代理的原始构造函数\n",[59,952,953],{"class":61,"line":300},[59,954,955],{"class":414},"    // argumentsList:构造函数调用时传递的参数数组\n",[59,957,958],{"class":61,"line":323},[59,959,960],{"class":414},"    // newTarget:最初被调用的构造函数（通常是代理对象本身）\n",[59,962,963,965,967,969,971,973,976,978,980,982,984,986,989,991,993,995,997],{"class":61,"line":359},[59,964,245],{"class":88},[59,966,248],{"class":84},[59,968,251],{"class":80},[59,970,85],{"class":84},[59,972,256],{"class":158},[59,974,975],{"class":162},"Creating ",[59,977,263],{"class":262},[59,979,89],{"class":266},[59,981,248],{"class":567},[59,983,402],{"class":266},[59,985,270],{"class":262},[59,987,988],{"class":162}," with args ",[59,990,263],{"class":262},[59,992,598],{"class":266},[59,994,270],{"class":262},[59,996,256],{"class":158},[59,998,98],{"class":84},[59,1000,1001],{"class":61,"line":377},[59,1002,1003],{"class":414},"    // eslint-disable-next-line new-cap\n",[59,1005,1006,1008,1010,1012,1014,1017,1019],{"class":61,"line":383},[59,1007,281],{"class":280},[59,1009,77],{"class":65},[59,1011,140],{"class":80},[59,1013,85],{"class":84},[59,1015,1016],{"class":73},"...",[59,1018,598],{"class":88},[59,1020,98],{"class":84},[59,1022,1023],{"class":61,"line":389},[59,1024,380],{"class":84},[59,1026,1027],{"class":61,"line":394},[59,1028,386],{"class":84},[59,1030,1031],{"class":61,"line":418},[59,1032,196],{"emptyLinePlaceholder":195},[59,1034,1035,1037,1040,1042,1044,1046,1048,1050,1052,1054,1056,1059,1061],{"class":61,"line":756},[59,1036,66],{"class":65},[59,1038,1039],{"class":69}," person",[59,1041,74],{"class":73},[59,1043,77],{"class":65},[59,1045,908],{"class":80},[59,1047,85],{"class":84},[59,1049,166],{"class":158},[59,1051,163],{"class":162},[59,1053,166],{"class":158},[59,1055,92],{"class":84},[59,1057,1058],{"class":180}," 30",[59,1060,237],{"class":84},[59,1062,1063],{"class":414}," // Creating Person with args John,30\n",[100,1065,1066,1071,1075],{},[103,1067,1068,1070],{},[27,1069,89],{},": 被代理的原始函数对象,可以通过 target.name 获取被代理的函数的函数名",[103,1072,1073,817],{},[27,1074,598],{},[103,1076,1077,1080],{},[27,1078,1079],{},"newTarget",": 最初被调用的构造函数（通常是代理对象本身）",[10,1082,1084],{"id":1083},"二reflect反射","二、Reflect（反射）",[438,1086,1087],{},[23,1088,1089],{},"Reflect 是用于调用对象的基本操作（内部方法）",[438,1091,1092],{},[23,1093,1094,1095,1100],{},"对象的所有内部方法,参考链接:",[462,1096,1097],{"href":1097,"rel":1098},"https://ecma-international.org/wp-content/uploads/ECMA-262_15th_edition_june_2024.pdf",[1099],"nofollow"," 第 44~46 页内容",[438,1102,1103],{},[23,1104,1105,1106],{},"内部方法与 Reflcet 方法对应表格,参考链接:",[462,1107,1108],{"href":1108,"rel":1109},"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",[1099],[23,1111,1112,1115],{},[27,1113,1114],{},"Reflect","不是一个函数对象,因此它是不可构造的。并且 reflect 的所有属性和方法都是静态的。",[18,1117,1119,1120,1123],{"id":1118},"_1-使用reflcet和直接使用语法操作对象的区别","1. 使用",[27,1121,1122],{},"Reflcet","和直接使用语法操作对象的区别",[433,1125,1127],{"id":1126},"_11-返回值不同","1.1 返回值不同",[23,1129,1130],{},"例如: 给对象添加属性并设置值",[100,1132,1133],{},[103,1134,1135,1139],{},[1136,1137,1138],"strong",{},"直接设置",":返回设置的值（表达式的结果）",[50,1141,1143],{"className":52,"code":1142,"language":54,"meta":55,"style":55},"const obj = {}\nconst result = (obj.name = 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // jack\n",[27,1144,1145,1157,1186,1203],{"__ignoreMap":55},[59,1146,1147,1149,1152,1154],{"class":61,"line":62},[59,1148,66],{"class":65},[59,1150,1151],{"class":69}," obj",[59,1153,74],{"class":73},[59,1155,1156],{"class":84}," {}\n",[59,1158,1159,1161,1164,1166,1168,1171,1173,1175,1177,1179,1182,1184],{"class":61,"line":148},[59,1160,66],{"class":65},[59,1162,1163],{"class":69}," result",[59,1165,74],{"class":73},[59,1167,459],{"class":84},[59,1169,1170],{"class":88},"obj",[59,1172,248],{"class":84},[59,1174,402],{"class":88},[59,1176,74],{"class":73},[59,1178,159],{"class":158},[59,1180,1181],{"class":162},"jack",[59,1183,166],{"class":158},[59,1185,98],{"class":84},[59,1187,1188,1190,1192,1194,1196,1198,1200],{"class":61,"line":172},[59,1189,642],{"class":88},[59,1191,248],{"class":84},[59,1193,251],{"class":80},[59,1195,85],{"class":84},[59,1197,1170],{"class":88},[59,1199,237],{"class":84},[59,1201,1202],{"class":414}," // { name: 'jack' }\n",[59,1204,1205,1207,1209,1211,1213,1216,1218],{"class":61,"line":186},[59,1206,642],{"class":88},[59,1208,248],{"class":84},[59,1210,251],{"class":80},[59,1212,85],{"class":84},[59,1214,1215],{"class":88},"result",[59,1217,237],{"class":84},[59,1219,1220],{"class":414}," // jack\n",[100,1222,1223],{},[103,1224,1225,1228],{},[1136,1226,1227],{},"使用 Reflect",":返回一个布尔值,表示是否成功",[50,1230,1232],{"className":52,"code":1231,"language":54,"meta":55,"style":55},"const obj = {}\nconst result = Reflect.set(obj, 'name', 'jack')\nconsole.log(obj) // { name: 'jack' }\nconsole.log(result) // true\n",[27,1233,1234,1244,1281,1297],{"__ignoreMap":55},[59,1235,1236,1238,1240,1242],{"class":61,"line":62},[59,1237,66],{"class":65},[59,1239,1151],{"class":69},[59,1241,74],{"class":73},[59,1243,1156],{"class":84},[59,1245,1246,1248,1250,1252,1255,1257,1259,1261,1263,1265,1267,1269,1271,1273,1275,1277,1279],{"class":61,"line":148},[59,1247,66],{"class":65},[59,1249,1163],{"class":69},[59,1251,74],{"class":73},[59,1253,1254],{"class":88}," Reflect",[59,1256,248],{"class":84},[59,1258,120],{"class":80},[59,1260,85],{"class":84},[59,1262,1170],{"class":88},[59,1264,92],{"class":84},[59,1266,159],{"class":158},[59,1268,402],{"class":162},[59,1270,166],{"class":158},[59,1272,92],{"class":84},[59,1274,159],{"class":158},[59,1276,1181],{"class":162},[59,1278,166],{"class":158},[59,1280,98],{"class":84},[59,1282,1283,1285,1287,1289,1291,1293,1295],{"class":61,"line":172},[59,1284,642],{"class":88},[59,1286,248],{"class":84},[59,1288,251],{"class":80},[59,1290,85],{"class":84},[59,1292,1170],{"class":88},[59,1294,237],{"class":84},[59,1296,1202],{"class":414},[59,1298,1299,1301,1303,1305,1307,1309,1311],{"class":61,"line":186},[59,1300,642],{"class":88},[59,1302,248],{"class":84},[59,1304,251],{"class":80},[59,1306,85],{"class":84},[59,1308,1215],{"class":88},[59,1310,237],{"class":84},[59,1312,1313],{"class":414}," // true\n",[433,1315,1317],{"id":1316},"_12-处理不可写属性时的行为","1.2 处理不可写属性时的行为",[23,1319,1320],{},"例如:给对象的不可写属性赋值时",[23,1322,1323,155],{},[1136,1324,1138],{},[100,1326,1327],{},[103,1328,1329],{},"在严格模式下会抛出 TypeError",[50,1331,1333],{"className":52,"code":1332,"language":54,"meta":55,"style":55},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20 // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[27,1334,1335,1345,1355,1381,1392,1405,1409],{"__ignoreMap":55},[59,1336,1337,1339,1342],{"class":61,"line":62},[59,1338,166],{"class":158},[59,1340,1341],{"class":162},"use strict",[59,1343,1344],{"class":158},"'\n",[59,1346,1347,1349,1351,1353],{"class":61,"line":148},[59,1348,66],{"class":65},[59,1350,1151],{"class":69},[59,1352,74],{"class":73},[59,1354,1156],{"class":84},[59,1356,1357,1360,1362,1365,1367,1369,1371,1373,1375,1377,1379],{"class":61,"line":172},[59,1358,1359],{"class":88},"Object",[59,1361,248],{"class":84},[59,1363,1364],{"class":80},"defineProperty",[59,1366,85],{"class":84},[59,1368,1170],{"class":88},[59,1370,92],{"class":84},[59,1372,159],{"class":158},[59,1374,884],{"class":162},[59,1376,166],{"class":158},[59,1378,92],{"class":84},[59,1380,145],{"class":84},[59,1382,1383,1386,1388,1390],{"class":61,"line":186},[59,1384,1385],{"class":151},"  value",[59,1387,155],{"class":84},[59,1389,181],{"class":180},[59,1391,169],{"class":84},[59,1393,1394,1397,1399,1403],{"class":61,"line":192},[59,1395,1396],{"class":151},"  writeable",[59,1398,155],{"class":84},[59,1400,1402],{"class":1401},"sSBLT"," false",[59,1404,169],{"class":84},[59,1406,1407],{"class":61,"line":199},[59,1408,386],{"class":84},[59,1410,1411,1413,1415,1417,1419,1422],{"class":61,"line":221},[59,1412,1170],{"class":88},[59,1414,248],{"class":84},[59,1416,884],{"class":88},[59,1418,74],{"class":73},[59,1420,1421],{"class":180}," 20",[59,1423,1424],{"class":414}," // TypeError: Cannot assign to read only property 'age' of object '#\u003CObject>'\n",[100,1426,1427],{},[103,1428,1429],{},"在非严格模式下静默失败",[50,1431,1433],{"className":52,"code":1432,"language":54,"meta":55,"style":55},"const obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nobj.age = 20\nconsole.log(obj.age) // 18\n",[27,1434,1435,1445,1469,1479,1489,1493,1506],{"__ignoreMap":55},[59,1436,1437,1439,1441,1443],{"class":61,"line":62},[59,1438,66],{"class":65},[59,1440,1151],{"class":69},[59,1442,74],{"class":73},[59,1444,1156],{"class":84},[59,1446,1447,1449,1451,1453,1455,1457,1459,1461,1463,1465,1467],{"class":61,"line":148},[59,1448,1359],{"class":88},[59,1450,248],{"class":84},[59,1452,1364],{"class":80},[59,1454,85],{"class":84},[59,1456,1170],{"class":88},[59,1458,92],{"class":84},[59,1460,159],{"class":158},[59,1462,884],{"class":162},[59,1464,166],{"class":158},[59,1466,92],{"class":84},[59,1468,145],{"class":84},[59,1470,1471,1473,1475,1477],{"class":61,"line":172},[59,1472,1385],{"class":151},[59,1474,155],{"class":84},[59,1476,181],{"class":180},[59,1478,169],{"class":84},[59,1480,1481,1483,1485,1487],{"class":61,"line":186},[59,1482,1396],{"class":151},[59,1484,155],{"class":84},[59,1486,1402],{"class":1401},[59,1488,169],{"class":84},[59,1490,1491],{"class":61,"line":192},[59,1492,386],{"class":84},[59,1494,1495,1497,1499,1501,1503],{"class":61,"line":199},[59,1496,1170],{"class":88},[59,1498,248],{"class":84},[59,1500,884],{"class":88},[59,1502,74],{"class":73},[59,1504,1505],{"class":180}," 20\n",[59,1507,1508,1510,1512,1514,1516,1518,1520,1522,1524],{"class":61,"line":221},[59,1509,642],{"class":88},[59,1511,248],{"class":84},[59,1513,251],{"class":80},[59,1515,85],{"class":84},[59,1517,1170],{"class":88},[59,1519,248],{"class":84},[59,1521,884],{"class":88},[59,1523,237],{"class":84},[59,1525,1526],{"class":414}," // 18\n",[23,1528,1529,1532],{},[1136,1530,1531],{},"Reflect.set()",": 总是返回 false 而不抛出错误",[50,1534,1536],{"className":52,"code":1535,"language":54,"meta":55,"style":55},"'use strict'\nconst obj = {}\nObject.defineProperty(obj, 'age', {\n  value: 18,\n  writeable: false,\n})\nconst result = Reflect.set(obj, 'age', 20)\nconsole.log(result) // false\nconsole.log(obj.age) // 18\n",[27,1537,1538,1546,1556,1580,1590,1600,1604,1636,1653],{"__ignoreMap":55},[59,1539,1540,1542,1544],{"class":61,"line":62},[59,1541,166],{"class":158},[59,1543,1341],{"class":162},[59,1545,1344],{"class":158},[59,1547,1548,1550,1552,1554],{"class":61,"line":148},[59,1549,66],{"class":65},[59,1551,1151],{"class":69},[59,1553,74],{"class":73},[59,1555,1156],{"class":84},[59,1557,1558,1560,1562,1564,1566,1568,1570,1572,1574,1576,1578],{"class":61,"line":172},[59,1559,1359],{"class":88},[59,1561,248],{"class":84},[59,1563,1364],{"class":80},[59,1565,85],{"class":84},[59,1567,1170],{"class":88},[59,1569,92],{"class":84},[59,1571,159],{"class":158},[59,1573,884],{"class":162},[59,1575,166],{"class":158},[59,1577,92],{"class":84},[59,1579,145],{"class":84},[59,1581,1582,1584,1586,1588],{"class":61,"line":186},[59,1583,1385],{"class":151},[59,1585,155],{"class":84},[59,1587,181],{"class":180},[59,1589,169],{"class":84},[59,1591,1592,1594,1596,1598],{"class":61,"line":192},[59,1593,1396],{"class":151},[59,1595,155],{"class":84},[59,1597,1402],{"class":1401},[59,1599,169],{"class":84},[59,1601,1602],{"class":61,"line":199},[59,1603,386],{"class":84},[59,1605,1606,1608,1610,1612,1614,1616,1618,1620,1622,1624,1626,1628,1630,1632,1634],{"class":61,"line":221},[59,1607,66],{"class":65},[59,1609,1163],{"class":69},[59,1611,74],{"class":73},[59,1613,1254],{"class":88},[59,1615,248],{"class":84},[59,1617,120],{"class":80},[59,1619,85],{"class":84},[59,1621,1170],{"class":88},[59,1623,92],{"class":84},[59,1625,159],{"class":158},[59,1627,884],{"class":162},[59,1629,166],{"class":158},[59,1631,92],{"class":84},[59,1633,1421],{"class":180},[59,1635,98],{"class":84},[59,1637,1638,1640,1642,1644,1646,1648,1650],{"class":61,"line":242},[59,1639,642],{"class":88},[59,1641,248],{"class":84},[59,1643,251],{"class":80},[59,1645,85],{"class":84},[59,1647,1215],{"class":88},[59,1649,237],{"class":84},[59,1651,1652],{"class":414}," // false\n",[59,1654,1655,1657,1659,1661,1663,1665,1667,1669,1671],{"class":61,"line":277},[59,1656,642],{"class":88},[59,1658,248],{"class":84},[59,1660,251],{"class":80},[59,1662,85],{"class":84},[59,1664,1170],{"class":88},[59,1666,248],{"class":84},[59,1668,884],{"class":88},[59,1670,237],{"class":84},[59,1672,1526],{"class":414},[433,1674,1676],{"id":1675},"_13-指定-receiverthis","1.3 指定 receiver(this)",[23,1678,1679],{},"例如:对象中的 getter 的借用",[50,1681,1683],{"className":52,"code":1682,"language":54,"meta":55,"style":55},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nobj2.c = obj.c\nconsole.log(obj2.c) // 3 (不是7)\n",[27,1684,1685,1695,1707,1718,1730,1750,1754,1758,1762,1773,1784,1794,1798,1802,1821],{"__ignoreMap":55},[59,1686,1687,1689,1691,1693],{"class":61,"line":62},[59,1688,66],{"class":65},[59,1690,1151],{"class":69},[59,1692,74],{"class":73},[59,1694,145],{"class":84},[59,1696,1697,1700,1702,1705],{"class":61,"line":148},[59,1698,1699],{"class":151},"  a",[59,1701,155],{"class":84},[59,1703,1704],{"class":180}," 1",[59,1706,169],{"class":84},[59,1708,1709,1712,1714,1716],{"class":61,"line":172},[59,1710,1711],{"class":151},"  b",[59,1713,155],{"class":84},[59,1715,661],{"class":180},[59,1717,169],{"class":84},[59,1719,1720,1722,1725,1728],{"class":61,"line":186},[59,1721,224],{"class":65},[59,1723,1724],{"class":80}," c",[59,1726,1727],{"class":84},"()",[59,1729,145],{"class":84},[59,1731,1732,1734,1737,1739,1741,1743,1745,1747],{"class":61,"line":192},[59,1733,281],{"class":280},[59,1735,1736],{"class":865}," this",[59,1738,248],{"class":84},[59,1740,462],{"class":88},[59,1742,478],{"class":65},[59,1744,1736],{"class":865},[59,1746,248],{"class":84},[59,1748,1749],{"class":88},"b\n",[59,1751,1752],{"class":61,"line":199},[59,1753,380],{"class":84},[59,1755,1756],{"class":61,"line":221},[59,1757,189],{"class":84},[59,1759,1760],{"class":61,"line":242},[59,1761,196],{"emptyLinePlaceholder":195},[59,1763,1764,1766,1769,1771],{"class":61,"line":277},[59,1765,66],{"class":65},[59,1767,1768],{"class":69}," obj2",[59,1770,74],{"class":73},[59,1772,145],{"class":84},[59,1774,1775,1777,1779,1782],{"class":61,"line":294},[59,1776,1699],{"class":151},[59,1778,155],{"class":84},[59,1780,1781],{"class":180}," 3",[59,1783,169],{"class":84},[59,1785,1786,1788,1790,1792],{"class":61,"line":300},[59,1787,1711],{"class":151},[59,1789,155],{"class":84},[59,1791,707],{"class":180},[59,1793,169],{"class":84},[59,1795,1796],{"class":61,"line":323},[59,1797,189],{"class":84},[59,1799,1800],{"class":61,"line":359},[59,1801,196],{"emptyLinePlaceholder":195},[59,1803,1804,1807,1809,1812,1814,1816,1818],{"class":61,"line":377},[59,1805,1806],{"class":88},"obj2",[59,1808,248],{"class":84},[59,1810,1811],{"class":88},"c",[59,1813,74],{"class":73},[59,1815,1151],{"class":88},[59,1817,248],{"class":84},[59,1819,1820],{"class":88},"c\n",[59,1822,1823,1825,1827,1829,1831,1833,1835,1837,1839],{"class":61,"line":383},[59,1824,642],{"class":88},[59,1826,248],{"class":84},[59,1828,251],{"class":80},[59,1830,85],{"class":84},[59,1832,1806],{"class":88},[59,1834,248],{"class":84},[59,1836,1811],{"class":88},[59,1838,237],{"class":84},[59,1840,1841],{"class":414}," // 3 (不是7)\n",[23,1843,1844,1845,1848,1849,1851],{},"直接赋值只是复制了值,不会保持 ",[27,1846,1847],{},"getter"," 的动态计算特性, 无法直接实现对",[27,1850,1847],{},"的借用",[100,1853,1854],{},[103,1855,1856,1857,1859],{},"使用",[27,1858,771],{},"可以实现,但是需要手动获取属性描述符",[50,1861,1863],{"className":52,"code":1862,"language":54,"meta":55,"style":55},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\n// 获取 getter 函数\nconst descriptor = Object.getOwnPropertyDescriptor(obj, 'c') // 获取属性描述符\nconst getter = descriptor.get // 获取getter 函数\n\n// 绑定 this\nconst boundGetter = getter.bind(obj2)\nconsole.log(boundGetter()) // 7\n",[27,1864,1865,1875,1885,1895,1905,1923,1927,1931,1935,1945,1955,1965,1969,1973,1978,2012,2030,2034,2039,2060],{"__ignoreMap":55},[59,1866,1867,1869,1871,1873],{"class":61,"line":62},[59,1868,66],{"class":65},[59,1870,1151],{"class":69},[59,1872,74],{"class":73},[59,1874,145],{"class":84},[59,1876,1877,1879,1881,1883],{"class":61,"line":148},[59,1878,1699],{"class":151},[59,1880,155],{"class":84},[59,1882,1704],{"class":180},[59,1884,169],{"class":84},[59,1886,1887,1889,1891,1893],{"class":61,"line":172},[59,1888,1711],{"class":151},[59,1890,155],{"class":84},[59,1892,661],{"class":180},[59,1894,169],{"class":84},[59,1896,1897,1899,1901,1903],{"class":61,"line":186},[59,1898,224],{"class":65},[59,1900,1724],{"class":80},[59,1902,1727],{"class":84},[59,1904,145],{"class":84},[59,1906,1907,1909,1911,1913,1915,1917,1919,1921],{"class":61,"line":192},[59,1908,281],{"class":280},[59,1910,1736],{"class":865},[59,1912,248],{"class":84},[59,1914,462],{"class":88},[59,1916,478],{"class":65},[59,1918,1736],{"class":865},[59,1920,248],{"class":84},[59,1922,1749],{"class":88},[59,1924,1925],{"class":61,"line":199},[59,1926,380],{"class":84},[59,1928,1929],{"class":61,"line":221},[59,1930,189],{"class":84},[59,1932,1933],{"class":61,"line":242},[59,1934,196],{"emptyLinePlaceholder":195},[59,1936,1937,1939,1941,1943],{"class":61,"line":277},[59,1938,66],{"class":65},[59,1940,1768],{"class":69},[59,1942,74],{"class":73},[59,1944,145],{"class":84},[59,1946,1947,1949,1951,1953],{"class":61,"line":294},[59,1948,1699],{"class":151},[59,1950,155],{"class":84},[59,1952,1781],{"class":180},[59,1954,169],{"class":84},[59,1956,1957,1959,1961,1963],{"class":61,"line":300},[59,1958,1711],{"class":151},[59,1960,155],{"class":84},[59,1962,707],{"class":180},[59,1964,169],{"class":84},[59,1966,1967],{"class":61,"line":323},[59,1968,189],{"class":84},[59,1970,1971],{"class":61,"line":359},[59,1972,196],{"emptyLinePlaceholder":195},[59,1974,1975],{"class":61,"line":377},[59,1976,1977],{"class":414},"// 获取 getter 函数\n",[59,1979,1980,1982,1985,1987,1990,1992,1995,1997,1999,2001,2003,2005,2007,2009],{"class":61,"line":383},[59,1981,66],{"class":65},[59,1983,1984],{"class":69}," descriptor",[59,1986,74],{"class":73},[59,1988,1989],{"class":88}," Object",[59,1991,248],{"class":84},[59,1993,1994],{"class":80},"getOwnPropertyDescriptor",[59,1996,85],{"class":84},[59,1998,1170],{"class":88},[59,2000,92],{"class":84},[59,2002,159],{"class":158},[59,2004,1811],{"class":162},[59,2006,166],{"class":158},[59,2008,237],{"class":84},[59,2010,2011],{"class":414}," // 获取属性描述符\n",[59,2013,2014,2016,2019,2021,2023,2025,2027],{"class":61,"line":389},[59,2015,66],{"class":65},[59,2017,2018],{"class":69}," getter",[59,2020,74],{"class":73},[59,2022,1984],{"class":88},[59,2024,248],{"class":84},[59,2026,116],{"class":88},[59,2028,2029],{"class":414}," // 获取getter 函数\n",[59,2031,2032],{"class":61,"line":394},[59,2033,196],{"emptyLinePlaceholder":195},[59,2035,2036],{"class":61,"line":418},[59,2037,2038],{"class":414},"// 绑定 this\n",[59,2040,2041,2043,2046,2048,2050,2052,2054,2056,2058],{"class":61,"line":756},[59,2042,66],{"class":65},[59,2044,2045],{"class":69}," boundGetter",[59,2047,74],{"class":73},[59,2049,2018],{"class":88},[59,2051,248],{"class":84},[59,2053,771],{"class":80},[59,2055,85],{"class":84},[59,2057,1806],{"class":88},[59,2059,98],{"class":84},[59,2061,2063,2065,2067,2069,2071,2074,2077],{"class":61,"line":2062},20,[59,2064,642],{"class":88},[59,2066,248],{"class":84},[59,2068,251],{"class":80},[59,2070,85],{"class":84},[59,2072,2073],{"class":80},"boundGetter",[59,2075,2076],{"class":84},"())",[59,2078,2079],{"class":414}," // 7\n",[100,2081,2082],{},[103,2083,1856,2084,2086,2087,2089,2090,1851],{},[27,2085,1114],{},"改变",[27,2088,811],{},"可以直接实现",[27,2091,1847],{},[50,2093,2095],{"className":52,"code":2094,"language":54,"meta":55,"style":55},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst obj2 = {\n  a: 3,\n  b: 4,\n}\n\nconsole.log(Reflect.get(obj, 'c', obj2)) // 7\n",[27,2096,2097,2107,2117,2127,2137,2155,2159,2163,2167,2177,2187,2197,2201,2205],{"__ignoreMap":55},[59,2098,2099,2101,2103,2105],{"class":61,"line":62},[59,2100,66],{"class":65},[59,2102,1151],{"class":69},[59,2104,74],{"class":73},[59,2106,145],{"class":84},[59,2108,2109,2111,2113,2115],{"class":61,"line":148},[59,2110,1699],{"class":151},[59,2112,155],{"class":84},[59,2114,1704],{"class":180},[59,2116,169],{"class":84},[59,2118,2119,2121,2123,2125],{"class":61,"line":172},[59,2120,1711],{"class":151},[59,2122,155],{"class":84},[59,2124,661],{"class":180},[59,2126,169],{"class":84},[59,2128,2129,2131,2133,2135],{"class":61,"line":186},[59,2130,224],{"class":65},[59,2132,1724],{"class":80},[59,2134,1727],{"class":84},[59,2136,145],{"class":84},[59,2138,2139,2141,2143,2145,2147,2149,2151,2153],{"class":61,"line":192},[59,2140,281],{"class":280},[59,2142,1736],{"class":865},[59,2144,248],{"class":84},[59,2146,462],{"class":88},[59,2148,478],{"class":65},[59,2150,1736],{"class":865},[59,2152,248],{"class":84},[59,2154,1749],{"class":88},[59,2156,2157],{"class":61,"line":199},[59,2158,380],{"class":84},[59,2160,2161],{"class":61,"line":221},[59,2162,189],{"class":84},[59,2164,2165],{"class":61,"line":242},[59,2166,196],{"emptyLinePlaceholder":195},[59,2168,2169,2171,2173,2175],{"class":61,"line":277},[59,2170,66],{"class":65},[59,2172,1768],{"class":69},[59,2174,74],{"class":73},[59,2176,145],{"class":84},[59,2178,2179,2181,2183,2185],{"class":61,"line":294},[59,2180,1699],{"class":151},[59,2182,155],{"class":84},[59,2184,1781],{"class":180},[59,2186,169],{"class":84},[59,2188,2189,2191,2193,2195],{"class":61,"line":300},[59,2190,1711],{"class":151},[59,2192,155],{"class":84},[59,2194,707],{"class":180},[59,2196,169],{"class":84},[59,2198,2199],{"class":61,"line":323},[59,2200,189],{"class":84},[59,2202,2203],{"class":61,"line":359},[59,2204,196],{"emptyLinePlaceholder":195},[59,2206,2207,2209,2211,2213,2215,2217,2219,2221,2223,2225,2227,2229,2231,2233,2235,2237,2239],{"class":61,"line":377},[59,2208,642],{"class":88},[59,2210,248],{"class":84},[59,2212,251],{"class":80},[59,2214,85],{"class":84},[59,2216,1114],{"class":88},[59,2218,248],{"class":84},[59,2220,116],{"class":80},[59,2222,85],{"class":84},[59,2224,1170],{"class":88},[59,2226,92],{"class":84},[59,2228,159],{"class":158},[59,2230,1811],{"class":162},[59,2232,166],{"class":158},[59,2234,92],{"class":84},[59,2236,1768],{"class":88},[59,2238,664],{"class":84},[59,2240,2079],{"class":414},[18,2242,2244],{"id":2243},"_2-在-proxy-中使用-reflect-的作用","2. 在 Proxy 中使用 Reflect 的作用",[433,2246,2248],{"id":2247},"_21-保持默认行为","2.1 保持默认行为",[23,2250,2251,2253],{},[27,2252,1114],{},"方法提供了与 Proxy 陷阱一一对应的操作,可以方便地在自定义行为后保持默认行为",[50,2255,2257],{"className":52,"code":2256,"language":54,"meta":55,"style":55},"const proxy = new Proxy(target, {\n  get(target, prop, receiver) {\n    console.log(`Getting property ${prop}`)\n    // 使用 Reflect 保持默认的获取行为\n    return Reflect.get(target, prop, receiver)\n  }\n})\n",[27,2258,2259,2279,2300,2325,2330,2354,2358],{"__ignoreMap":55},[59,2260,2261,2263,2265,2267,2269,2271,2273,2275,2277],{"class":61,"line":62},[59,2262,66],{"class":65},[59,2264,204],{"class":69},[59,2266,74],{"class":73},[59,2268,77],{"class":65},[59,2270,81],{"class":80},[59,2272,85],{"class":84},[59,2274,89],{"class":88},[59,2276,92],{"class":84},[59,2278,145],{"class":84},[59,2280,2281,2283,2285,2287,2289,2291,2293,2296,2298],{"class":61,"line":148},[59,2282,224],{"class":80},[59,2284,85],{"class":84},[59,2286,89],{"class":229},[59,2288,92],{"class":84},[59,2290,234],{"class":229},[59,2292,92],{"class":84},[59,2294,2295],{"class":229}," receiver",[59,2297,237],{"class":84},[59,2299,145],{"class":84},[59,2301,2302,2304,2306,2308,2310,2312,2315,2317,2319,2321,2323],{"class":61,"line":172},[59,2303,245],{"class":88},[59,2305,248],{"class":84},[59,2307,251],{"class":80},[59,2309,85],{"class":84},[59,2311,256],{"class":158},[59,2313,2314],{"class":162},"Getting property ",[59,2316,263],{"class":262},[59,2318,267],{"class":266},[59,2320,270],{"class":262},[59,2322,256],{"class":158},[59,2324,98],{"class":84},[59,2326,2327],{"class":61,"line":186},[59,2328,2329],{"class":414},"    // 使用 Reflect 保持默认的获取行为\n",[59,2331,2332,2334,2336,2338,2340,2342,2344,2346,2348,2350,2352],{"class":61,"line":192},[59,2333,281],{"class":280},[59,2335,1254],{"class":88},[59,2337,248],{"class":84},[59,2339,116],{"class":80},[59,2341,85],{"class":84},[59,2343,89],{"class":88},[59,2345,92],{"class":84},[59,2347,234],{"class":88},[59,2349,92],{"class":84},[59,2351,2295],{"class":88},[59,2353,98],{"class":84},[59,2355,2356],{"class":61,"line":199},[59,2357,380],{"class":84},[59,2359,2360],{"class":61,"line":221},[59,2361,386],{"class":84},[23,2363,2364],{},"Reflect 方法提供了与 Proxy 陷阱完美对应,使代码更一致",[2366,2367,2368,2381],"table",{},[2369,2370,2371],"thead",{},[2372,2373,2374,2378],"tr",{},[2375,2376,2377],"th",{},"Proxy 陷阱",[2375,2379,2380],{},"Reflect 方法",[2382,2383,2384,2392,2398,2406,2414,2421],"tbody",{},[2372,2385,2386,2389],{},[2387,2388,116],"td",{},[2387,2390,2391],{},"Reflect.get()",[2372,2393,2394,2396],{},[2387,2395,120],{},[2387,2397,1531],{},[2372,2399,2400,2403],{},[2387,2401,2402],{},"has",[2387,2404,2405],{},"Reflect.has()",[2372,2407,2408,2411],{},[2387,2409,2410],{},"deleteProperty",[2387,2412,2413],{},"Reflect.deleteProperty()",[2372,2415,2416,2418],{},[2387,2417,615],{},[2387,2419,2420],{},"Reflect.apply()",[2372,2422,2423,2426],{},[2387,2424,2425],{},"construct",[2387,2427,2428],{},"Reflect.construct()",[433,2430,2432,2433],{"id":2431},"_22-确保正确的this","2.2 确保正确的",[27,2434,811],{},[23,2436,2437],{},"例如: 在存在继承的对象中",[100,2439,2440],{},[103,2441,2442],{},"直接通过 target 访问",[50,2444,2446],{"className":52,"code":2445,"language":54,"meta":55,"style":55},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop) {\n    return target[prop] // 直接使用 target 会导致 this 绑定问题\n  }\n})\n\nconst obj2 = Object.create(proxy) // 继承proxy\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 3\n",[27,2447,2448,2458,2468,2478,2488,2506,2510,2514,2518,2538,2554,2569,2573,2577,2581,2605,2618,2632],{"__ignoreMap":55},[59,2449,2450,2452,2454,2456],{"class":61,"line":62},[59,2451,66],{"class":65},[59,2453,1151],{"class":69},[59,2455,74],{"class":73},[59,2457,145],{"class":84},[59,2459,2460,2462,2464,2466],{"class":61,"line":148},[59,2461,1699],{"class":151},[59,2463,155],{"class":84},[59,2465,1704],{"class":180},[59,2467,169],{"class":84},[59,2469,2470,2472,2474,2476],{"class":61,"line":172},[59,2471,1711],{"class":151},[59,2473,155],{"class":84},[59,2475,661],{"class":180},[59,2477,169],{"class":84},[59,2479,2480,2482,2484,2486],{"class":61,"line":186},[59,2481,224],{"class":65},[59,2483,1724],{"class":80},[59,2485,1727],{"class":84},[59,2487,145],{"class":84},[59,2489,2490,2492,2494,2496,2498,2500,2502,2504],{"class":61,"line":192},[59,2491,281],{"class":280},[59,2493,1736],{"class":865},[59,2495,248],{"class":84},[59,2497,462],{"class":88},[59,2499,478],{"class":65},[59,2501,1736],{"class":865},[59,2503,248],{"class":84},[59,2505,1749],{"class":88},[59,2507,2508],{"class":61,"line":199},[59,2509,380],{"class":84},[59,2511,2512],{"class":61,"line":221},[59,2513,189],{"class":84},[59,2515,2516],{"class":61,"line":242},[59,2517,196],{"emptyLinePlaceholder":195},[59,2519,2520,2522,2524,2526,2528,2530,2532,2534,2536],{"class":61,"line":277},[59,2521,66],{"class":65},[59,2523,204],{"class":69},[59,2525,74],{"class":73},[59,2527,77],{"class":65},[59,2529,81],{"class":80},[59,2531,85],{"class":84},[59,2533,1170],{"class":88},[59,2535,92],{"class":84},[59,2537,145],{"class":84},[59,2539,2540,2542,2544,2546,2548,2550,2552],{"class":61,"line":294},[59,2541,224],{"class":80},[59,2543,85],{"class":84},[59,2545,89],{"class":229},[59,2547,92],{"class":84},[59,2549,234],{"class":229},[59,2551,237],{"class":84},[59,2553,145],{"class":84},[59,2555,2556,2558,2560,2562,2564,2566],{"class":61,"line":300},[59,2557,281],{"class":280},[59,2559,140],{"class":88},[59,2561,286],{"class":84},[59,2563,267],{"class":88},[59,2565,369],{"class":84},[59,2567,2568],{"class":414}," // 直接使用 target 会导致 this 绑定问题\n",[59,2570,2571],{"class":61,"line":323},[59,2572,380],{"class":84},[59,2574,2575],{"class":61,"line":359},[59,2576,386],{"class":84},[59,2578,2579],{"class":61,"line":377},[59,2580,196],{"emptyLinePlaceholder":195},[59,2582,2583,2585,2587,2589,2591,2593,2596,2598,2600,2602],{"class":61,"line":383},[59,2584,66],{"class":65},[59,2586,1768],{"class":69},[59,2588,74],{"class":73},[59,2590,1989],{"class":88},[59,2592,248],{"class":84},[59,2594,2595],{"class":80},"create",[59,2597,85],{"class":84},[59,2599,397],{"class":88},[59,2601,237],{"class":84},[59,2603,2604],{"class":414}," // 继承proxy\n",[59,2606,2607,2609,2611,2613,2615],{"class":61,"line":389},[59,2608,1806],{"class":88},[59,2610,248],{"class":84},[59,2612,462],{"class":88},[59,2614,74],{"class":73},[59,2616,2617],{"class":180}," 3\n",[59,2619,2620,2622,2624,2627,2629],{"class":61,"line":394},[59,2621,1806],{"class":88},[59,2623,248],{"class":84},[59,2625,2626],{"class":88},"b",[59,2628,74],{"class":73},[59,2630,2631],{"class":180}," 4\n",[59,2633,2634,2636,2638,2640,2642,2644,2646,2648,2650],{"class":61,"line":418},[59,2635,642],{"class":88},[59,2637,248],{"class":84},[59,2639,251],{"class":80},[59,2641,85],{"class":84},[59,2643,1806],{"class":88},[59,2645,248],{"class":84},[59,2647,1811],{"class":88},[59,2649,237],{"class":84},[59,2651,2652],{"class":414}," // 3\n",[438,2654,2655],{},[23,2656,2657,2658,2660],{},"我们期望 obj2.c 应该计算 obj2.a + obj2.b,即 3 + 4 = 7\n实际输出却是 3,这是因为:\na. obj2.c 触发 proxy 的 get 陷阱\nb. 陷阱中直接返回 target ",[59,2659,267],{}," （即 obj.c）\nc. 当 obj.c 的 getter 执行时,this 指向的是 obj 而非 obj2\nd. 所以计算的是 obj.a + obj.b（1 + 2 = 3）",[100,2662,2663],{},[103,2664,2665],{},"使用 Reflect,传递 receiver",[50,2667,2669],{"className":52,"code":2668,"language":54,"meta":55,"style":55},"const obj = {\n  a: 1,\n  b: 2,\n  get c() {\n    return this.a + this.b\n  }\n}\n\nconst proxy = new Proxy(obj, {\n  get(target, prop, receiver) {\n    return Reflect.get(target, prop, receiver) // receiver 参数会自动指向最初发起调用的对象\n  }\n})\n\nconst obj2 = Object.create(proxy)\nobj2.a = 3\nobj2.b = 4\nconsole.log(obj2.c) // 7\n",[27,2670,2671,2681,2691,2701,2711,2729,2733,2737,2741,2761,2781,2808,2812,2816,2820,2840,2852,2864],{"__ignoreMap":55},[59,2672,2673,2675,2677,2679],{"class":61,"line":62},[59,2674,66],{"class":65},[59,2676,1151],{"class":69},[59,2678,74],{"class":73},[59,2680,145],{"class":84},[59,2682,2683,2685,2687,2689],{"class":61,"line":148},[59,2684,1699],{"class":151},[59,2686,155],{"class":84},[59,2688,1704],{"class":180},[59,2690,169],{"class":84},[59,2692,2693,2695,2697,2699],{"class":61,"line":172},[59,2694,1711],{"class":151},[59,2696,155],{"class":84},[59,2698,661],{"class":180},[59,2700,169],{"class":84},[59,2702,2703,2705,2707,2709],{"class":61,"line":186},[59,2704,224],{"class":65},[59,2706,1724],{"class":80},[59,2708,1727],{"class":84},[59,2710,145],{"class":84},[59,2712,2713,2715,2717,2719,2721,2723,2725,2727],{"class":61,"line":192},[59,2714,281],{"class":280},[59,2716,1736],{"class":865},[59,2718,248],{"class":84},[59,2720,462],{"class":88},[59,2722,478],{"class":65},[59,2724,1736],{"class":865},[59,2726,248],{"class":84},[59,2728,1749],{"class":88},[59,2730,2731],{"class":61,"line":199},[59,2732,380],{"class":84},[59,2734,2735],{"class":61,"line":221},[59,2736,189],{"class":84},[59,2738,2739],{"class":61,"line":242},[59,2740,196],{"emptyLinePlaceholder":195},[59,2742,2743,2745,2747,2749,2751,2753,2755,2757,2759],{"class":61,"line":277},[59,2744,66],{"class":65},[59,2746,204],{"class":69},[59,2748,74],{"class":73},[59,2750,77],{"class":65},[59,2752,81],{"class":80},[59,2754,85],{"class":84},[59,2756,1170],{"class":88},[59,2758,92],{"class":84},[59,2760,145],{"class":84},[59,2762,2763,2765,2767,2769,2771,2773,2775,2777,2779],{"class":61,"line":294},[59,2764,224],{"class":80},[59,2766,85],{"class":84},[59,2768,89],{"class":229},[59,2770,92],{"class":84},[59,2772,234],{"class":229},[59,2774,92],{"class":84},[59,2776,2295],{"class":229},[59,2778,237],{"class":84},[59,2780,145],{"class":84},[59,2782,2783,2785,2787,2789,2791,2793,2795,2797,2799,2801,2803,2805],{"class":61,"line":300},[59,2784,281],{"class":280},[59,2786,1254],{"class":88},[59,2788,248],{"class":84},[59,2790,116],{"class":80},[59,2792,85],{"class":84},[59,2794,89],{"class":88},[59,2796,92],{"class":84},[59,2798,234],{"class":88},[59,2800,92],{"class":84},[59,2802,2295],{"class":88},[59,2804,237],{"class":84},[59,2806,2807],{"class":414}," // receiver 参数会自动指向最初发起调用的对象\n",[59,2809,2810],{"class":61,"line":323},[59,2811,380],{"class":84},[59,2813,2814],{"class":61,"line":359},[59,2815,386],{"class":84},[59,2817,2818],{"class":61,"line":377},[59,2819,196],{"emptyLinePlaceholder":195},[59,2821,2822,2824,2826,2828,2830,2832,2834,2836,2838],{"class":61,"line":383},[59,2823,66],{"class":65},[59,2825,1768],{"class":69},[59,2827,74],{"class":73},[59,2829,1989],{"class":88},[59,2831,248],{"class":84},[59,2833,2595],{"class":80},[59,2835,85],{"class":84},[59,2837,397],{"class":88},[59,2839,98],{"class":84},[59,2841,2842,2844,2846,2848,2850],{"class":61,"line":389},[59,2843,1806],{"class":88},[59,2845,248],{"class":84},[59,2847,462],{"class":88},[59,2849,74],{"class":73},[59,2851,2617],{"class":180},[59,2853,2854,2856,2858,2860,2862],{"class":61,"line":394},[59,2855,1806],{"class":88},[59,2857,248],{"class":84},[59,2859,2626],{"class":88},[59,2861,74],{"class":73},[59,2863,2631],{"class":180},[59,2865,2866,2868,2870,2872,2874,2876,2878,2880,2882],{"class":61,"line":418},[59,2867,642],{"class":88},[59,2869,248],{"class":84},[59,2871,251],{"class":80},[59,2873,85],{"class":84},[59,2875,1806],{"class":88},[59,2877,248],{"class":84},[59,2879,1811],{"class":88},[59,2881,237],{"class":84},[59,2883,2079],{"class":414},[433,2885,2887,2888,2891,2892,2894],{"id":2886},"_23-总结在proxy中使用reflect的原因","2.3 总结:在",[27,2889,2890],{},"Proxy","中使用",[27,2893,1114],{},"的原因",[2896,2897,2898,2901,2904],"ol",{},[103,2899,2900],{},"保持代理透明性:直接操作可能绕过代理陷阱",[103,2902,2903],{},"维护不变式:确保代理行为与原始对象一致",[103,2905,2906],{},"处理特殊属性:正确处理 getter/setter 和原型链属性",[10,2908,2910],{"id":2909},"三proxy-与-reflect-的应用","三、Proxy 与 Reflect 的应用",[18,2912,2914],{"id":2913},"_1-实现观察者模式","1. 实现观察者模式",[50,2916,2918],{"className":52,"code":2917,"language":54,"meta":55,"style":55},"function createObservable(object) {\n  const observers = new Map() // 存储属性与观察者回调的映射\n  return new Proxy(object, {\n    set(target, p, newValue, receiver) {\n      const isSuccess = Reflect.set(target, p, newValue, receiver)\n      if (isSuccess && observers.has(p)) {\n        // 通知该属性的所有观察者\n        observers.get(p).forEach((cb) => {\n          cb(newValue)\n        })\n      }\n    },\n    get(target, p, receiver) {\n      if (p === 'observe') { // 通过 handler 的 get 陷阱暴露方法\n        return (p, callback) => {\n          if (observers.has(p)) {\n            observers.get(p).add(callback)\n          }\n          else {\n            observers.set(p, [callback])\n          }\n          return () => {\n            const callbacks = observers.get(p)\n            const index = callbacks.indexOf(callback)\n            if (index > -1) {\n              callbacks.splice(index, 1)\n            }\n          }\n        }\n      }\n      return Reflect.get(target, p, receiver)\n    },\n  })\n}\nconst person = createObservable({\n  name: 'John',\n  age: 30,\n})\n\nconst unsubscribe = person.observe('name', (newName) => {\n  console.log(`Name changed to ${newName}`)\n})\n\nperson.name = 'Jane' // 输出: Name changed to Jane\nunsubscribe()\nperson.name = 'John' // 不会输出任何内容\n",[27,2919,2920,2937,2957,2974,3001,3035,3062,3067,3098,3110,3115,3120,3125,3146,3172,3192,3214,3239,3244,3251,3272,3277,3290,3313,3336,3359,3380,3386,3391,3397,3402,3428,3433,3439,3444,3458,3473,3484,3489,3494,3531,3558,3563,3568,3589,3598],{"__ignoreMap":55},[59,2921,2922,2925,2928,2930,2933,2935],{"class":61,"line":62},[59,2923,2924],{"class":65},"function",[59,2926,2927],{"class":80}," createObservable",[59,2929,85],{"class":84},[59,2931,2932],{"class":229},"object",[59,2934,237],{"class":84},[59,2936,145],{"class":84},[59,2938,2939,2942,2945,2947,2949,2952,2954],{"class":61,"line":148},[59,2940,2941],{"class":65},"  const",[59,2943,2944],{"class":69}," observers",[59,2946,74],{"class":73},[59,2948,77],{"class":65},[59,2950,2951],{"class":80}," Map",[59,2953,1727],{"class":84},[59,2955,2956],{"class":414}," // 存储属性与观察者回调的映射\n",[59,2958,2959,2962,2964,2966,2968,2970,2972],{"class":61,"line":172},[59,2960,2961],{"class":280},"  return",[59,2963,77],{"class":65},[59,2965,81],{"class":80},[59,2967,85],{"class":84},[59,2969,2932],{"class":88},[59,2971,92],{"class":84},[59,2973,145],{"class":84},[59,2975,2976,2979,2981,2983,2985,2988,2990,2993,2995,2997,2999],{"class":61,"line":186},[59,2977,2978],{"class":80},"    set",[59,2980,85],{"class":84},[59,2982,89],{"class":229},[59,2984,92],{"class":84},[59,2986,2987],{"class":229}," p",[59,2989,92],{"class":84},[59,2991,2992],{"class":229}," newValue",[59,2994,92],{"class":84},[59,2996,2295],{"class":229},[59,2998,237],{"class":84},[59,3000,145],{"class":84},[59,3002,3003,3006,3009,3011,3013,3015,3017,3019,3021,3023,3025,3027,3029,3031,3033],{"class":61,"line":192},[59,3004,3005],{"class":65},"      const",[59,3007,3008],{"class":69}," isSuccess",[59,3010,74],{"class":73},[59,3012,1254],{"class":88},[59,3014,248],{"class":84},[59,3016,120],{"class":80},[59,3018,85],{"class":84},[59,3020,89],{"class":88},[59,3022,92],{"class":84},[59,3024,2987],{"class":88},[59,3026,92],{"class":84},[59,3028,2992],{"class":88},[59,3030,92],{"class":84},[59,3032,2295],{"class":88},[59,3034,98],{"class":84},[59,3036,3037,3040,3042,3045,3048,3050,3052,3054,3056,3058,3060],{"class":61,"line":199},[59,3038,3039],{"class":280},"      if",[59,3041,459],{"class":84},[59,3043,3044],{"class":88},"isSuccess",[59,3046,3047],{"class":65}," &&",[59,3049,2944],{"class":88},[59,3051,248],{"class":84},[59,3053,2402],{"class":80},[59,3055,85],{"class":84},[59,3057,23],{"class":88},[59,3059,664],{"class":84},[59,3061,145],{"class":84},[59,3063,3064],{"class":61,"line":221},[59,3065,3066],{"class":414},"        // 通知该属性的所有观察者\n",[59,3068,3069,3072,3074,3076,3078,3080,3083,3086,3089,3092,3094,3096],{"class":61,"line":242},[59,3070,3071],{"class":88},"        observers",[59,3073,248],{"class":84},[59,3075,116],{"class":80},[59,3077,85],{"class":84},[59,3079,23],{"class":88},[59,3081,3082],{"class":84},").",[59,3084,3085],{"class":80},"forEach",[59,3087,3088],{"class":84},"((",[59,3090,3091],{"class":229},"cb",[59,3093,237],{"class":84},[59,3095,472],{"class":73},[59,3097,145],{"class":84},[59,3099,3100,3103,3105,3108],{"class":61,"line":277},[59,3101,3102],{"class":80},"          cb",[59,3104,85],{"class":84},[59,3106,3107],{"class":88},"newValue",[59,3109,98],{"class":84},[59,3111,3112],{"class":61,"line":294},[59,3113,3114],{"class":84},"        })\n",[59,3116,3117],{"class":61,"line":300},[59,3118,3119],{"class":84},"      }\n",[59,3121,3122],{"class":61,"line":323},[59,3123,3124],{"class":84},"    },\n",[59,3126,3127,3130,3132,3134,3136,3138,3140,3142,3144],{"class":61,"line":359},[59,3128,3129],{"class":80},"    get",[59,3131,85],{"class":84},[59,3133,89],{"class":229},[59,3135,92],{"class":84},[59,3137,2987],{"class":229},[59,3139,92],{"class":84},[59,3141,2295],{"class":229},[59,3143,237],{"class":84},[59,3145,145],{"class":84},[59,3147,3148,3150,3152,3154,3157,3159,3162,3164,3166,3169],{"class":61,"line":377},[59,3149,3039],{"class":280},[59,3151,459],{"class":84},[59,3153,23],{"class":88},[59,3155,3156],{"class":65}," ===",[59,3158,159],{"class":158},[59,3160,3161],{"class":162},"observe",[59,3163,166],{"class":158},[59,3165,237],{"class":84},[59,3167,3168],{"class":84}," {",[59,3170,3171],{"class":414}," // 通过 handler 的 get 陷阱暴露方法\n",[59,3173,3174,3177,3179,3181,3183,3186,3188,3190],{"class":61,"line":383},[59,3175,3176],{"class":280},"        return",[59,3178,459],{"class":84},[59,3180,23],{"class":229},[59,3182,92],{"class":84},[59,3184,3185],{"class":229}," callback",[59,3187,237],{"class":84},[59,3189,472],{"class":73},[59,3191,145],{"class":84},[59,3193,3194,3197,3199,3202,3204,3206,3208,3210,3212],{"class":61,"line":389},[59,3195,3196],{"class":280},"          if",[59,3198,459],{"class":84},[59,3200,3201],{"class":88},"observers",[59,3203,248],{"class":84},[59,3205,2402],{"class":80},[59,3207,85],{"class":84},[59,3209,23],{"class":88},[59,3211,664],{"class":84},[59,3213,145],{"class":84},[59,3215,3216,3219,3221,3223,3225,3227,3229,3232,3234,3237],{"class":61,"line":394},[59,3217,3218],{"class":88},"            observers",[59,3220,248],{"class":84},[59,3222,116],{"class":80},[59,3224,85],{"class":84},[59,3226,23],{"class":88},[59,3228,3082],{"class":84},[59,3230,3231],{"class":80},"add",[59,3233,85],{"class":84},[59,3235,3236],{"class":88},"callback",[59,3238,98],{"class":84},[59,3240,3241],{"class":61,"line":418},[59,3242,3243],{"class":84},"          }\n",[59,3245,3246,3249],{"class":61,"line":756},[59,3247,3248],{"class":280},"          else",[59,3250,145],{"class":84},[59,3252,3253,3255,3257,3259,3261,3263,3265,3267,3269],{"class":61,"line":2062},[59,3254,3218],{"class":88},[59,3256,248],{"class":84},[59,3258,120],{"class":80},[59,3260,85],{"class":84},[59,3262,23],{"class":88},[59,3264,92],{"class":84},[59,3266,699],{"class":84},[59,3268,3236],{"class":88},[59,3270,3271],{"class":84},"])\n",[59,3273,3275],{"class":61,"line":3274},21,[59,3276,3243],{"class":84},[59,3278,3280,3283,3286,3288],{"class":61,"line":3279},22,[59,3281,3282],{"class":280},"          return",[59,3284,3285],{"class":84}," ()",[59,3287,472],{"class":73},[59,3289,145],{"class":84},[59,3291,3293,3296,3299,3301,3303,3305,3307,3309,3311],{"class":61,"line":3292},23,[59,3294,3295],{"class":65},"            const",[59,3297,3298],{"class":69}," callbacks",[59,3300,74],{"class":73},[59,3302,2944],{"class":88},[59,3304,248],{"class":84},[59,3306,116],{"class":80},[59,3308,85],{"class":84},[59,3310,23],{"class":88},[59,3312,98],{"class":84},[59,3314,3316,3318,3321,3323,3325,3327,3330,3332,3334],{"class":61,"line":3315},24,[59,3317,3295],{"class":65},[59,3319,3320],{"class":69}," index",[59,3322,74],{"class":73},[59,3324,3298],{"class":88},[59,3326,248],{"class":84},[59,3328,3329],{"class":80},"indexOf",[59,3331,85],{"class":84},[59,3333,3236],{"class":88},[59,3335,98],{"class":84},[59,3337,3339,3342,3344,3347,3350,3353,3355,3357],{"class":61,"line":3338},25,[59,3340,3341],{"class":280},"            if",[59,3343,459],{"class":84},[59,3345,3346],{"class":88},"index",[59,3348,3349],{"class":73}," >",[59,3351,3352],{"class":65}," -",[59,3354,656],{"class":180},[59,3356,237],{"class":84},[59,3358,145],{"class":84},[59,3360,3362,3365,3367,3370,3372,3374,3376,3378],{"class":61,"line":3361},26,[59,3363,3364],{"class":88},"              callbacks",[59,3366,248],{"class":84},[59,3368,3369],{"class":80},"splice",[59,3371,85],{"class":84},[59,3373,3346],{"class":88},[59,3375,92],{"class":84},[59,3377,1704],{"class":180},[59,3379,98],{"class":84},[59,3381,3383],{"class":61,"line":3382},27,[59,3384,3385],{"class":84},"            }\n",[59,3387,3389],{"class":61,"line":3388},28,[59,3390,3243],{"class":84},[59,3392,3394],{"class":61,"line":3393},29,[59,3395,3396],{"class":84},"        }\n",[59,3398,3400],{"class":61,"line":3399},30,[59,3401,3119],{"class":84},[59,3403,3405,3408,3410,3412,3414,3416,3418,3420,3422,3424,3426],{"class":61,"line":3404},31,[59,3406,3407],{"class":280},"      return",[59,3409,1254],{"class":88},[59,3411,248],{"class":84},[59,3413,116],{"class":80},[59,3415,85],{"class":84},[59,3417,89],{"class":88},[59,3419,92],{"class":84},[59,3421,2987],{"class":88},[59,3423,92],{"class":84},[59,3425,2295],{"class":88},[59,3427,98],{"class":84},[59,3429,3431],{"class":61,"line":3430},32,[59,3432,3124],{"class":84},[59,3434,3436],{"class":61,"line":3435},33,[59,3437,3438],{"class":84},"  })\n",[59,3440,3442],{"class":61,"line":3441},34,[59,3443,189],{"class":84},[59,3445,3447,3449,3451,3453,3455],{"class":61,"line":3446},35,[59,3448,66],{"class":65},[59,3450,1039],{"class":69},[59,3452,74],{"class":73},[59,3454,2927],{"class":80},[59,3456,3457],{"class":84},"({\n",[59,3459,3461,3463,3465,3467,3469,3471],{"class":61,"line":3460},36,[59,3462,152],{"class":151},[59,3464,155],{"class":84},[59,3466,159],{"class":158},[59,3468,163],{"class":162},[59,3470,166],{"class":158},[59,3472,169],{"class":84},[59,3474,3476,3478,3480,3482],{"class":61,"line":3475},37,[59,3477,175],{"class":151},[59,3479,155],{"class":84},[59,3481,1058],{"class":180},[59,3483,169],{"class":84},[59,3485,3487],{"class":61,"line":3486},38,[59,3488,386],{"class":84},[59,3490,3492],{"class":61,"line":3491},39,[59,3493,196],{"emptyLinePlaceholder":195},[59,3495,3497,3499,3502,3504,3506,3508,3510,3512,3514,3516,3518,3520,3522,3525,3527,3529],{"class":61,"line":3496},40,[59,3498,66],{"class":65},[59,3500,3501],{"class":69}," unsubscribe",[59,3503,74],{"class":73},[59,3505,1039],{"class":88},[59,3507,248],{"class":84},[59,3509,3161],{"class":80},[59,3511,85],{"class":84},[59,3513,166],{"class":158},[59,3515,402],{"class":162},[59,3517,166],{"class":158},[59,3519,92],{"class":84},[59,3521,459],{"class":84},[59,3523,3524],{"class":229},"newName",[59,3526,237],{"class":84},[59,3528,472],{"class":73},[59,3530,145],{"class":84},[59,3532,3534,3537,3539,3541,3543,3545,3548,3550,3552,3554,3556],{"class":61,"line":3533},41,[59,3535,3536],{"class":88},"  console",[59,3538,248],{"class":84},[59,3540,251],{"class":80},[59,3542,85],{"class":84},[59,3544,256],{"class":158},[59,3546,3547],{"class":162},"Name changed to ",[59,3549,263],{"class":262},[59,3551,3524],{"class":266},[59,3553,270],{"class":262},[59,3555,256],{"class":158},[59,3557,98],{"class":84},[59,3559,3561],{"class":61,"line":3560},42,[59,3562,386],{"class":84},[59,3564,3566],{"class":61,"line":3565},43,[59,3567,196],{"emptyLinePlaceholder":195},[59,3569,3571,3574,3576,3578,3580,3582,3584,3586],{"class":61,"line":3570},44,[59,3572,3573],{"class":88},"person",[59,3575,248],{"class":84},[59,3577,402],{"class":88},[59,3579,74],{"class":73},[59,3581,159],{"class":158},[59,3583,409],{"class":162},[59,3585,166],{"class":158},[59,3587,3588],{"class":414}," // 输出: Name changed to Jane\n",[59,3590,3592,3595],{"class":61,"line":3591},45,[59,3593,3594],{"class":80},"unsubscribe",[59,3596,3597],{"class":84},"()\n",[59,3599,3601,3603,3605,3607,3609,3611,3613,3615],{"class":61,"line":3600},46,[59,3602,3573],{"class":88},[59,3604,248],{"class":84},[59,3606,402],{"class":88},[59,3608,74],{"class":73},[59,3610,159],{"class":158},[59,3612,163],{"class":162},[59,3614,166],{"class":158},[59,3616,3617],{"class":414}," // 不会输出任何内容\n",[18,3619,3621],{"id":3620},"_2-权限控制","2. 权限控制",[50,3623,3625],{"className":52,"code":3624,"language":54,"meta":55,"style":55},"function createSecureObject(role) {\n  const data = {\n    sensitiveInfo: 'secret'\n  }\n  return new Proxy(data, {\n    get: (target, p, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.get(target, p, receiver)\n      }\n    },\n    set: (target, p, newValue, receiver) => {\n      if (p === 'sensitiveInfo' && role !== 'admin') {\n        throw new Error('Access Denied')\n      }\n      else {\n        return Reflect.set(target, p, newValue, receiver)\n      }\n    }\n  })\n}\n\nconst admin = createSecureObject('admin')\nconsole.log(admin.sensitiveInfo) // secret\n\nconst user = createSecureObject('user')\nconsole.log(user.sensitiveInfo) // Error: Access Denied\n",[27,3626,3627,3643,3654,3668,3672,3689,3713,3749,3770,3774,3781,3805,3809,3813,3841,3873,3891,3895,3901,3929,3933,3938,3942,3946,3950,3971,3992,3996,4018],{"__ignoreMap":55},[59,3628,3629,3631,3634,3636,3639,3641],{"class":61,"line":62},[59,3630,2924],{"class":65},[59,3632,3633],{"class":80}," createSecureObject",[59,3635,85],{"class":84},[59,3637,3638],{"class":229},"role",[59,3640,237],{"class":84},[59,3642,145],{"class":84},[59,3644,3645,3647,3650,3652],{"class":61,"line":148},[59,3646,2941],{"class":65},[59,3648,3649],{"class":69}," data",[59,3651,74],{"class":73},[59,3653,145],{"class":84},[59,3655,3656,3659,3661,3663,3666],{"class":61,"line":172},[59,3657,3658],{"class":151},"    sensitiveInfo",[59,3660,155],{"class":84},[59,3662,159],{"class":158},[59,3664,3665],{"class":162},"secret",[59,3667,1344],{"class":158},[59,3669,3670],{"class":61,"line":186},[59,3671,380],{"class":84},[59,3673,3674,3676,3678,3680,3682,3685,3687],{"class":61,"line":192},[59,3675,2961],{"class":280},[59,3677,77],{"class":65},[59,3679,81],{"class":80},[59,3681,85],{"class":84},[59,3683,3684],{"class":88},"data",[59,3686,92],{"class":84},[59,3688,145],{"class":84},[59,3690,3691,3693,3695,3697,3699,3701,3703,3705,3707,3709,3711],{"class":61,"line":199},[59,3692,3129],{"class":80},[59,3694,155],{"class":84},[59,3696,459],{"class":84},[59,3698,89],{"class":229},[59,3700,92],{"class":84},[59,3702,2987],{"class":229},[59,3704,92],{"class":84},[59,3706,2295],{"class":229},[59,3708,237],{"class":84},[59,3710,472],{"class":73},[59,3712,145],{"class":84},[59,3714,3715,3717,3719,3721,3723,3725,3728,3730,3732,3735,3738,3740,3743,3745,3747],{"class":61,"line":221},[59,3716,3039],{"class":280},[59,3718,459],{"class":84},[59,3720,23],{"class":88},[59,3722,3156],{"class":65},[59,3724,159],{"class":158},[59,3726,3727],{"class":162},"sensitiveInfo",[59,3729,166],{"class":158},[59,3731,3047],{"class":65},[59,3733,3734],{"class":88}," role",[59,3736,3737],{"class":65}," !==",[59,3739,159],{"class":158},[59,3741,3742],{"class":162},"admin",[59,3744,166],{"class":158},[59,3746,237],{"class":84},[59,3748,145],{"class":84},[59,3750,3751,3754,3756,3759,3761,3763,3766,3768],{"class":61,"line":242},[59,3752,3753],{"class":280},"        throw",[59,3755,77],{"class":65},[59,3757,3758],{"class":80}," Error",[59,3760,85],{"class":84},[59,3762,166],{"class":158},[59,3764,3765],{"class":162},"Access Denied",[59,3767,166],{"class":158},[59,3769,98],{"class":84},[59,3771,3772],{"class":61,"line":277},[59,3773,3119],{"class":84},[59,3775,3776,3779],{"class":61,"line":294},[59,3777,3778],{"class":280},"      else",[59,3780,145],{"class":84},[59,3782,3783,3785,3787,3789,3791,3793,3795,3797,3799,3801,3803],{"class":61,"line":300},[59,3784,3176],{"class":280},[59,3786,1254],{"class":88},[59,3788,248],{"class":84},[59,3790,116],{"class":80},[59,3792,85],{"class":84},[59,3794,89],{"class":88},[59,3796,92],{"class":84},[59,3798,2987],{"class":88},[59,3800,92],{"class":84},[59,3802,2295],{"class":88},[59,3804,98],{"class":84},[59,3806,3807],{"class":61,"line":323},[59,3808,3119],{"class":84},[59,3810,3811],{"class":61,"line":359},[59,3812,3124],{"class":84},[59,3814,3815,3817,3819,3821,3823,3825,3827,3829,3831,3833,3835,3837,3839],{"class":61,"line":377},[59,3816,2978],{"class":80},[59,3818,155],{"class":84},[59,3820,459],{"class":84},[59,3822,89],{"class":229},[59,3824,92],{"class":84},[59,3826,2987],{"class":229},[59,3828,92],{"class":84},[59,3830,2992],{"class":229},[59,3832,92],{"class":84},[59,3834,2295],{"class":229},[59,3836,237],{"class":84},[59,3838,472],{"class":73},[59,3840,145],{"class":84},[59,3842,3843,3845,3847,3849,3851,3853,3855,3857,3859,3861,3863,3865,3867,3869,3871],{"class":61,"line":383},[59,3844,3039],{"class":280},[59,3846,459],{"class":84},[59,3848,23],{"class":88},[59,3850,3156],{"class":65},[59,3852,159],{"class":158},[59,3854,3727],{"class":162},[59,3856,166],{"class":158},[59,3858,3047],{"class":65},[59,3860,3734],{"class":88},[59,3862,3737],{"class":65},[59,3864,159],{"class":158},[59,3866,3742],{"class":162},[59,3868,166],{"class":158},[59,3870,237],{"class":84},[59,3872,145],{"class":84},[59,3874,3875,3877,3879,3881,3883,3885,3887,3889],{"class":61,"line":389},[59,3876,3753],{"class":280},[59,3878,77],{"class":65},[59,3880,3758],{"class":80},[59,3882,85],{"class":84},[59,3884,166],{"class":158},[59,3886,3765],{"class":162},[59,3888,166],{"class":158},[59,3890,98],{"class":84},[59,3892,3893],{"class":61,"line":394},[59,3894,3119],{"class":84},[59,3896,3897,3899],{"class":61,"line":418},[59,3898,3778],{"class":280},[59,3900,145],{"class":84},[59,3902,3903,3905,3907,3909,3911,3913,3915,3917,3919,3921,3923,3925,3927],{"class":61,"line":756},[59,3904,3176],{"class":280},[59,3906,1254],{"class":88},[59,3908,248],{"class":84},[59,3910,120],{"class":80},[59,3912,85],{"class":84},[59,3914,89],{"class":88},[59,3916,92],{"class":84},[59,3918,2987],{"class":88},[59,3920,92],{"class":84},[59,3922,2992],{"class":88},[59,3924,92],{"class":84},[59,3926,2295],{"class":88},[59,3928,98],{"class":84},[59,3930,3931],{"class":61,"line":2062},[59,3932,3119],{"class":84},[59,3934,3935],{"class":61,"line":3274},[59,3936,3937],{"class":84},"    }\n",[59,3939,3940],{"class":61,"line":3279},[59,3941,3438],{"class":84},[59,3943,3944],{"class":61,"line":3292},[59,3945,189],{"class":84},[59,3947,3948],{"class":61,"line":3315},[59,3949,196],{"emptyLinePlaceholder":195},[59,3951,3952,3954,3957,3959,3961,3963,3965,3967,3969],{"class":61,"line":3338},[59,3953,66],{"class":65},[59,3955,3956],{"class":69}," admin",[59,3958,74],{"class":73},[59,3960,3633],{"class":80},[59,3962,85],{"class":84},[59,3964,166],{"class":158},[59,3966,3742],{"class":162},[59,3968,166],{"class":158},[59,3970,98],{"class":84},[59,3972,3973,3975,3977,3979,3981,3983,3985,3987,3989],{"class":61,"line":3361},[59,3974,642],{"class":88},[59,3976,248],{"class":84},[59,3978,251],{"class":80},[59,3980,85],{"class":84},[59,3982,3742],{"class":88},[59,3984,248],{"class":84},[59,3986,3727],{"class":88},[59,3988,237],{"class":84},[59,3990,3991],{"class":414}," // secret\n",[59,3993,3994],{"class":61,"line":3382},[59,3995,196],{"emptyLinePlaceholder":195},[59,3997,3998,4000,4003,4005,4007,4009,4011,4014,4016],{"class":61,"line":3388},[59,3999,66],{"class":65},[59,4001,4002],{"class":69}," user",[59,4004,74],{"class":73},[59,4006,3633],{"class":80},[59,4008,85],{"class":84},[59,4010,166],{"class":158},[59,4012,4013],{"class":162},"user",[59,4015,166],{"class":158},[59,4017,98],{"class":84},[59,4019,4020,4022,4024,4026,4028,4030,4032,4034,4036],{"class":61,"line":3393},[59,4021,642],{"class":88},[59,4023,248],{"class":84},[59,4025,251],{"class":80},[59,4027,85],{"class":84},[59,4029,4013],{"class":88},[59,4031,248],{"class":84},[59,4033,3727],{"class":88},[59,4035,237],{"class":84},[59,4037,4038],{"class":414}," // Error: Access Denied\n",[18,4040,4042],{"id":4041},"_3-面向切面编程","3. 面向切面编程",[23,4044,4045],{},"通过 Proxy 拦截函数,可以对函数的执行添加行为,例如计算函数执行消耗的时间",[50,4047,4049],{"className":52,"code":4048,"language":54,"meta":55,"style":55},"function calcFuncExecTime(func) {\n  return new Proxy(func, {\n    apply(target, thisArg, args) {\n      const start = performance.now()\n      const result = Reflect.apply(target, thisArg, args)\n      const end = performance.now()\n      console.log(`function execution time ${(end - start).toFixed(3)}ms`)\n      return result\n    }\n  })\n}\n\nconst sum = calcFuncExecTime((a, b) => a + b)\nsum(1, 2) // function execution time 0.043ms\n",[27,4050,4051,4067,4083,4105,4124,4152,4169,4216,4223,4227,4231,4235,4239,4269],{"__ignoreMap":55},[59,4052,4053,4055,4058,4060,4063,4065],{"class":61,"line":62},[59,4054,2924],{"class":65},[59,4056,4057],{"class":80}," calcFuncExecTime",[59,4059,85],{"class":84},[59,4061,4062],{"class":229},"func",[59,4064,237],{"class":84},[59,4066,145],{"class":84},[59,4068,4069,4071,4073,4075,4077,4079,4081],{"class":61,"line":148},[59,4070,2961],{"class":280},[59,4072,77],{"class":65},[59,4074,81],{"class":80},[59,4076,85],{"class":84},[59,4078,4062],{"class":88},[59,4080,92],{"class":84},[59,4082,145],{"class":84},[59,4084,4085,4088,4090,4092,4094,4096,4098,4101,4103],{"class":61,"line":172},[59,4086,4087],{"class":80},"    apply",[59,4089,85],{"class":84},[59,4091,89],{"class":229},[59,4093,92],{"class":84},[59,4095,521],{"class":229},[59,4097,92],{"class":84},[59,4099,4100],{"class":229}," args",[59,4102,237],{"class":84},[59,4104,145],{"class":84},[59,4106,4107,4109,4112,4114,4117,4119,4122],{"class":61,"line":186},[59,4108,3005],{"class":65},[59,4110,4111],{"class":69}," start",[59,4113,74],{"class":73},[59,4115,4116],{"class":88}," performance",[59,4118,248],{"class":84},[59,4120,4121],{"class":80},"now",[59,4123,3597],{"class":84},[59,4125,4126,4128,4130,4132,4134,4136,4138,4140,4142,4144,4146,4148,4150],{"class":61,"line":192},[59,4127,3005],{"class":65},[59,4129,1163],{"class":69},[59,4131,74],{"class":73},[59,4133,1254],{"class":88},[59,4135,248],{"class":84},[59,4137,615],{"class":80},[59,4139,85],{"class":84},[59,4141,89],{"class":88},[59,4143,92],{"class":84},[59,4145,521],{"class":88},[59,4147,92],{"class":84},[59,4149,4100],{"class":88},[59,4151,98],{"class":84},[59,4153,4154,4156,4159,4161,4163,4165,4167],{"class":61,"line":199},[59,4155,3005],{"class":65},[59,4157,4158],{"class":69}," end",[59,4160,74],{"class":73},[59,4162,4116],{"class":88},[59,4164,248],{"class":84},[59,4166,4121],{"class":80},[59,4168,3597],{"class":84},[59,4170,4171,4174,4176,4178,4180,4182,4185,4187,4189,4192,4194,4196,4198,4201,4203,4205,4207,4209,4212,4214],{"class":61,"line":221},[59,4172,4173],{"class":88},"      console",[59,4175,248],{"class":84},[59,4177,251],{"class":80},[59,4179,85],{"class":84},[59,4181,256],{"class":158},[59,4183,4184],{"class":162},"function execution time ",[59,4186,263],{"class":262},[59,4188,85],{"class":567},[59,4190,4191],{"class":266},"end",[59,4193,3352],{"class":65},[59,4195,4111],{"class":266},[59,4197,3082],{"class":567},[59,4199,4200],{"class":80},"toFixed",[59,4202,85],{"class":567},[59,4204,702],{"class":180},[59,4206,237],{"class":567},[59,4208,270],{"class":262},[59,4210,4211],{"class":162},"ms",[59,4213,256],{"class":158},[59,4215,98],{"class":84},[59,4217,4218,4220],{"class":61,"line":242},[59,4219,3407],{"class":280},[59,4221,4222],{"class":88}," result\n",[59,4224,4225],{"class":61,"line":277},[59,4226,3937],{"class":84},[59,4228,4229],{"class":61,"line":294},[59,4230,3438],{"class":84},[59,4232,4233],{"class":61,"line":300},[59,4234,189],{"class":84},[59,4236,4237],{"class":61,"line":323},[59,4238,196],{"emptyLinePlaceholder":195},[59,4240,4241,4243,4245,4247,4249,4251,4253,4255,4257,4259,4261,4263,4265,4267],{"class":61,"line":359},[59,4242,66],{"class":65},[59,4244,454],{"class":69},[59,4246,74],{"class":73},[59,4248,4057],{"class":80},[59,4250,3088],{"class":84},[59,4252,462],{"class":229},[59,4254,92],{"class":84},[59,4256,467],{"class":229},[59,4258,237],{"class":84},[59,4260,472],{"class":73},[59,4262,475],{"class":88},[59,4264,478],{"class":65},[59,4266,467],{"class":88},[59,4268,98],{"class":84},[59,4270,4271,4273,4275,4277,4279,4281,4283],{"class":61,"line":377},[59,4272,503],{"class":80},[59,4274,85],{"class":84},[59,4276,656],{"class":180},[59,4278,92],{"class":84},[59,4280,661],{"class":180},[59,4282,237],{"class":84},[59,4284,4285],{"class":414}," // function execution time 0.043ms\n",[4287,4288,4289],"style",{},"html pre.shiki code .s8I54, html code.shiki .s8I54{--shiki-default:#F97583;--shiki-dark:#CB7676}html pre.shiki code .sXTEK, html code.shiki .sXTEK{--shiki-default:#79B8FF;--shiki-dark:#BD976A}html pre.shiki code .soRP2, html code.shiki .soRP2{--shiki-default:#F97583;--shiki-dark:#666666}html pre.shiki code .scd8n, html code.shiki .scd8n{--shiki-default:#B392F0;--shiki-dark:#80A665}html pre.shiki code .sybYZ, html code.shiki .sybYZ{--shiki-default:#E1E4E8;--shiki-dark:#666666}html pre.shiki code .sVbU4, html code.shiki .sVbU4{--shiki-default:#E1E4E8;--shiki-dark:#BD976A}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html pre.shiki code .sqmIX, html code.shiki .sqmIX{--shiki-default:#E1E4E8;--shiki-dark:#B8A965}html pre.shiki code .sajHj, html code.shiki .sajHj{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D77}html pre.shiki code .sx1Rn, html code.shiki .sx1Rn{--shiki-default:#9ECBFF;--shiki-dark:#C98A7D}html pre.shiki code .svno3, html code.shiki .svno3{--shiki-default:#79B8FF;--shiki-dark:#4C9A91}html pre.shiki code .sSfpy, html code.shiki .sSfpy{--shiki-default:#FFAB70;--shiki-dark:#BD976A}html pre.shiki code .sOPOU, html code.shiki .sOPOU{--shiki-default:#9ECBFF;--shiki-dark:#4D9375}html pre.shiki code .sGUJ0, html code.shiki .sGUJ0{--shiki-default:#E1E4E8;--shiki-dark:#C98A7D}html pre.shiki code .scBr_, html code.shiki .scBr_{--shiki-default:#F97583;--shiki-dark:#4D9375}html pre.shiki code .sKXKF, html code.shiki .sKXKF{--shiki-default:#6A737D;--shiki-dark:#758575DD}html pre.shiki code .snnN9, html code.shiki .snnN9{--shiki-default:#9ECBFF;--shiki-dark:#666666}html pre.shiki code .smuiB, html code.shiki .smuiB{--shiki-default:#79B8FF;--shiki-dark:#CB7676}html pre.shiki code .s3iJD, html code.shiki .s3iJD{--shiki-default:#B392F0;--shiki-dark:#5DA994}html pre.shiki code .s_3qV, html code.shiki .s_3qV{--shiki-default:#79B8FF;--shiki-dark:#C99076}html pre.shiki code .sSBLT, html code.shiki .sSBLT{--shiki-default:#79B8FF;--shiki-dark:#4D9375}",{"title":55,"searchDepth":148,"depth":148,"links":4291},[4292,4293,4294,4298,4304,4311,4312,4313],{"id":20,"depth":148,"text":21},{"id":124,"depth":148,"text":125},{"id":430,"depth":148,"text":431,"children":4295},[4296,4297],{"id":435,"depth":172,"text":436},{"id":820,"depth":172,"text":821},{"id":1118,"depth":148,"text":4299,"children":4300},"1. 使用Reflcet和直接使用语法操作对象的区别",[4301,4302,4303],{"id":1126,"depth":172,"text":1127},{"id":1316,"depth":172,"text":1317},{"id":1675,"depth":172,"text":1676},{"id":2243,"depth":148,"text":2244,"children":4305},[4306,4307,4309],{"id":2247,"depth":172,"text":2248},{"id":2431,"depth":172,"text":4308},"2.2 确保正确的this",{"id":2886,"depth":172,"text":4310},"2.3 总结:在Proxy中使用Reflect的原因",{"id":2913,"depth":148,"text":2914},{"id":3620,"depth":148,"text":3621},{"id":4041,"depth":148,"text":4042},"2025-04-11T00:00:00.000Z",null,"md",{},"/blog/202504/understand-proxy-and-reflcet","qingkun",{"title":5,"description":4315},"blog/202504/01.understand-proxy-and-reflcet","TbaUDbg37JNxhpT8Ey03t_H7ldqmrO0ARyDVGZJ21_o",1746757448403]